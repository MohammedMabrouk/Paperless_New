Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\n\r\nandroid {\r\n    compileSdkVersion 28\r\n    defaultConfig {\r\n        applicationId \"com.rentcentric.paperlesscounter\"\r\n        minSdkVersion 21\r\n        targetSdkVersion 28\r\n        versionCode 10\r\n        versionName \"2.0.0\"\r\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\r\n        setProperty(\"archivesBaseName\", \"Paperless_v\" + versionName)\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = 1.8\r\n        targetCompatibility = 1.8\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation 'com.android.support:appcompat-v7:28.0.0'\r\n    implementation 'com.android.support:support-v4:28.0.0'\r\n    implementation 'com.android.support:design:28.0.0'\r\n    implementation 'com.android.support.constraint:constraint-layout:1.1.3'\r\n    implementation 'com.squareup.retrofit2:retrofit:2.8.1'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.8.1'\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n    implementation 'com.github.gcacace:signature-pad:1.2.1'\r\n    implementation 'com.github.markushi:circlebutton:1.1'\r\n    implementation 'com.squareup.okhttp3:logging-interceptor:4.4.1'\r\n\r\n    // inspection: shared preferences, db\r\n    implementation 'com.facebook.stetho:stetho:1.5.1'\r\n\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'com.android.support.test:runner:1.0.2'\r\n    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/build.gradle	(date 1624630377388)
@@ -1,13 +1,13 @@
 apply plugin: 'com.android.application'
 
 android {
-    compileSdkVersion 28
+    compileSdkVersion 30
     defaultConfig {
         applicationId "com.rentcentric.paperlesscounter"
-        minSdkVersion 21
-        targetSdkVersion 28
-        versionCode 10
-        versionName "2.0.0"
+        minSdkVersion 23
+        targetSdkVersion 30
+        versionCode 13
+        versionName "2.0.1"
         testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
         setProperty("archivesBaseName", "Paperless_v" + versionName)
     }
@@ -25,19 +25,38 @@
 
 dependencies {
     implementation fileTree(dir: 'libs', include: ['*.jar'])
-    implementation 'com.android.support:appcompat-v7:28.0.0'
-    implementation 'com.android.support:support-v4:28.0.0'
-    implementation 'com.android.support:design:28.0.0'
-    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
+//    implementation 'com.android.support:appcompat-v7:28.0.0'
+//    implementation 'com.android.support:support-v4:28.0.0'
+//    implementation 'com.android.support:design:28.0.0'
+    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
+    implementation 'androidx.appcompat:appcompat:1.2.0'
+    implementation 'com.google.android.material:material:1.2.1'
+
+    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
     implementation 'com.squareup.retrofit2:retrofit:2.8.1'
     implementation 'com.squareup.retrofit2:converter-gson:2.8.1'
     implementation 'com.squareup.picasso:picasso:2.71828'
     implementation 'com.github.gcacace:signature-pad:1.2.1'
     implementation 'com.github.markushi:circlebutton:1.1'
-    implementation 'com.squareup.okhttp3:logging-interceptor:4.4.1'
+    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.1'
 
     // inspection: shared preferences, db
     implementation 'com.facebook.stetho:stetho:1.5.1'
+    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
+
+    // app version checking
+    implementation 'org.jsoup:jsoup:1.13.1'
+
+    // pdf viewer
+    implementation 'com.github.barteksc:android-pdf-viewer:3.2.0-beta.1'
+
+    // webview
+    implementation 'com.github.delight-im:Android-AdvancedWebView:v3.2.1'
+
+    // app center
+    def appCenterSdkVersion = '4.1.0'
+    implementation "com.microsoft.appcenter:appcenter-analytics:${appCenterSdkVersion}"
+    implementation "com.microsoft.appcenter:appcenter-crashes:${appCenterSdkVersion}"
 
     testImplementation 'junit:junit:4.12'
     androidTestImplementation 'com.android.support.test:runner:1.0.2'
Index: app/src/main/java/com/rentcentric/paperlesscounter/Network/APIs.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.rentcentric.paperlesscounter.Network;\r\n\r\nimport com.rentcentric.paperlesscounter.Models.Requests.AddNewCustomerRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.GetMobileRequestsRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.GetPaperLessAgreementRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.GetPaperLessCounterAdsRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.MobileUserLoginRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.PaperLessAdminLogOutRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.PaperLessAdminLoginRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.SaveCustomerSignatureRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.UpdateCustomerRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.AddNewCustomerResponse;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.GetCountriesResponse;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.GetCustomerInfoResponse;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.GetMobileRequestsResponse;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.GetPaperLessAgreementResponse;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.GetPaperLessCounterAdsResponse;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.GetPayMethodsResponse;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.GetStatesResponse;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.MobileUserLoginResponse;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.PaperLessAdminLogOutResponse;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.PaperLessAdminLoginResponse;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.SaveCustomerSignatureResponse;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.UpdateCustomerResponse;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.http.Body;\r\nimport retrofit2.http.GET;\r\nimport retrofit2.http.POST;\r\nimport retrofit2.http.Query;\r\n\r\npublic interface APIs {\r\n\r\n    // login\r\n    @POST(\"MobileUserLogin\")\r\n    Call<MobileUserLoginResponse> mobileUserLogin(@Body MobileUserLoginRequest mobileUserLoginRequest);\r\n\r\n    @POST(\"PaperLess/PaperLessAdminLogin\")\r\n    Call<PaperLessAdminLoginResponse> paperLessAdminLogin(@Body PaperLessAdminLoginRequest paperLessAdminLoginRequest);\r\n\r\n    // logout\r\n    @POST(\"PaperLess/PaperLessAdminLogOut\")\r\n    Call<PaperLessAdminLogOutResponse> paperLessAdminLogOut(@Body PaperLessAdminLogOutRequest paperLessAdminLogOutRequest);\r\n\r\n\r\n    // get requests\r\n    @POST(\"PaperLess/GetMobileRequests\")\r\n    Call<GetMobileRequestsResponse> getMobileRequests(@Body GetMobileRequestsRequest getMobileRequestsRequest);\r\n\r\n\r\n    @POST(\"PaperLess/PaperLessAgreement\")\r\n    Call<GetPaperLessAgreementResponse> getPaperLessAgreement(@Body GetPaperLessAgreementRequest getPaperLessAgreementRequest);\r\n\r\n    @POST(\"SaveCustomerSignature\")\r\n    Call<SaveCustomerSignatureResponse> saveCustomerSignature(@Body SaveCustomerSignatureRequest saveCustomerSignatureRequest);\r\n\r\n    @POST(\"PaperLess/GetPaperLessCounterAds\")\r\n    Call<GetPaperLessCounterAdsResponse> getPaperLessCounterAds(@Body GetPaperLessCounterAdsRequest getPaperLessCounterAdsRequest);\r\n\r\n    @GET(\"Setting/GetStates\")\r\n    Call<GetStatesResponse> getStates();\r\n\r\n    @GET(\"Setting/GetCountries\")\r\n    Call<GetCountriesResponse> getCountries();\r\n\r\n    @GET(\"Setting/GetPayMethods\")\r\n    Call<GetPayMethodsResponse> getPayMethods();\r\n\r\n\r\n    // customer\r\n    @POST(\"Customer/AddNewCustomer\")\r\n    Call<AddNewCustomerResponse> addNewCustomer(@Body AddNewCustomerRequest request);\r\n\r\n    @POST(\"Customer/UpdateCustomer\")\r\n    Call<UpdateCustomerResponse> updateCustomerInfo(@Body UpdateCustomerRequest updateCustomerRequest);\r\n\r\n    @GET(\"Customer/GetCustomer\")\r\n    Call<GetCustomerInfoResponse> getCustomerInformation(@Query(\"customerId\") String customerId);\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Network/APIs.java	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Network/APIs.java	(date 1610631016191)
@@ -4,10 +4,14 @@
 import com.rentcentric.paperlesscounter.Models.Requests.GetMobileRequestsRequest;
 import com.rentcentric.paperlesscounter.Models.Requests.GetPaperLessAgreementRequest;
 import com.rentcentric.paperlesscounter.Models.Requests.GetPaperLessCounterAdsRequest;
+import com.rentcentric.paperlesscounter.Models.Requests.GetPaperLessTempChargeSummeryRequest;
+import com.rentcentric.paperlesscounter.Models.Requests.GetSignatureSetupsRequest;
 import com.rentcentric.paperlesscounter.Models.Requests.MobileUserLoginRequest;
 import com.rentcentric.paperlesscounter.Models.Requests.PaperLessAdminLogOutRequest;
 import com.rentcentric.paperlesscounter.Models.Requests.PaperLessAdminLoginRequest;
+import com.rentcentric.paperlesscounter.Models.Requests.PaperLessSaveCustomerCheckInSignatureRequest;
 import com.rentcentric.paperlesscounter.Models.Requests.SaveCustomerSignatureRequest;
+import com.rentcentric.paperlesscounter.Models.Requests.SaveSignatureRequest;
 import com.rentcentric.paperlesscounter.Models.Requests.UpdateCustomerRequest;
 import com.rentcentric.paperlesscounter.Models.Responses.AddNewCustomerResponse;
 import com.rentcentric.paperlesscounter.Models.Responses.GetCountriesResponse;
@@ -15,12 +19,16 @@
 import com.rentcentric.paperlesscounter.Models.Responses.GetMobileRequestsResponse;
 import com.rentcentric.paperlesscounter.Models.Responses.GetPaperLessAgreementResponse;
 import com.rentcentric.paperlesscounter.Models.Responses.GetPaperLessCounterAdsResponse;
+import com.rentcentric.paperlesscounter.Models.Responses.GetPaperLessTempChargeSummeryResponse;
 import com.rentcentric.paperlesscounter.Models.Responses.GetPayMethodsResponse;
+import com.rentcentric.paperlesscounter.Models.Responses.GetSignatureSetupsResponse;
 import com.rentcentric.paperlesscounter.Models.Responses.GetStatesResponse;
 import com.rentcentric.paperlesscounter.Models.Responses.MobileUserLoginResponse;
 import com.rentcentric.paperlesscounter.Models.Responses.PaperLessAdminLogOutResponse;
 import com.rentcentric.paperlesscounter.Models.Responses.PaperLessAdminLoginResponse;
+import com.rentcentric.paperlesscounter.Models.Responses.PaperLessSaveCustomerCheckInSignatureResponse;
 import com.rentcentric.paperlesscounter.Models.Responses.SaveCustomerSignatureResponse;
+import com.rentcentric.paperlesscounter.Models.Responses.SaveSignatureResponse;
 import com.rentcentric.paperlesscounter.Models.Responses.UpdateCustomerResponse;
 
 import retrofit2.Call;
@@ -42,21 +50,19 @@
     @POST("PaperLess/PaperLessAdminLogOut")
     Call<PaperLessAdminLogOutResponse> paperLessAdminLogOut(@Body PaperLessAdminLogOutRequest paperLessAdminLogOutRequest);
 
-
     // get requests
     @POST("PaperLess/GetMobileRequests")
     Call<GetMobileRequestsResponse> getMobileRequests(@Body GetMobileRequestsRequest getMobileRequestsRequest);
 
-
     @POST("PaperLess/PaperLessAgreement")
     Call<GetPaperLessAgreementResponse> getPaperLessAgreement(@Body GetPaperLessAgreementRequest getPaperLessAgreementRequest);
 
-    @POST("SaveCustomerSignature")
-    Call<SaveCustomerSignatureResponse> saveCustomerSignature(@Body SaveCustomerSignatureRequest saveCustomerSignatureRequest);
-
     @POST("PaperLess/GetPaperLessCounterAds")
     Call<GetPaperLessCounterAdsResponse> getPaperLessCounterAds(@Body GetPaperLessCounterAdsRequest getPaperLessCounterAdsRequest);
 
+    @POST("PaperLess/GetPaperLessTempChargeSummery")
+    Call<GetPaperLessTempChargeSummeryResponse> getPaperLessTempChargeSummery(@Body GetPaperLessTempChargeSummeryRequest getPaperLessTempChargeSummeryRequest);
+
     @GET("Setting/GetStates")
     Call<GetStatesResponse> getStates();
 
@@ -66,7 +72,6 @@
     @GET("Setting/GetPayMethods")
     Call<GetPayMethodsResponse> getPayMethods();
 
-
     // customer
     @POST("Customer/AddNewCustomer")
     Call<AddNewCustomerResponse> addNewCustomer(@Body AddNewCustomerRequest request);
@@ -77,4 +82,16 @@
     @GET("Customer/GetCustomer")
     Call<GetCustomerInfoResponse> getCustomerInformation(@Query("customerId") String customerId);
 
+    @POST("PaperLess/PaperLessSaveCustomerSignature")
+    Call<SaveCustomerSignatureResponse> saveCustomerSignature(@Body SaveCustomerSignatureRequest saveCustomerSignatureRequest);
+
+    @POST("PaperLess/PaperLessSaveCustomerCheckInSignature")
+    Call<PaperLessSaveCustomerCheckInSignatureResponse> saveCustomerSignatureForCheckIn(@Body PaperLessSaveCustomerCheckInSignatureRequest saveCustomerSignatureRequest);
+
+    // Signature setups
+    @POST("Damage/GetSignatureSetups")
+    Call<GetSignatureSetupsResponse> getSignatureSetups(@Body GetSignatureSetupsRequest getSignatureSetupsRequest);
+
+    @POST("PaperLess/PaperLessSaveSignatures")
+    Call<SaveSignatureResponse> saveSignatureSetups(@Body SaveSignatureRequest saveSignatureRequest);
 }
\ No newline at end of file
Index: app/src/main/java/com/rentcentric/paperlesscounter/Network/RetrofitFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.rentcentric.paperlesscounter.Network;\r\n\r\nimport com.rentcentric.paperlesscounter.BuildConfig;\r\nimport java.io.IOException;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport okhttp3.Interceptor;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.Response;\r\nimport okhttp3.logging.HttpLoggingInterceptor;\r\nimport retrofit2.Retrofit;\r\nimport retrofit2.converter.gson.GsonConverterFactory;\r\n\r\npublic class RetrofitFactory {\r\n    public static APIs getUserLoginService() {\r\n        HttpLoggingInterceptor interceptor = new HttpLoggingInterceptor();\r\n        if(BuildConfig.DEBUG) interceptor.setLevel(HttpLoggingInterceptor.Level.BODY);\r\n        else interceptor.setLevel(HttpLoggingInterceptor.Level.NONE);\r\n\r\n        final OkHttpClient okHttpClient = new OkHttpClient.Builder()\r\n                .readTimeout(6, TimeUnit.MINUTES)\r\n                .connectTimeout(6, TimeUnit.MINUTES)\r\n                .writeTimeout(6, TimeUnit.MINUTES)\r\n                .addInterceptor(interceptor)\r\n                .build();\r\n\r\n        return new Retrofit.Builder()\r\n                .baseUrl(\"https://www5.rentcentric.com/Portal_Service/PortalService.svc/\")\r\n                .client(okHttpClient)\r\n                .addConverterFactory(GsonConverterFactory.create())\r\n                .build()\r\n                .create(APIs.class);\r\n    }\r\n\r\n    public static APIs getOldClientService(String serverName, String clientId) {\r\n        HttpLoggingInterceptor interceptor = new HttpLoggingInterceptor();\r\n        if(BuildConfig.DEBUG) interceptor.setLevel(HttpLoggingInterceptor.Level.BODY);\r\n        else interceptor.setLevel(HttpLoggingInterceptor.Level.NONE);\r\n\r\n        final OkHttpClient okHttpClient = new OkHttpClient.Builder()\r\n                .readTimeout(600000, TimeUnit.SECONDS)\r\n                .connectTimeout(600000, TimeUnit.SECONDS)\r\n                .addInterceptor(interceptor)\r\n                .build();\r\n\r\n        return new Retrofit.Builder()\r\n                .baseUrl(\"https://\" + serverName + \".rentcentric.com/Client\" + clientId + \"/mobileservice.svc/\")\r\n                .client(okHttpClient)\r\n                .addConverterFactory(GsonConverterFactory.create())\r\n                .build()\r\n                .create(APIs.class);\r\n    }\r\n\r\n    public static APIs getClientService(String serverName, String clientId, String token) {\r\n        HttpLoggingInterceptor interceptor = new HttpLoggingInterceptor();\r\n        if(BuildConfig.DEBUG) interceptor.setLevel(HttpLoggingInterceptor.Level.BODY);\r\n        else interceptor.setLevel(HttpLoggingInterceptor.Level.NONE);\r\n\r\n        final OkHttpClient okHttpClient = new OkHttpClient.Builder()\r\n                .readTimeout(6, TimeUnit.MINUTES)\r\n                .connectTimeout(6, TimeUnit.MINUTES)\r\n                .writeTimeout(6, TimeUnit.MINUTES)\r\n                .addInterceptor(new Interceptor() {\r\n                    @Override\r\n                    public Response intercept(Chain chain) throws IOException {\r\n                        Request request = chain.request().newBuilder()\r\n                                .addHeader(\"Authorization\", token)\r\n                                .build();\r\n                        return chain.proceed(request);\r\n                    }\r\n                })\r\n                .addInterceptor(interceptor)\r\n                .build();\r\n\r\n        return new Retrofit.Builder()\r\n                .baseUrl(\"https://\" + serverName + \".rentcentric.com/Client\" + clientId + \"/CarShareSelfServiceApi/api/\")\r\n                //http://www5.rentcentric.com:80/Client6913/CarShareSelfServiceApi/api/PaperLess/PaperLessAdminLogin\r\n                .client(okHttpClient)\r\n                .addConverterFactory(GsonConverterFactory.create())\r\n                .build()\r\n                .create(APIs.class);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Network/RetrofitFactory.java	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Network/RetrofitFactory.java	(date 1624630700934)
@@ -33,24 +33,24 @@
                 .create(APIs.class);
     }
 
-    public static APIs getOldClientService(String serverName, String clientId) {
-        HttpLoggingInterceptor interceptor = new HttpLoggingInterceptor();
-        if(BuildConfig.DEBUG) interceptor.setLevel(HttpLoggingInterceptor.Level.BODY);
-        else interceptor.setLevel(HttpLoggingInterceptor.Level.NONE);
-
-        final OkHttpClient okHttpClient = new OkHttpClient.Builder()
-                .readTimeout(600000, TimeUnit.SECONDS)
-                .connectTimeout(600000, TimeUnit.SECONDS)
-                .addInterceptor(interceptor)
-                .build();
-
-        return new Retrofit.Builder()
-                .baseUrl("https://" + serverName + ".rentcentric.com/Client" + clientId + "/mobileservice.svc/")
-                .client(okHttpClient)
-                .addConverterFactory(GsonConverterFactory.create())
-                .build()
-                .create(APIs.class);
-    }
+//    public static APIs getOldClientService(String serverName, String clientId) {
+//        HttpLoggingInterceptor interceptor = new HttpLoggingInterceptor();
+//        if(BuildConfig.DEBUG) interceptor.setLevel(HttpLoggingInterceptor.Level.BODY);
+//        else interceptor.setLevel(HttpLoggingInterceptor.Level.NONE);
+//
+//        final OkHttpClient okHttpClient = new OkHttpClient.Builder()
+//                .readTimeout(600000, TimeUnit.SECONDS)
+//                .connectTimeout(600000, TimeUnit.SECONDS)
+//                .addInterceptor(interceptor)
+//                .build();
+//
+//        return new Retrofit.Builder()
+//                .baseUrl("https://" + serverName + ".rentcentric.com/Client" + clientId + "/mobileservice.svc/")
+//                .client(okHttpClient)
+//                .addConverterFactory(GsonConverterFactory.create())
+//                .build()
+//                .create(APIs.class);
+//    }
 
     public static APIs getClientService(String serverName, String clientId, String token) {
         HttpLoggingInterceptor interceptor = new HttpLoggingInterceptor();
@@ -66,6 +66,9 @@
                     public Response intercept(Chain chain) throws IOException {
                         Request request = chain.request().newBuilder()
                                 .addHeader("Authorization", token)
+                                .addHeader("AppName", "Paperless")
+                                .addHeader("Platform", "Android")
+                                .addHeader("AppVersion", BuildConfig.VERSION_NAME)
                                 .build();
                         return chain.proceed(request);
                     }
Index: .idea/encodings.xml
===================================================================
--- .idea/encodings.xml	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ .idea/encodings.xml	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="Encoding" addBOMForNewFiles="with NO BOM" />
-</project>
\ No newline at end of file
Index: app/src/main/java/com/rentcentric/paperlesscounter/Utility/NetworkUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Utility/NetworkUtil.java	(date 1610037896452)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Utility/NetworkUtil.java	(date 1610037896452)
@@ -0,0 +1,14 @@
+package com.rentcentric.paperlesscounter.Utility;
+
+import android.content.Context;
+import android.net.ConnectivityManager;
+import android.net.NetworkInfo;
+
+public class NetworkUtil {
+    public static boolean isOnline(Context context) {
+        ConnectivityManager cm = (ConnectivityManager)context.getSystemService(Context.CONNECTIVITY_SERVICE);
+        NetworkInfo netInfo = cm.getActiveNetworkInfo();
+
+        return netInfo != null && netInfo.isConnectedOrConnecting();
+    }
+}
Index: app/src/main/java/com/rentcentric/paperlesscounter/Utility/Const.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Utility/Const.java	(date 1603370187475)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Utility/Const.java	(date 1603370187475)
@@ -0,0 +1,7 @@
+package com.rentcentric.paperlesscounter.Utility;
+
+
+public class Const {
+    public static final String INTENT_SIGNATURES_KEY = "signatures";
+    public static final String INTENT_RESERVATION_ID = "reservation_id";
+}
Index: app/src/main/java/com/rentcentric/paperlesscounter/Activities/SignaturesAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Activities/SignaturesAdapter.java	(date 1609958944239)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Activities/SignaturesAdapter.java	(date 1609958944239)
@@ -0,0 +1,151 @@
+package com.rentcentric.paperlesscounter.Activities;
+
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.util.Base64;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.TextView;
+
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.github.gcacace.signaturepad.views.SignaturePad;
+import com.rentcentric.paperlesscounter.Models.Requests.Signature;
+import com.rentcentric.paperlesscounter.Models.Responses.SignatureSetup;
+import com.rentcentric.paperlesscounter.R;
+
+import java.io.ByteArrayOutputStream;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Map;
+import java.util.Set;
+
+public class SignaturesAdapter extends RecyclerView.Adapter<SignaturesAdapter.SignaturesViewHolder> {
+
+    private ArrayList<SignatureSetup> signaturesList;
+    private Context context;
+
+    // for count
+    static Set<Integer> setOfSignedSignatures;
+
+    static private Signature signature;
+
+    // <index, signature>
+    public Map<Integer, Signature> signaturesMap;
+
+    public SignaturesAdapter(ArrayList<SignatureSetup> signaturesList, Context context) {
+        this.signaturesList = signaturesList;
+        this.context = context;
+        setOfSignedSignatures = new HashSet<>();
+
+        // init
+        signaturesMap = new HashMap<>();
+        for(int i = 0 ; i < signaturesList.size() ; i++){
+            signaturesMap.put(i, null);
+        }
+    }
+
+    @NonNull
+    @Override
+    public SignaturesViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {
+        return new SignaturesViewHolder(LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.card_signatures_initials, viewGroup, false));
+    }
+
+    @Override
+    public void onBindViewHolder(@NonNull final SignaturesViewHolder signaturesViewHolder, int i) {
+        // set item text
+        if (!signaturesList.get(i).getDisclaimer().isEmpty()) {
+            signaturesViewHolder.tvDisclaimer.setText(signaturesList.get(i).getDisclaimer());
+        }
+
+        // set signature
+//        if (signaturesMap.get(i) != null) {
+//            byte[] encodeByte = Base64.decode(signaturesMap.get(i).getSignatureImage(), Base64.DEFAULT);
+//            Bitmap bitmap = BitmapFactory.decodeByteArray(encodeByte, 0, encodeByte.length);
+//            signaturesViewHolder.spSignature.setSignatureBitmap(bitmap);
+//        }
+
+        signaturesViewHolder.spSignature.setOnSignedListener(new SignaturePad.OnSignedListener() {
+            @Override
+            public void onStartSigning() {
+
+            }
+
+            @Override
+            public void onSigned() {
+                if (signaturesViewHolder.spSignature.getTransparentSignatureBitmap(true) != null) {
+                    // add to counter
+                    setOfSignedSignatures.add(signaturesList.get(i).getSignatureSetupID());
+                    // add to signatures
+                    ByteArrayOutputStream bao = new ByteArrayOutputStream();
+                    signaturesViewHolder.spSignature.getTransparentSignatureBitmap(true).compress(Bitmap.CompressFormat.PNG, 100, bao);
+                    byte[] signatureByteArray = bao.toByteArray();
+                    signature = new Signature();
+                    signature.setSignatureImage(Base64.encodeToString(signatureByteArray, Base64.DEFAULT));
+                    signature.setSignatureSetupID(signaturesList.get(i).getSignatureSetupID());
+                    signaturesMap.put(i, signature);
+
+                    Log.v("signo", signaturesMap.toString() + " || " + setOfSignedSignatures.toString());
+                }
+            }
+
+            @Override
+            public void onClear() {
+                signaturesMap.put(i, null);
+
+                if (setOfSignedSignatures.size() > 0)
+                    setOfSignedSignatures.remove(signaturesList.get(i).getSignatureSetupID());
+
+                Log.v("signo", signaturesMap.toString() + " || " + setOfSignedSignatures.toString());
+            }
+        });
+
+    }
+
+    @Override
+    public long getItemId(int position) {
+        return position;
+    }
+
+    @Override
+    public int getItemViewType(int position) {
+        return position;
+    }
+
+    @Override
+    public int getItemCount() {
+        return signaturesList.size();
+    }
+
+    static class SignaturesViewHolder extends RecyclerView.ViewHolder {
+        // Data
+        int position;
+
+        // UI
+        TextView tvDisclaimer;
+        SignaturePad spSignature;
+        Button btnClear;
+
+        SignaturesViewHolder(@NonNull View itemView) {
+            super(itemView);
+            tvDisclaimer = itemView.findViewById(R.id.CardSignaturesInitials_TV_Disclaimer);
+            spSignature = itemView.findViewById(R.id.CardSignaturesInitials_SP);
+            btnClear = itemView.findViewById(R.id.btn_clear);
+
+            btnClear.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    spSignature.clear();
+                }
+            });
+        }
+
+
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/PaperLessAdminLoginCallBack.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.rentcentric.paperlesscounter.CallBacks;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Intent;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.widget.Toast;\r\n\r\nimport com.rentcentric.paperlesscounter.Activities.MainActivity;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.PaperLessAdminLoginRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.PaperLessAdminLoginResponse;\r\nimport com.rentcentric.paperlesscounter.Network.RetrofitFactory;\r\nimport com.rentcentric.paperlesscounter.Preferences.LoginPreference;\r\nimport com.rentcentric.paperlesscounter.R;\r\nimport com.rentcentric.paperlesscounter.Utility.Extensions;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class PaperLessAdminLoginCallBack implements Callback<PaperLessAdminLoginResponse> {\r\n\r\n    private AppCompatActivity context;\r\n    private ProgressDialog progressDialog;\r\n    private LoginPreference loginPreference;\r\n\r\n    public PaperLessAdminLoginCallBack(AppCompatActivity context, ProgressDialog progressDialog, PaperLessAdminLoginRequest request) {\r\n        this.context = context;\r\n        this.progressDialog = progressDialog;\r\n        loginPreference = new LoginPreference(context);\r\n        RetrofitFactory.getClientService(loginPreference.getServerName(),\r\n                loginPreference.getClientId(),\r\n                loginPreference.getToken()\r\n        ).paperLessAdminLogin(request).enqueue(this);\r\n    }\r\n\r\n    @Override\r\n    public void onResponse(Call<PaperLessAdminLoginResponse> call, Response<PaperLessAdminLoginResponse> response) {\r\n        progressDialog.dismiss();\r\n        if (response.isSuccessful()) {\r\n            if (response.body() != null && response.body().getState() != null && response.body().getState().equals(true)) {\r\n\r\n//                intent.putExtra(\"FullName\", response.body().getResult().getFullName());\r\n//                intent.putExtra(\"AdminID\", response.body().getResult().getAdminId());\r\n//                intent.putExtra(\"LocationId\", response.body().getResult().getLocationId());\r\n//                intent.putExtra(\"PaperlessAdminLoginID\", response.body().getResult().getPaperLessAdminLoginId());\r\n\r\n                // save data\r\n                loginPreference.setIsSignedIn(true);\r\n                loginPreference.setFullName(response.body().getResult().getFullName());\r\n                loginPreference.setAdminId(response.body().getResult().getAdminId());\r\n                loginPreference.setLocationId(response.body().getResult().getLocationId().toString());\r\n                loginPreference.setPaperlessAdminLoginId(response.body().getResult().getPaperLessAdminLoginId().toString());\r\n                loginPreference.setToken(response.body().getResult().getToken());\r\n\r\n                Intent intent = new Intent(context, MainActivity.class);\r\n                context.startActivity(intent);\r\n                context.finish();\r\n            } else {\r\n                Extensions.Dialog(context, response.body() != null ? response.body().getDescription() : \"Error\");\r\n            }\r\n        } else {\r\n            Extensions.Dialog(context, context.getString(R.string.invalid_response) + \" (PaperLessAdminLogin API)\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onFailure(Call<PaperLessAdminLoginResponse> call, Throwable t) {\r\n        progressDialog.dismiss();\r\n        Toast.makeText(context, context.getString(R.string.server_connection_error), Toast.LENGTH_LONG).show();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/PaperLessAdminLoginCallBack.java	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/PaperLessAdminLoginCallBack.java	(date 1609872093769)
@@ -2,9 +2,10 @@
 
 import android.app.ProgressDialog;
 import android.content.Intent;
-import android.support.v7.app.AppCompatActivity;
 import android.widget.Toast;
 
+import androidx.appcompat.app.AppCompatActivity;
+
 import com.rentcentric.paperlesscounter.Activities.MainActivity;
 import com.rentcentric.paperlesscounter.Models.Requests.PaperLessAdminLoginRequest;
 import com.rentcentric.paperlesscounter.Models.Responses.PaperLessAdminLoginResponse;
Index: app/src/main/java/com/rentcentric/paperlesscounter/Activities/splash/SplashActivityPresenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Activities/splash/SplashActivityPresenter.java	(date 1610037958183)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Activities/splash/SplashActivityPresenter.java	(date 1610037958183)
@@ -0,0 +1,90 @@
+package com.rentcentric.paperlesscounter.Activities.splash;
+
+import android.content.Context;
+import android.os.Handler;
+
+import com.rentcentric.paperlesscounter.Utility.NetworkUtil;
+
+
+public class SplashActivityPresenter {
+    private View view;
+    private SplashRepository splashRepository;
+    private Context context;
+
+    SplashActivityPresenter(Context context, View view) {
+        this.context = context;
+        this.view = view;
+        splashRepository = new SplashRepository(context, this);
+    }
+
+    void checkLogin() {
+        Handler handler = new Handler();
+        handler.postDelayed(new Runnable() {
+            @Override
+            public void run() {
+                if (splashRepository.getLoginStatus()) {
+                    view.goToHomeActivity();
+                } else {
+                    view.goToLoginActivity();
+                }
+            }
+        }, 1000);
+    }
+
+    boolean isOnline() {
+        if (NetworkUtil.isOnline(context)) {
+            view.hideRetryButton();
+            view.showProgressBar();
+            return true;
+        } else {
+            view.hideProgressBar();
+            view.showRetryButton();
+            return false;
+        }
+    }
+
+    void checkAppVersion() {
+        view.hideRetryButton();
+        view.showProgressBar();
+        splashRepository.checkAppVersion();
+
+    }
+
+    void onOldAppVersionDetected(String latestVersion) {
+        view.hideProgressBar();
+        view.showAppUpdateDialog(latestVersion);
+        view.showRetryButton();
+    }
+
+    void onNewAppVersionDetected() {
+        view.hideRetryButton();
+        view.hideProgressBar();
+        view.checkLogin();
+    }
+
+    void onError(String message) {
+        view.hideProgressBar();
+        view.showError(message);
+        view.showRetryButton();
+    }
+
+    public interface View {
+        void showProgressBar();
+
+        void hideProgressBar();
+
+        void showRetryButton();
+
+        void hideRetryButton();
+
+        void goToLoginActivity();
+
+        void goToHomeActivity();
+
+        void showAppUpdateDialog(String latestVersion);
+
+        void showError(String message);
+
+        void checkLogin();
+    }
+}
Index: app/src/main/res/layout/activity_splash.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_splash.xml	(date 1610037531427)
+++ app/src/main/res/layout/activity_splash.xml	(date 1610037531427)
@@ -0,0 +1,59 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:gravity="center"
+    tools:context=".Activities.splash.SplashActivity">
+
+    <ImageView
+        android:id="@+id/logo_iv"
+        android:layout_width="300dp"
+        android:layout_height="100dp"
+        android:layout_marginStart="8dp"
+        android:layout_marginEnd="8dp"
+        android:src="@drawable/logoblue"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <ProgressBar
+        android:id="@+id/LoginProgressBar"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/logo_iv"
+        android:layout_centerHorizontal="true"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/logo_iv" />
+
+    <TextView
+        android:id="@+id/LoginRetry"
+        android:layout_width="@dimen/activity_splash_login_retry_width_height"
+        android:layout_height="@dimen/activity_splash_login_retry_width_height"
+        android:layout_below="@id/logo_iv"
+        android:layout_centerHorizontal="true"
+        android:drawableTop="@drawable/ic_refresh_black_24dp"
+        android:gravity="center"
+        android:text="@string/retry"
+        android:textColor="@color/colorPrimary"
+        android:visibility="invisible"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/logo_iv" />
+
+    <TextView
+        android:id="@+id/tv_version"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginEnd="16dp"
+        android:layout_marginBottom="16dp"
+        android:textColor="@color/colorAccent"
+        android:textSize="14sp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent" />
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_signatures.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_signatures.xml	(date 1609871586472)
+++ app/src/main/res/layout/activity_signatures.xml	(date 1609871586472)
@@ -0,0 +1,54 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    tools:context="com.rentcentric.paperlesscounter.Activities.SignaturesActivity">
+
+    <RelativeLayout
+        android:id="@+id/toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="50dp"
+        android:layout_alignParentTop="true"
+        android:background="@color/colorPrimary">
+
+        <ImageView
+            android:id="@+id/SignaturesBack"
+            android:layout_width="30dp"
+            android:layout_height="30dp"
+            android:layout_centerVertical="true"
+            android:layout_marginStart="10dp"
+            android:src="@drawable/ic_chevron_left_black_24dp"
+            tools:ignore="VectorDrawableCompat" />
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_centerInParent="true"
+            android:text="@string/disclaimer"
+            android:textColor="@color/colorWhite"
+            android:textSize="20sp" />
+
+    </RelativeLayout>
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/Signatures_RV"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_margin="5dp"
+        android:layout_below="@id/toolbar"
+        android:layout_above="@id/SignaturesNext"/>
+
+    <Button
+        android:id="@+id/SignaturesNext"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:layout_gravity="center"
+        android:background="@drawable/button_blue"
+        android:text="@string/continueBTN"
+        android:textColor="@color/colorWhite"
+        android:layout_margin="5dp"/>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <color name=\"colorPrimary\">#2196F3</color>\r\n    <color name=\"colorPrimaryDark\">#1976D2</color>\r\n    <color name=\"colorAccent\">#2196F3</color>\r\n    <color name=\"colorBlack\">#000000</color>\r\n    <color name=\"colorWhite\">#FFFFFF</color>\r\n    <color name=\"colorGrey\">#737373</color>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/res/values/colors.xml	(date 1609860534932)
@@ -6,4 +6,5 @@
     <color name="colorBlack">#000000</color>
     <color name="colorWhite">#FFFFFF</color>
     <color name="colorGrey">#737373</color>
+    <color name="colorGrayLight">#EEECED</color>
 </resources>
\ No newline at end of file
Index: app/src/main/res/values/dimes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/dimes.xml	(date 1610037615689)
+++ app/src/main/res/values/dimes.xml	(date 1610037615689)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <dimen name="ten_dp">10dp</dimen>
+    <dimen name="default_card_elevation">4dp</dimen>
+    <dimen name="activity_splash_logo_margin">30dp</dimen>
+    <dimen name="activity_splash_login_retry_width_height">50dp</dimen>
+    <dimen name="dp6">6dp</dimen>
+</resources>
\ No newline at end of file
Index: app/src/main/res/values/ic_launcher_background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <color name=\"ic_launcher_background\">#FFFFFF</color>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/ic_launcher_background.xml	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/res/values/ic_launcher_background.xml	(date 1620213388675)
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <color name="ic_launcher_background">#FFFFFF</color>
+    <color name="ic_launcher_background">#666666</color>
 </resources>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">Paperless</string>\r\n    <string name=\"navigation_drawer_open\">Open navigation drawer</string>\r\n    <string name=\"navigation_drawer_close\">Close navigation drawer</string>\r\n    <string name=\"loading\">Loading...</string>\r\n    <string name=\"invalid_response\">Invalid Response Received</string>\r\n    <string name=\"server_connection_error\">The connection to the server timed out</string>\r\n    <string name=\"ok\">OK</string>\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\r\n    <string name=\"required\">required</string>\r\n    <string name=\"invalid_email_address_error\">Invalid email address</string>\r\n    <string name=\"loading_txt\">loading...</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/res/values/strings.xml	(date 1610038168017)
@@ -11,4 +11,23 @@
     <string name="required">required</string>
     <string name="invalid_email_address_error">Invalid email address</string>
     <string name="loading_txt">loading...</string>
+
+    <string name="disclaimer">Disclaimer</string>
+    <string name="you_should_sign_all_items">You should sign all items.</string>
+    <string name="you_should_submit_your_signature">You should save your signatures.</string>
+    <string name="continueBTN">Continue</string>
+    <string name="please_sign_your_name">Please sign your name</string>
+    <string name="clear">clear</string>
+    <string name="include_your_credentials">Include your credentials</string>
+    <string name="charges_summary">Charges Summary</string>
+    <string name="retry">Retry</string>
+
+    <!-- version checking -->
+    <string name="you_are_not_updated_title">Update Available</string>
+    <string name="app_update_message">A new version of Paperless is available. Please update to version %1$s now.</string>
+    <string name="update_app">Update</string>
+    <string name="update">update</string>
+
+    <string name="network_error">Network error. Please check your connection.</string>
+
 </resources>
\ No newline at end of file
Index: app/src/main/res/layout/card_signatures_initials.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/card_signatures_initials.xml	(date 1609772807136)
+++ app/src/main/res/layout/card_signatures_initials.xml	(date 1609772807136)
@@ -0,0 +1,79 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.cardview.widget.CardView
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_margin="5dp"
+    app:cardCornerRadius="10dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        android:padding="5dp">
+
+        <TextView
+            android:id="@+id/CardSignaturesInitials_TV_Disclaimer"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="2dp"
+            android:layout_marginEnd="2dp"
+            android:layout_marginBottom="10dp"
+            android:textColor="@color/colorBlack" />
+
+        <View
+            android:layout_width="match_parent"
+            android:layout_height="1dp"
+            android:layout_gravity="center"
+            android:layout_margin="2dp"
+            android:background="#dedede" />
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:text="@string/please_sign_your_name" />
+
+        <RelativeLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="2dp"
+            android:layout_marginBottom="2dp"
+            android:background="@drawable/borderlight"
+            android:padding="2dp">
+
+            <com.github.gcacace.signaturepad.views.SignaturePad
+                android:id="@+id/CardSignaturesInitials_SP"
+                android:layout_width="match_parent"
+                android:layout_height="128dp"
+                android:background="#eee" />
+
+            <Button
+                android:id="@+id/btn_clear"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_alignParentTop="true"
+                android:layout_alignParentEnd="true"
+                android:layout_marginTop="8dp"
+                android:layout_marginEnd="8dp"
+                android:background="@color/colorAccent"
+                android:minWidth="0dp"
+                android:minHeight="0dp"
+                android:padding="5dp"
+                android:text="@string/clear"
+                android:textColor="@color/colorWhite" />
+
+        </RelativeLayout>
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="2dp"
+            android:layout_marginBottom="2dp"
+            android:gravity="center"
+            android:text="@string/include_your_credentials" />
+
+    </LinearLayout>
+
+</androidx.cardview.widget.CardView>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_baseline_refresh_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_baseline_refresh_24.xml	(date 1610026364437)
+++ app/src/main/res/drawable/ic_baseline_refresh_24.xml	(date 1610026364437)
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#FFFFFF"
+    android:viewportHeight="24" android:viewportWidth="24"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="@android:color/white" android:pathData="M17.65,6.35C16.2,4.9 14.21,4 12,4c-4.42,0 -7.99,3.58 -7.99,8s3.57,8 7.99,8c3.73,0 6.84,-2.55 7.73,-6h-2.08c-0.82,2.33 -3.04,4 -5.65,4 -3.31,0 -6,-2.69 -6,-6s2.69,-6 6,-6c1.66,0 3.14,0.69 4.22,1.78L13,11h7V4l-2.35,2.35z"/>
+</vector>
Index: app/src/main/res/drawable/ic_refresh_black_24dp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_refresh_black_24dp.xml	(date 1585233472278)
+++ app/src/main/res/drawable/ic_refresh_black_24dp.xml	(date 1585233472278)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportHeight="24.0"
+    android:viewportWidth="24.0">
+    <path
+        android:fillColor="#3789FB"
+        android:pathData="M17.65,6.35C16.2,4.9 14.21,4 12,4c-4.42,0 -7.99,3.58 -7.99,8s3.57,8 7.99,8c3.73,0 6.84,-2.55 7.73,-6h-2.08c-0.82,2.33 -3.04,4 -5.65,4 -3.31,0 -6,-2.69 -6,-6s2.69,-6 6,-6c1.66,0 3.14,0.69 4.22,1.78L13,11h7V4l-2.35,2.35z" />
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/borderlight.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/borderlight.xml	(date 1585233472251)
+++ app/src/main/res/drawable/borderlight.xml	(date 1585233472251)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+
+    <corners android:radius="5dp" />
+
+    <stroke
+        android:width="2dp"
+        android:color="@color/colorPrimary" />
+
+    <solid
+        android:color="@color/colorGrayLight"/>
+
+</shape>
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n    \r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:3.4.0'\r\n        \r\n\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ build.gradle	(date 1610316659022)
@@ -7,7 +7,7 @@
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.4.0'
+        classpath 'com.android.tools.build:gradle:4.1.1'
         
 
         // NOTE: Do not place your application dependencies here; they belong
@@ -19,9 +19,10 @@
     repositories {
         google()
         jcenter()
+        maven { url "https://jitpack.io" }
     }
 }
 
 task clean(type: Delete) {
     delete rootProject.buildDir
-}
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_test.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_test.xml	(date 1610318362438)
+++ app/src/main/res/layout/activity_test.xml	(date 1610318362438)
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".Activities.TestActivity">
+
+    <FrameLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent">
+<!--        <WebView-->
+<!--            android:id="@+id/Main_WV"-->
+<!--            android:layout_width="match_parent"-->
+<!--            android:layout_height="match_parent" />-->
+
+        <im.delight.android.webview.AdvancedWebView
+            android:id="@+id/Main_WV"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent" />
+
+        <com.github.barteksc.pdfviewer.PDFView
+            android:id="@+id/pdfView"
+            android:layout_margin="10dp"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"/>
+
+    </FrameLayout>
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"RunConfigurationProducerService\">\r\n    <option name=\"ignoredProducers\">\r\n      <set>\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/runConfigurations.xml	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ .idea/runConfigurations.xml	(date 1624619549925)
@@ -3,6 +3,7 @@
   <component name="RunConfigurationProducerService">
     <option name="ignoredProducers">
       <set>
+        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_7\" project-jdk-name=\"JDK\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ .idea/misc.xml	(date 1624620311249)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" project-jdk-name="JDK" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/GetSignatureSetupCallBack.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/GetSignatureSetupCallBack.java	(date 1624629065305)
+++ app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/GetSignatureSetupCallBack.java	(date 1624629065305)
@@ -0,0 +1,63 @@
+package com.rentcentric.paperlesscounter.CallBacks;
+
+import android.widget.Toast;
+
+import com.rentcentric.paperlesscounter.Activities.MainActivity;
+import com.rentcentric.paperlesscounter.Models.Requests.GetSignatureSetupsRequest;
+import com.rentcentric.paperlesscounter.Models.Responses.GetSignatureSetupsResponse;
+import com.rentcentric.paperlesscounter.Network.RetrofitFactory;
+import com.rentcentric.paperlesscounter.Preferences.LoginPreference;
+import com.rentcentric.paperlesscounter.R;
+import com.rentcentric.paperlesscounter.Utility.Extensions;
+
+import retrofit2.Call;
+import retrofit2.Callback;
+import retrofit2.Response;
+
+public class GetSignatureSetupCallBack implements Callback<GetSignatureSetupsResponse> {
+    private MainActivity mainActivity;
+    private LoginPreference loginPreference;
+
+    public GetSignatureSetupCallBack(
+            MainActivity mainActivity,
+            Integer locationId,
+            Integer reservationId,
+            Integer agreementId) {
+        this.mainActivity = mainActivity;
+        loginPreference = new LoginPreference(mainActivity);
+        RetrofitFactory.getClientService(
+                loginPreference.getServerName(),
+                loginPreference.getClientId(),
+                loginPreference.getToken()
+        ).getSignatureSetups(new GetSignatureSetupsRequest(
+                locationId,
+                reservationId,
+                 agreementId
+
+        )).enqueue(this);
+    }
+
+    @Override
+    public void onResponse(Call<GetSignatureSetupsResponse> call, Response<GetSignatureSetupsResponse> response) {
+        if (response.isSuccessful()) {
+            if (response.body() != null && response.body().getState()) {
+                // return signature list
+                if (response.body().getSignatureSetup().size() > 0) {
+                    mainActivity.onGetSignatureSetupSuccess(response.body().getSignatureSetup());
+                } else {
+                    mainActivity.onGetSignatureSetupSuccess(null);
+                }
+
+            } else {
+                Toast.makeText(mainActivity, "GetSignatureSetups API: " + response.body().getDescription(), Toast.LENGTH_LONG).show();
+            }
+        } else {
+            Extensions.Dialog(mainActivity, mainActivity.getString(R.string.invalid_response) + " (GetSignatureSetups API)");
+        }
+    }
+
+    @Override
+    public void onFailure(Call<GetSignatureSetupsResponse> call, Throwable t) {
+        Toast.makeText(mainActivity, mainActivity.getString(R.string.server_connection_error), Toast.LENGTH_LONG).show();
+    }
+}
Index: app/src/main/java/com/rentcentric/paperlesscounter/Activities/splash/SplashRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Activities/splash/SplashRepository.java	(date 1610038168009)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Activities/splash/SplashRepository.java	(date 1610038168009)
@@ -0,0 +1,99 @@
+package com.rentcentric.paperlesscounter.Activities.splash;
+
+import android.content.Context;
+import android.os.AsyncTask;
+
+
+import com.rentcentric.paperlesscounter.BuildConfig;
+import com.rentcentric.paperlesscounter.Preferences.LoginPreference;
+import com.rentcentric.paperlesscounter.R;
+
+import org.json.JSONObject;
+import org.jsoup.Jsoup;
+
+public class SplashRepository {
+    Context context;
+    LoginPreference loginPreference;
+    SplashActivityPresenter presenter;
+
+    SplashRepository(Context context, SplashActivityPresenter presenter) {
+        this.context = context;
+        this.loginPreference = new LoginPreference(context);
+        this.presenter = presenter;
+    }
+
+    boolean getLoginStatus() {
+        return loginPreference.isSignedIn();
+    }
+
+    void checkAppVersion() {
+        new ForceUpdateAsync().execute();
+    }
+
+    public class ForceUpdateAsync extends AsyncTask<String, String, JSONObject> {
+        private String latestVersion = null;
+//        private String currentVersion;
+//        private Context context;
+
+//        public ForceUpdateAsync(String currentVersion, Context context) {
+//            this.currentVersion = currentVersion;
+//            this.context = context;
+//        }
+
+        String networkErrorMessage = null;
+
+        @Override
+        protected JSONObject doInBackground(String... params) {
+            try {
+                latestVersion = Jsoup.connect("https://play.google.com/store/apps/details?id=" + context.getPackageName() + "&hl=en")
+                        .timeout(30000)
+                        .userAgent("Mozilla/5.0 (Windows; U; WindowsNT 5.1; en-US; rv1.8.1.6) Gecko/20070725 Firefox/2.0.0.6")
+                        .referrer("http://www.google.com")
+                        .get()
+                        .select("div.hAyfc:nth-child(4) > span:nth-child(2) > div:nth-child(1) > span:nth-child(1)")
+                        .first()
+                        .ownText();
+            } catch (Exception e) {
+                e.printStackTrace();
+//                networkErrorMessage = e.getLocalizedMessage();
+                networkErrorMessage = context.getString(R.string.network_error);
+            }
+            return new JSONObject();
+        }
+
+        @Override
+        protected void onPostExecute(JSONObject jsonObject) {
+            if (networkErrorMessage != null) {
+                presenter.onError(networkErrorMessage);
+            } else if (latestVersion != null) {
+                if (isOldVersion(BuildConfig.VERSION_NAME , latestVersion)) {
+//                    if ((context instanceof SplashActivity)) {
+//                        if (!((Activity) context).isFinishing()) {
+//                            showForceUpdateDialog();
+//                        }
+//                    }
+                    presenter.onOldAppVersionDetected(latestVersion);
+                } else {
+//                    ((SplashActivity) context).loginCheck();
+                    presenter.onNewAppVersionDetected();
+                }
+            }
+            super.onPostExecute(jsonObject);
+        }
+    }
+
+    boolean isOldVersion(String appVersion, String storeVersion) {
+        boolean isOld = false;
+
+        if (Integer.parseInt(appVersion.split("\\.")[0]) < Integer.parseInt(storeVersion.split("\\.")[0])) {
+            isOld = true;
+        } else if (Integer.parseInt(appVersion.split("\\.")[1]) < Integer.parseInt(storeVersion.split("\\.")[1]) && Integer.parseInt(appVersion.split("\\.")[0]) == Integer.parseInt(storeVersion.split("\\.")[0])) {
+            isOld = true;
+        } else if (appVersion.split("\\.").length > 2 && storeVersion.split("\\.").length > 2 &&
+                Integer.parseInt(appVersion.split("\\.")[2]) < Integer.parseInt(storeVersion.split("\\.")[2]) && Integer.parseInt(appVersion.split("\\.")[1]) == Integer.parseInt(storeVersion.split("\\.")[1]) && Integer.parseInt(appVersion.split("\\.")[0]) == Integer.parseInt(storeVersion.split("\\.")[0])) {
+            isOld = true;
+        }
+
+        return isOld;
+    }
+}
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(date 1624620311260)
+++ .idea/compiler.xml	(date 1624620311260)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel target="11" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(date 1581955910548)
+++ .idea/vcs.xml	(date 1581955910548)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/assetWizardSettings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/assetWizardSettings.xml	(date 1620213404739)
+++ .idea/assetWizardSettings.xml	(date 1620213404739)
@@ -0,0 +1,337 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="WizardSettings">
+    <option name="children">
+      <map>
+        <entry key="imageWizard">
+          <value>
+            <PersistentState>
+              <option name="children">
+                <map>
+                  <entry key="imageAssetPanel">
+                    <value>
+                      <PersistentState>
+                        <option name="children">
+                          <map>
+                            <entry key="actionbar">
+                              <value>
+                                <PersistentState>
+                                  <option name="children">
+                                    <map>
+                                      <entry key="clipArt">
+                                        <value>
+                                          <PersistentState>
+                                            <option name="values">
+                                              <map>
+                                                <entry key="color" value="000000" />
+                                                <entry key="imagePath" value="C:\Users\MOHAMED\AppData\Local\Temp\ic_android_black_24dp.xml" />
+                                              </map>
+                                            </option>
+                                          </PersistentState>
+                                        </value>
+                                      </entry>
+                                      <entry key="text">
+                                        <value>
+                                          <PersistentState>
+                                            <option name="values">
+                                              <map>
+                                                <entry key="color" value="000000" />
+                                              </map>
+                                            </option>
+                                          </PersistentState>
+                                        </value>
+                                      </entry>
+                                      <entry key="textAsset">
+                                        <value>
+                                          <PersistentState>
+                                            <option name="values">
+                                              <map>
+                                                <entry key="color" value="000000" />
+                                              </map>
+                                            </option>
+                                          </PersistentState>
+                                        </value>
+                                      </entry>
+                                    </map>
+                                  </option>
+                                </PersistentState>
+                              </value>
+                            </entry>
+                            <entry key="launcher">
+                              <value>
+                                <PersistentState>
+                                  <option name="children">
+                                    <map>
+                                      <entry key="foregroundClipArt">
+                                        <value>
+                                          <PersistentState>
+                                            <option name="values">
+                                              <map>
+                                                <entry key="imagePath" value="C:\Users\MOHAMED\AppData\Local\Temp\ic_android_black_24dp.xml" />
+                                              </map>
+                                            </option>
+                                          </PersistentState>
+                                        </value>
+                                      </entry>
+                                      <entry key="foregroundImage">
+                                        <value>
+                                          <PersistentState>
+                                            <option name="values">
+                                              <map>
+                                                <entry key="color" value="000000" />
+                                                <entry key="imagePath" value="C:\Users\MOHAMED\Desktop\new_icon.png" />
+                                                <entry key="scalingPercent" value="108" />
+                                                <entry key="trimmed" value="true" />
+                                              </map>
+                                            </option>
+                                          </PersistentState>
+                                        </value>
+                                      </entry>
+                                      <entry key="foregroundText">
+                                        <value>
+                                          <PersistentState>
+                                            <option name="values">
+                                              <map>
+                                                <entry key="color" value="000000" />
+                                              </map>
+                                            </option>
+                                          </PersistentState>
+                                        </value>
+                                      </entry>
+                                      <entry key="foregroundTextAsset">
+                                        <value>
+                                          <PersistentState>
+                                            <option name="values">
+                                              <map>
+                                                <entry key="color" value="000000" />
+                                              </map>
+                                            </option>
+                                          </PersistentState>
+                                        </value>
+                                      </entry>
+                                    </map>
+                                  </option>
+                                  <option name="values">
+                                    <map>
+                                      <entry key="backgroundAssetType" value="COLOR" />
+                                      <entry key="backgroundColor" value="666666" />
+                                    </map>
+                                  </option>
+                                </PersistentState>
+                              </value>
+                            </entry>
+                            <entry key="launcherLegacy">
+                              <value>
+                                <PersistentState>
+                                  <option name="children">
+                                    <map>
+                                      <entry key="clipArt">
+                                        <value>
+                                          <PersistentState>
+                                            <option name="values">
+                                              <map>
+                                                <entry key="color" value="000000" />
+                                                <entry key="imagePath" value="C:\Users\MOHAMED\AppData\Local\Temp\ic_android_black_24dp.xml" />
+                                              </map>
+                                            </option>
+                                          </PersistentState>
+                                        </value>
+                                      </entry>
+                                      <entry key="text">
+                                        <value>
+                                          <PersistentState>
+                                            <option name="values">
+                                              <map>
+                                                <entry key="color" value="000000" />
+                                              </map>
+                                            </option>
+                                          </PersistentState>
+                                        </value>
+                                      </entry>
+                                      <entry key="textAsset">
+                                        <value>
+                                          <PersistentState>
+                                            <option name="values">
+                                              <map>
+                                                <entry key="color" value="000000" />
+                                              </map>
+                                            </option>
+                                          </PersistentState>
+                                        </value>
+                                      </entry>
+                                    </map>
+                                  </option>
+                                </PersistentState>
+                              </value>
+                            </entry>
+                            <entry key="notification">
+                              <value>
+                                <PersistentState>
+                                  <option name="children">
+                                    <map>
+                                      <entry key="clipArt">
+                                        <value>
+                                          <PersistentState>
+                                            <option name="values">
+                                              <map>
+                                                <entry key="color" value="000000" />
+                                                <entry key="imagePath" value="C:\Users\MOHAMED\AppData\Local\Temp\ic_android_black_24dp.xml" />
+                                              </map>
+                                            </option>
+                                          </PersistentState>
+                                        </value>
+                                      </entry>
+                                      <entry key="text">
+                                        <value>
+                                          <PersistentState>
+                                            <option name="values">
+                                              <map>
+                                                <entry key="color" value="000000" />
+                                              </map>
+                                            </option>
+                                          </PersistentState>
+                                        </value>
+                                      </entry>
+                                      <entry key="textAsset">
+                                        <value>
+                                          <PersistentState>
+                                            <option name="values">
+                                              <map>
+                                                <entry key="color" value="000000" />
+                                              </map>
+                                            </option>
+                                          </PersistentState>
+                                        </value>
+                                      </entry>
+                                    </map>
+                                  </option>
+                                </PersistentState>
+                              </value>
+                            </entry>
+                            <entry key="tvBanner">
+                              <value>
+                                <PersistentState>
+                                  <option name="children">
+                                    <map>
+                                      <entry key="foregroundText">
+                                        <value>
+                                          <PersistentState>
+                                            <option name="values">
+                                              <map>
+                                                <entry key="color" value="000000" />
+                                              </map>
+                                            </option>
+                                          </PersistentState>
+                                        </value>
+                                      </entry>
+                                    </map>
+                                  </option>
+                                </PersistentState>
+                              </value>
+                            </entry>
+                            <entry key="tvChannel">
+                              <value>
+                                <PersistentState>
+                                  <option name="children">
+                                    <map>
+                                      <entry key="foregroundClipArt">
+                                        <value>
+                                          <PersistentState>
+                                            <option name="values">
+                                              <map>
+                                                <entry key="imagePath" value="C:\Users\MOHAMED\AppData\Local\Temp\ic_android_black_24dp.xml" />
+                                              </map>
+                                            </option>
+                                          </PersistentState>
+                                        </value>
+                                      </entry>
+                                      <entry key="foregroundImage">
+                                        <value>
+                                          <PersistentState>
+                                            <option name="values">
+                                              <map>
+                                                <entry key="color" value="000000" />
+                                              </map>
+                                            </option>
+                                          </PersistentState>
+                                        </value>
+                                      </entry>
+                                      <entry key="foregroundText">
+                                        <value>
+                                          <PersistentState>
+                                            <option name="values">
+                                              <map>
+                                                <entry key="color" value="000000" />
+                                              </map>
+                                            </option>
+                                          </PersistentState>
+                                        </value>
+                                      </entry>
+                                      <entry key="foregroundTextAsset">
+                                        <value>
+                                          <PersistentState>
+                                            <option name="values">
+                                              <map>
+                                                <entry key="color" value="000000" />
+                                              </map>
+                                            </option>
+                                          </PersistentState>
+                                        </value>
+                                      </entry>
+                                    </map>
+                                  </option>
+                                </PersistentState>
+                              </value>
+                            </entry>
+                          </map>
+                        </option>
+                      </PersistentState>
+                    </value>
+                  </entry>
+                </map>
+              </option>
+            </PersistentState>
+          </value>
+        </entry>
+        <entry key="vectorWizard">
+          <value>
+            <PersistentState>
+              <option name="children">
+                <map>
+                  <entry key="vectorAssetStep">
+                    <value>
+                      <PersistentState>
+                        <option name="children">
+                          <map>
+                            <entry key="clipartAsset">
+                              <value>
+                                <PersistentState>
+                                  <option name="values">
+                                    <map>
+                                      <entry key="url" value="file:/$PROJECT_DIR$/../../../android_sdk/icons/material/materialicons/refresh/baseline_refresh_24.xml" />
+                                    </map>
+                                  </option>
+                                </PersistentState>
+                              </value>
+                            </entry>
+                          </map>
+                        </option>
+                        <option name="values">
+                          <map>
+                            <entry key="color" value="ffffff" />
+                            <entry key="outputName" value="ic_baseline_refresh_24" />
+                            <entry key="sourceFile" value="D:\AndroidProjects\RentCentric\@Paperless" />
+                          </map>
+                        </option>
+                      </PersistentState>
+                    </value>
+                  </entry>
+                </map>
+              </option>
+            </PersistentState>
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <compositeConfiguration>\r\n          <compositeBuild compositeDefinitionSource=\"SCRIPT\" />\r\n        </compositeConfiguration>\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ .idea/gradle.xml	(date 1603323668677)
@@ -1,14 +1,21 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
-        <compositeConfiguration>
-          <compositeBuild compositeDefinitionSource="SCRIPT" />
-        </compositeConfiguration>
+        <option name="delegatedBuild" value="true" />
+        <option name="testRunner" value="PLATFORM" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="modules">
+          <set>
+            <option value="$PROJECT_DIR$" />
+            <option value="$PROJECT_DIR$/app" />
+          </set>
+        </option>
         <option name="resolveModulePerSourceSet" value="false" />
+        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
Index: app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/MobileUserLoginCallBack.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.rentcentric.paperlesscounter.CallBacks;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.widget.Toast;\r\n\r\nimport com.rentcentric.paperlesscounter.Models.Requests.MobileUserLoginRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.PaperLessAdminLoginRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.MobileUserLoginResponse;\r\nimport com.rentcentric.paperlesscounter.Network.RetrofitFactory;\r\nimport com.rentcentric.paperlesscounter.Preferences.LoginPreference;\r\nimport com.rentcentric.paperlesscounter.R;\r\nimport com.rentcentric.paperlesscounter.Utility.Extensions;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class MobileUserLoginCallBack implements Callback<MobileUserLoginResponse> {\r\n\r\n    private AppCompatActivity context;\r\n    private ProgressDialog progressDialog;\r\n    private MobileUserLoginRequest request;\r\n    private LoginPreference loginPreference;\r\n\r\n    public MobileUserLoginCallBack(AppCompatActivity context, MobileUserLoginRequest request) {\r\n        this.context = context;\r\n        this.request = request;\r\n        loginPreference = new LoginPreference(context);\r\n        progressDialog = ProgressDialog.show(context, \"\", context.getString(R.string.loading));\r\n\r\n        RetrofitFactory.getUserLoginService().mobileUserLogin(request).enqueue(this);\r\n    }\r\n\r\n    @Override\r\n    public void onResponse(Call<MobileUserLoginResponse> call, Response<MobileUserLoginResponse> response) {\r\n        if (response.isSuccessful()) {\r\n            if (response.body().getStatus().getStatusCode().equals(\"0\")) {\r\n                loginPreference.setServerName(response.body().getServerName());\r\n                loginPreference.setClientId(response.body().getClientID().toString());\r\n\r\n                new PaperLessAdminLoginCallBack(context, progressDialog, new PaperLessAdminLoginRequest(\r\n                        request.getEmail(),\r\n                        loginPreference.getClientId(),\r\n                        request.getPassword()));\r\n            } else {\r\n                progressDialog.dismiss();\r\n                Extensions.Dialog(context, response.body().getStatus().getDescription());\r\n            }\r\n        } else {\r\n            progressDialog.dismiss();\r\n            Extensions.Dialog(context, context.getString(R.string.invalid_response) + \" (MobileUserLogin API)\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onFailure(Call<MobileUserLoginResponse> call, Throwable t) {\r\n        progressDialog.dismiss();\r\n        Toast.makeText(context, context.getString(R.string.server_connection_error), Toast.LENGTH_LONG).show();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/MobileUserLoginCallBack.java	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/MobileUserLoginCallBack.java	(date 1609872093732)
@@ -1,9 +1,10 @@
 package com.rentcentric.paperlesscounter.CallBacks;
 
 import android.app.ProgressDialog;
-import android.support.v7.app.AppCompatActivity;
 import android.widget.Toast;
 
+import androidx.appcompat.app.AppCompatActivity;
+
 import com.rentcentric.paperlesscounter.Models.Requests.MobileUserLoginRequest;
 import com.rentcentric.paperlesscounter.Models.Requests.PaperLessAdminLoginRequest;
 import com.rentcentric.paperlesscounter.Models.Responses.MobileUserLoginResponse;
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.rentcentric.paperlesscounter\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\"\r\n        tools:ignore=\"GoogleAppIndexingWarning\">\r\n        <activity android:name=\".Activities.CustomerInformationActivity\">\r\n\r\n        </activity>\r\n        <activity\r\n            android:name=\".Activities.LoginActivity\"\r\n            android:screenOrientation=\"portrait\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".Activities.MainActivity\"\r\n            android:screenOrientation=\"portrait\" />\r\n        <activity\r\n            android:name=\".Activities.AdsActivity\"\r\n            android:screenOrientation=\"portrait\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/AndroidManifest.xml	(date 1610386498633)
@@ -4,6 +4,8 @@
     package="com.rentcentric.paperlesscounter">
 
     <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
 
     <application
         android:allowBackup="true"
@@ -12,17 +14,41 @@
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
         android:theme="@style/AppTheme"
-        tools:ignore="GoogleAppIndexingWarning">
-        <activity android:name=".Activities.CustomerInformationActivity">
-
+        tools:ignore="GoogleAppIndexingWarning"
+        android:usesCleartextTraffic="true">
+        <activity android:name=".Activities.TestActivity">
+<!--            <intent-filter>-->
+<!--                <action android:name="android.intent.action.MAIN" />-->
+<!--                <category android:name="android.intent.category.LAUNCHER" />-->
+<!--            </intent-filter>-->
         </activity>
         <activity
-            android:name=".Activities.LoginActivity"
+            android:name=".Activities.splash.SplashActivity"
             android:screenOrientation="portrait">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
+        </activity>
+        <activity android:name=".Activities.ChargesSummaryActivity">
+
+            <!-- <intent-filter> -->
+            <!-- <action android:name="android.intent.action.MAIN" /> -->
+            <!-- <category android:name="android.intent.category.LAUNCHER" /> -->
+            <!-- </intent-filter> -->
+        </activity>
+        <activity android:name=".Activities.CustomerInformationActivity" />
+        <activity android:name=".Activities.SignaturesActivity" />
+        <activity
+            android:name=".Activities.LoginActivity"
+            android:screenOrientation="portrait">
+
+            <!-- <intent-filter> -->
+            <!-- <action android:name="android.intent.action.MAIN" /> -->
+
+
+            <!-- <category android:name="android.intent.category.LAUNCHER" /> -->
+            <!-- </intent-filter> -->
         </activity>
         <activity
             android:name=".Activities.MainActivity"
Index: .idea/codeStyles/Project.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/codeStyles/Project.xml	(date 1600946305886)
+++ .idea/codeStyles/Project.xml	(date 1600946305886)
@@ -0,0 +1,134 @@
+<component name="ProjectCodeStyleConfiguration">
+  <code_scheme name="Project" version="173">
+    <JetCodeStyleSettings>
+      <option name="PACKAGES_TO_USE_STAR_IMPORTS">
+        <value>
+          <package name="java.util" alias="false" withSubpackages="false" />
+          <package name="kotlinx.android.synthetic" alias="false" withSubpackages="true" />
+          <package name="io.ktor" alias="false" withSubpackages="true" />
+        </value>
+      </option>
+      <option name="PACKAGES_IMPORT_LAYOUT">
+        <value>
+          <package name="" alias="false" withSubpackages="true" />
+          <package name="java" alias="false" withSubpackages="true" />
+          <package name="javax" alias="false" withSubpackages="true" />
+          <package name="kotlin" alias="false" withSubpackages="true" />
+          <package name="" alias="true" withSubpackages="true" />
+        </value>
+      </option>
+    </JetCodeStyleSettings>
+    <codeStyleSettings language="XML">
+      <indentOptions>
+        <option name="CONTINUATION_INDENT_SIZE" value="4" />
+      </indentOptions>
+      <arrangement>
+        <rules>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>xmlns:android</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>^$</XML_NAMESPACE>
+                </AND>
+              </match>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>xmlns:.*</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>^$</XML_NAMESPACE>
+                </AND>
+              </match>
+              <order>BY_NAME</order>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>.*:id</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                </AND>
+              </match>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>.*:name</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                </AND>
+              </match>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>name</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>^$</XML_NAMESPACE>
+                </AND>
+              </match>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>style</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>^$</XML_NAMESPACE>
+                </AND>
+              </match>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>.*</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>^$</XML_NAMESPACE>
+                </AND>
+              </match>
+              <order>BY_NAME</order>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>.*</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                </AND>
+              </match>
+              <order>ANDROID_ATTRIBUTE_ORDER</order>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>.*</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>.*</XML_NAMESPACE>
+                </AND>
+              </match>
+              <order>BY_NAME</order>
+            </rule>
+          </section>
+        </rules>
+      </arrangement>
+    </codeStyleSettings>
+  </code_scheme>
+</component>
\ No newline at end of file
Index: app/src/main/java/com/rentcentric/paperlesscounter/Activities/TestActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Activities/TestActivity.java	(date 1610318427415)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Activities/TestActivity.java	(date 1610318427415)
@@ -0,0 +1,243 @@
+package com.rentcentric.paperlesscounter.Activities;
+
+import android.annotation.SuppressLint;
+import android.app.ProgressDialog;
+import android.content.Intent;
+import android.graphics.Bitmap;
+import android.os.AsyncTask;
+import android.os.Bundle;
+import android.os.Environment;
+import android.util.Log;
+import android.view.View;
+import android.widget.Toast;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import com.github.barteksc.pdfviewer.listener.OnLoadCompleteListener;
+import com.rentcentric.paperlesscounter.R;
+
+import java.io.BufferedInputStream;
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.net.URL;
+import java.net.URLConnection;
+
+import im.delight.android.webview.AdvancedWebView;
+
+public class TestActivity extends AppCompatActivity implements AdvancedWebView.Listener {
+
+    AdvancedWebView wvMain;
+    com.github.barteksc.pdfviewer.PDFView pdfView;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_test);
+
+        pdfView = findViewById(R.id.pdfView);
+
+        wvMain = findViewById(R.id.Main_WV);
+//        wvMain.getSettings().setSupportZoom(true);
+//        wvMain.getSettings().setBuiltInZoomControls(true);
+//        wvMain.getSettings().setLoadWithOverviewMode(true);
+//        wvMain.getSettings().setUseWideViewPort(true);
+//        wvMain.getSettings().setAllowFileAccess(true);
+//        wvMain.getSettings().setJavaScriptEnabled(true);
+//        wvMain.getSettings().setAppCacheEnabled(true);
+
+        wvMain.setListener(this, this);
+        wvMain.setMixedContentAllowed(false);
+
+        wvMain.loadUrl("https://www6.rentcentric.com/Client7178/agreements/PDFDynamicStandardAgreement.aspx?AgreementFormID=385&AgreementID=6897");
+//
+
+//                wvMain.setWebViewClient(new WebViewClient() {
+//            @Override
+//            public void onReceivedError(WebView view, WebResourceRequest request, WebResourceError error) {
+//                super.onReceivedError(view, request, error);
+//                showToast(error.getDescription().toString());
+//            }
+//
+//            @Override
+//            public void onPageFinished(WebView view, String url) {
+////                pbMain.setVisibility(View.INVISIBLE);
+//                Log.v("", "");
+//            }
+//
+//
+//            @Override
+//            public boolean shouldOverrideUrlLoading(WebView view, String url) {
+//                return false;
+//            }
+//        });
+//                String url = "https://www6.rentcentric.com/Client7178/agreements/PDFDynamicStandardAgreement.aspx?AgreementFormID=385&AgreementID=6897";
+//        try {
+//            url = URLEncoder.encode("file url", "utf-8");
+//        } catch (UnsupportedEncodingException e) {
+//            e.printStackTrace();
+//        }
+////        wvMain.loadUrl("https://drive.google.com/viewerng/viewer?embedded=true&url=http://www.africau.edu/images/default/sample.pdf");
+//        wvMain.loadUrl("http://docs.google.com/gview?embedded=true&url="+url);
+    }
+
+    void showToast(String msg) {
+        Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
+    }
+
+    @SuppressLint("NewApi")
+    @Override
+    protected void onResume() {
+        super.onResume();
+        wvMain.onResume();
+        // ...
+    }
+
+    @SuppressLint("NewApi")
+    @Override
+    protected void onPause() {
+        wvMain.onPause();
+        // ...
+        super.onPause();
+    }
+
+    @Override
+    protected void onDestroy() {
+        wvMain.onDestroy();
+        // ...
+        super.onDestroy();
+    }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent intent) {
+        super.onActivityResult(requestCode, resultCode, intent);
+        wvMain.onActivityResult(requestCode, resultCode, intent);
+        // ...
+    }
+
+    @Override
+    public void onBackPressed() {
+        if (!wvMain.onBackPressed()) {
+            return;
+        }
+        // ...
+        super.onBackPressed();
+    }
+
+    @Override
+    public void onPageStarted(String url, Bitmap favicon) {
+        Log.v("","");
+    }
+
+    @Override
+    public void onPageFinished(String url) {
+        Log.v("","");
+    }
+
+    @Override
+    public void onPageError(int errorCode, String description, String failingUrl) {
+        Log.v("","");
+    }
+
+    @Override
+    public void onDownloadRequested(String url, String suggestedFilename, String mimeType, long contentLength, String contentDisposition, String userAgent) {
+        Log.v("","");
+        new DownloadFileFromURL().execute(url);
+    }
+
+    @Override
+    public void onExternalPageRequest(String url) {
+        Log.v("","");
+    }
+
+    class DownloadFileFromURL extends AsyncTask<String, String, String> {
+
+        /**
+         * Before starting background thread
+         * */
+        @Override
+        protected void onPreExecute() {
+            super.onPreExecute();
+            System.out.println("Starting download");
+
+        }
+
+        /**
+         * Downloading file in background thread
+         * */
+        @Override
+        protected String doInBackground(String... f_url) {
+            int count;
+            String filePath = "";
+            try {
+                String timeStamp = String.valueOf(System.currentTimeMillis());
+                String imageFileName = timeStamp + "_contract";
+                File storageDir = TestActivity.this.getExternalFilesDir(Environment.DIRECTORY_DOCUMENTS);
+                File pdfFile = File.createTempFile(
+                        imageFileName,  /* prefix */
+                        ".pdf",         /* suffix */
+                        storageDir      /* directory */
+                );
+
+                filePath = pdfFile.getPath();
+
+//                String root = Environment.getExternalStorageDirectory().toString();
+
+                System.out.println("Downloading");
+                URL url = new URL(f_url[0]);
+
+                URLConnection conection = url.openConnection();
+                conection.connect();
+                // getting file length
+                int lenghtOfFile = conection.getContentLength();
+
+                // input stream to read file - with 8k buffer
+                InputStream input = new BufferedInputStream(url.openStream(), 8192);
+
+                // Output stream to write file
+
+                OutputStream output = new FileOutputStream(pdfFile);
+                byte data[] = new byte[1024];
+
+                long total = 0;
+                while ((count = input.read(data)) != -1) {
+                    total += count;
+
+                    // writing data to file
+                    output.write(data, 0, count);
+
+                }
+
+                // flushing output
+                output.flush();
+
+                // closing streams
+                output.close();
+                input.close();
+
+            } catch (Exception e) {
+                Log.e("Error: ", e.getMessage());
+            }
+
+            return filePath;
+        }
+
+
+
+        /**
+         * After completing background task
+         * **/
+        @Override
+        protected void onPostExecute(String file_path) {
+            System.out.println("Downloaded");
+            pdfView.fromFile(new File(file_path))
+                    .enableSwipe(true)
+                    .enableAnnotationRendering(true)
+                    .swipeHorizontal(false)
+                    .load();
+        }
+
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/GetPaperLessCounterAdsCallBack.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.rentcentric.paperlesscounter.CallBacks;\r\n\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.widget.Toast;\r\n\r\nimport com.rentcentric.paperlesscounter.Activities.AdsActivity;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.GetPaperLessCounterAdsRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.GetPaperLessCounterAdsResponse;\r\nimport com.rentcentric.paperlesscounter.Network.RetrofitFactory;\r\nimport com.rentcentric.paperlesscounter.Preferences.LoginPreference;\r\nimport com.rentcentric.paperlesscounter.R;\r\nimport com.rentcentric.paperlesscounter.Utility.Extensions;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class GetPaperLessCounterAdsCallBack implements Callback<GetPaperLessCounterAdsResponse> {\r\n\r\n    private AppCompatActivity context;\r\n    private LoginPreference loginPreference;\r\n\r\n    public GetPaperLessCounterAdsCallBack(AppCompatActivity context, GetPaperLessCounterAdsRequest request) {\r\n        if (context != null) {\r\n            this.context = context;\r\n            loginPreference = new LoginPreference(context);\r\n            RetrofitFactory.getClientService(loginPreference.getServerName(),\r\n                    loginPreference.getClientId(),\r\n                    loginPreference.getToken()\r\n            ).getPaperLessCounterAds(request).enqueue(this);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onResponse(Call<GetPaperLessCounterAdsResponse> call, Response<GetPaperLessCounterAdsResponse> response) {\r\n        if (response.isSuccessful()) {\r\n            if (response.body() != null && response.body().getState() != null && response.body().getState().equals(true)) {\r\n                ((AdsActivity) context).onGetPaperLessCounterAdsCallBack(response.body());\r\n            } else {\r\n                Extensions.Dialog(context, response.body().getDescription());\r\n            }\r\n        } else {\r\n            Extensions.Dialog(context, context.getString(R.string.invalid_response) + \" (GetPaperLessCounterAds API)\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onFailure(Call<GetPaperLessCounterAdsResponse> call, Throwable t) {\r\n        Toast.makeText(context, context.getString(R.string.server_connection_error), Toast.LENGTH_LONG).show();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/GetPaperLessCounterAdsCallBack.java	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/GetPaperLessCounterAdsCallBack.java	(date 1609872093778)
@@ -1,8 +1,9 @@
 package com.rentcentric.paperlesscounter.CallBacks;
 
-import android.support.v7.app.AppCompatActivity;
 import android.widget.Toast;
 
+import androidx.appcompat.app.AppCompatActivity;
+
 import com.rentcentric.paperlesscounter.Activities.AdsActivity;
 import com.rentcentric.paperlesscounter.Models.Requests.GetPaperLessCounterAdsRequest;
 import com.rentcentric.paperlesscounter.Models.Responses.GetPaperLessCounterAdsResponse;
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<android.support.v4.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/drawer_layout\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/colorWhite\"\r\n    android:fitsSystemWindows=\"true\"\r\n    tools:openDrawer=\"start\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <android.support.design.widget.AppBarLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:theme=\"@style/AppTheme.AppBarOverlay\">\r\n\r\n            <android.support.v7.widget.Toolbar\r\n                android:id=\"@+id/toolbar\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"?attr/actionBarSize\"\r\n                android:background=\"?attr/colorPrimary\"\r\n                app:popupTheme=\"@style/AppTheme.PopupOverlay\" />\r\n\r\n        </android.support.design.widget.AppBarLayout>\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\">\r\n\r\n            <RelativeLayout\r\n                android:id=\"@+id/TimeoutContainer\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:visibility=\"gone\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerInParent=\"true\"\r\n                    android:gravity=\"center\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"50dp\"\r\n                        android:layout_height=\"50dp\"\r\n                        android:layout_marginBottom=\"10dp\"\r\n                        android:src=\"@drawable/ic_error_outline_black_24dp\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/TimeoutError\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:gravity=\"center\"\r\n                        android:textColor=\"@color/colorBlack\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/TimeoutRetry\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:padding=\"10dp\"\r\n                        android:text=\"RETRY\"\r\n                        android:textColor=\"@color/colorAccent\"\r\n                        android:textSize=\"16sp\" />\r\n\r\n                </LinearLayout>\r\n\r\n            </RelativeLayout>\r\n\r\n            <RelativeLayout\r\n                android:id=\"@+id/NotFoundContainer\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:visibility=\"gone\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerInParent=\"true\"\r\n                    android:gravity=\"center\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:text=\"There is no contract.\"\r\n                        android:textColor=\"#000000\"\r\n                        android:textSize=\"20sp\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/Main_TV_Timer\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginTop=\"20dp\"\r\n                        android:layout_marginBottom=\"20dp\"\r\n                        android:text=\"Going back to Ads page after 5 sec...\"\r\n                        android:textSize=\"16sp\" />\r\n\r\n                    <ProgressBar\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\" />\r\n\r\n                </LinearLayout>\r\n\r\n            </RelativeLayout>\r\n\r\n            <RelativeLayout\r\n                android:id=\"@+id/MainContainer\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <LinearLayout\r\n                        android:id=\"@+id/ContractContainer\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:layout_weight=\"0\">\r\n\r\n                        <RelativeLayout\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"match_parent\">\r\n\r\n                            <WebView\r\n                                android:id=\"@+id/Main_WV\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"match_parent\" />\r\n\r\n                            <ProgressBar\r\n                                android:id=\"@+id/Main_PB\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_centerInParent=\"true\" />\r\n\r\n                        </RelativeLayout>\r\n\r\n                    </LinearLayout>\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:background=\"@color/colorWhite\"\r\n                        android:orientation=\"vertical\"\r\n                        android:visibility=\"visible\">\r\n\r\n                        <TextView\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_margin=\"5dp\"\r\n                            android:gravity=\"center\"\r\n                            android:text=\"Please sign your name within this box :\\n Include your credentials as necessary\" />\r\n\r\n                        <RelativeLayout\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_margin=\"5dp\"\r\n                            android:layout_marginBottom=\"10dp\"\r\n                            android:background=\"@drawable/border\"\r\n                            android:padding=\"2dp\">\r\n\r\n                            <com.github.gcacace.signaturepad.views.SignaturePad\r\n                                android:id=\"@+id/Main_SP\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"128dp\"\r\n                                android:background=\"#eee\" />\r\n\r\n                        </RelativeLayout>\r\n\r\n                        <LinearLayout\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:orientation=\"horizontal\">\r\n\r\n                            <Button\r\n                                android:id=\"@+id/Main_BTN_Cancel\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_weight=\"1\"\r\n                                android:background=\"@drawable/border\"\r\n                                android:text=\"Cancel\"\r\n                                android:textColor=\"@color/colorAccent\" />\r\n\r\n                            <Button\r\n                                android:id=\"@+id/Main_BTN_Submit\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_weight=\"1\"\r\n                                android:background=\"@drawable/border_solid\"\r\n                                android:text=\"Submit\"\r\n                                android:textColor=\"@color/colorWhite\" />\r\n                        </LinearLayout>\r\n\r\n                    </LinearLayout>\r\n\r\n                </LinearLayout>\r\n\r\n            </RelativeLayout>\r\n\r\n        </RelativeLayout>\r\n\r\n    </LinearLayout>\r\n\r\n    <android.support.design.widget.NavigationView\r\n        android:visibility=\"visible\"\r\n        android:id=\"@+id/nav_view\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_gravity=\"start\"\r\n        android:background=\"#aa000000\"\r\n        android:fitsSystemWindows=\"true\"\r\n        app:headerLayout=\"@layout/nav_header_main\"\r\n        app:itemIconTint=\"@drawable/nav_item\"\r\n        app:itemTextColor=\"@drawable/nav_item\"\r\n        app:menu=\"@menu/activity_main_drawer\" />\r\n\r\n</android.support.v4.widget.DrawerLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/res/layout/activity_main.xml	(date 1610319038710)
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
-<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<androidx.drawerlayout.widget.DrawerLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     android:id="@+id/drawer_layout"
@@ -14,19 +15,19 @@
         android:layout_height="match_parent"
         android:orientation="vertical">
 
-        <android.support.design.widget.AppBarLayout
+        <com.google.android.material.appbar.AppBarLayout
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:theme="@style/AppTheme.AppBarOverlay">
 
-            <android.support.v7.widget.Toolbar
+            <androidx.appcompat.widget.Toolbar
                 android:id="@+id/toolbar"
                 android:layout_width="match_parent"
                 android:layout_height="?attr/actionBarSize"
                 android:background="?attr/colorPrimary"
                 app:popupTheme="@style/AppTheme.PopupOverlay" />
 
-        </android.support.design.widget.AppBarLayout>
+        </com.google.android.material.appbar.AppBarLayout>
 
         <RelativeLayout
             android:layout_width="match_parent"
@@ -128,10 +129,16 @@
                             android:layout_width="match_parent"
                             android:layout_height="match_parent">
 
-                            <WebView
+                            <im.delight.android.webview.AdvancedWebView
                                 android:id="@+id/Main_WV"
                                 android:layout_width="match_parent"
                                 android:layout_height="match_parent" />
+
+                            <com.github.barteksc.pdfviewer.PDFView
+                                android:id="@+id/pdfView"
+                                android:layout_margin="10dp"
+                                android:layout_width="match_parent"
+                                android:layout_height="match_parent"/>
 
                             <ProgressBar
                                 android:id="@+id/Main_PB"
@@ -207,7 +214,7 @@
 
     </LinearLayout>
 
-    <android.support.design.widget.NavigationView
+    <com.google.android.material.navigation.NavigationView
         android:visibility="visible"
         android:id="@+id/nav_view"
         android:layout_width="wrap_content"
@@ -220,4 +227,4 @@
         app:itemTextColor="@drawable/nav_item"
         app:menu="@menu/activity_main_drawer" />
 
-</android.support.v4.widget.DrawerLayout>
\ No newline at end of file
+</androidx.drawerlayout.widget.DrawerLayout>
\ No newline at end of file
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Tue May 28 18:15:44 EET 2019\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-5.1.1-all.zip\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1256
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ gradle/wrapper/gradle-wrapper.properties	(date 1611069534761)
@@ -1,6 +1,6 @@
-#Tue May 28 18:15:44 EET 2019
+#Tue Jan 19 17:18:54 EET 2021
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-5.1.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-6.8-bin.zip
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/jarRepositories.xml	(date 1610316701541)
+++ .idea/jarRepositories.xml	(date 1610316701541)
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="BintrayJCenter" />
+      <option name="name" value="BintrayJCenter" />
+      <option name="url" value="https://jcenter.bintray.com/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="Google" />
+      <option name="name" value="Google" />
+      <option name="url" value="https://dl.google.com/dl/android/maven2/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="maven" />
+      <option name="name" value="maven" />
+      <option name="url" value="https://jitpack.io" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/Signature.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/Signature.java	(date 1610455688936)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/Signature.java	(date 1610455688936)
@@ -0,0 +1,83 @@
+package com.rentcentric.paperlesscounter.Models.Requests;
+
+import android.os.Parcel;
+import android.os.Parcelable;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class Signature implements Parcelable {
+
+    @SerializedName("SignatureImage")
+    @Expose
+    private String signatureImage;
+    @SerializedName("SignatureSetupId")
+    @Expose
+    private Integer signatureSetupID;
+
+    public Signature() {
+
+    }
+
+    protected Signature(Parcel in) {
+        signatureImage = in.readString();
+        if (in.readByte() == 0) {
+            signatureSetupID = null;
+        } else {
+            signatureSetupID = in.readInt();
+        }
+    }
+
+    @Override
+    public void writeToParcel(Parcel dest, int flags) {
+        dest.writeString(signatureImage);
+        if (signatureSetupID == null) {
+            dest.writeByte((byte) 0);
+        } else {
+            dest.writeByte((byte) 1);
+            dest.writeInt(signatureSetupID);
+        }
+    }
+
+    @Override
+    public int describeContents() {
+        return 0;
+    }
+
+    public static final Creator<Signature> CREATOR = new Creator<Signature>() {
+        @Override
+        public Signature createFromParcel(Parcel in) {
+            return new Signature(in);
+        }
+
+        @Override
+        public Signature[] newArray(int size) {
+            return new Signature[size];
+        }
+    };
+
+    @Override
+    public String toString() {
+        return "{" +
+                "\"signatureImage\": \"" + signatureImage + '\"' +
+                ", \"signatureSetupID\": " + signatureSetupID +
+                '}';
+    }
+
+    public String getSignatureImage() {
+        return signatureImage;
+    }
+
+    public void setSignatureImage(String signatureImage) {
+        this.signatureImage = signatureImage;
+    }
+
+    public Integer getSignatureSetupID() {
+        return signatureSetupID;
+    }
+
+    public void setSignatureSetupID(Integer signatureSetupID) {
+        this.signatureSetupID = signatureSetupID;
+    }
+
+}
Index: app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/SaveSignatureRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/SaveSignatureRequest.java	(date 1610455675438)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/SaveSignatureRequest.java	(date 1610455675438)
@@ -0,0 +1,36 @@
+package com.rentcentric.paperlesscounter.Models.Requests;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+import java.util.List;
+
+public class SaveSignatureRequest {
+    @SerializedName("AgreementId")
+    @Expose
+    private Integer agreementID;
+    @SerializedName("SignatureList")
+    @Expose
+    private List<Signature> signature = null;
+
+    public SaveSignatureRequest(Integer agreementID, List<Signature> signature) {
+        this.agreementID = agreementID;
+        this.signature = signature;
+    }
+
+    public Integer getAgreementID() {
+        return agreementID;
+    }
+
+    public void setAgreementID(Integer agreementID) {
+        this.agreementID = agreementID;
+    }
+
+    public List<Signature> getSignature() {
+        return signature;
+    }
+
+    public void setSignature(List<Signature> signature) {
+        this.signature = signature;
+    }
+}
Index: app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/UpdateCustomerRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\npackage com.rentcentric.paperlesscounter.Models.Requests;\r\n\r\nimport com.google.gson.annotations.Expose;\r\nimport com.google.gson.annotations.SerializedName;\r\n\r\npublic class UpdateCustomerRequest {\r\n\r\n    @SerializedName(\"CustomerId\")\r\n    @Expose\r\n    private Integer customerId;\r\n    @SerializedName(\"FirstName\")\r\n    @Expose\r\n    private String firstName;\r\n    @SerializedName(\"MiddleName\")\r\n    @Expose\r\n    private String middleName;\r\n    @SerializedName(\"LastName\")\r\n    @Expose\r\n    private String lastName;\r\n    @SerializedName(\"UserName\")\r\n    @Expose\r\n    private String userName;\r\n    @SerializedName(\"SSN\")\r\n    @Expose\r\n    private String sSN;\r\n    @SerializedName(\"Address\")\r\n    @Expose\r\n    private String address;\r\n    @SerializedName(\"Address2\")\r\n    @Expose\r\n    private String address2;\r\n    @SerializedName(\"City\")\r\n    @Expose\r\n    private String city;\r\n    @SerializedName(\"StateCode\")\r\n    @Expose\r\n    private String stateCode;\r\n    @SerializedName(\"Zip\")\r\n    @Expose\r\n    private String zip;\r\n    @SerializedName(\"CountryCode\")\r\n    @Expose\r\n    private String countryCode;\r\n    @SerializedName(\"Phone\")\r\n    @Expose\r\n    private String phone;\r\n    @SerializedName(\"Email\")\r\n    @Expose\r\n    private String email;\r\n    @SerializedName(\"Fax\")\r\n    @Expose\r\n    private String fax;\r\n    @SerializedName(\"Memo\")\r\n    @Expose\r\n    private String memo;\r\n    @SerializedName(\"LicenseNumber\")\r\n    @Expose\r\n    private String licenseNumber;\r\n    @SerializedName(\"LicenseExpiry\")\r\n    @Expose\r\n    private String licenseExpiry;\r\n    @SerializedName(\"LicenseState\")\r\n    @Expose\r\n    private String licenseState;\r\n    @SerializedName(\"LicenseCountry\")\r\n    @Expose\r\n    private String licenseCountry;\r\n    @SerializedName(\"CompanyName\")\r\n    @Expose\r\n    private String companyName;\r\n    @SerializedName(\"CompanyContactName\")\r\n    @Expose\r\n    private String companyContactName;\r\n    @SerializedName(\"CompanyAddress\")\r\n    @Expose\r\n    private String companyAddress;\r\n    @SerializedName(\"CompanyCity\")\r\n    @Expose\r\n    private String companyCity;\r\n    @SerializedName(\"CompanyStateCode\")\r\n    @Expose\r\n    private String companyStateCode;\r\n    @SerializedName(\"CompanyCountryCode\")\r\n    @Expose\r\n    private String companyCountryCode;\r\n    @SerializedName(\"CompanyZip\")\r\n    @Expose\r\n    private String companyZip;\r\n    @SerializedName(\"CompanyPhone\")\r\n    @Expose\r\n    private String companyPhone;\r\n    @SerializedName(\"CompanyFax\")\r\n    @Expose\r\n    private String companyFax;\r\n    @SerializedName(\"CompanyEmail\")\r\n    @Expose\r\n    private String companyEmail;\r\n    @SerializedName(\"LocationId\")\r\n    @Expose\r\n    private Integer locationId;\r\n    @SerializedName(\"SourceOfReferral\")\r\n    @Expose\r\n    private String sourceOfReferral;\r\n    @SerializedName(\"Region\")\r\n    @Expose\r\n    private String region;\r\n    @SerializedName(\"Birthday\")\r\n    @Expose\r\n    private String birthday;\r\n    @SerializedName(\"LastModifiedDate\")\r\n    @Expose\r\n    private String lastModifiedDate;\r\n    @SerializedName(\"FreqTravelerId\")\r\n    @Expose\r\n    private String freqTravelerId;\r\n    @SerializedName(\"InsuranceCompany\")\r\n    @Expose\r\n    private String insuranceCompany;\r\n    @SerializedName(\"PolicyNumber\")\r\n    @Expose\r\n    private String policyNumber;\r\n    @SerializedName(\"InsuranceExpiry\")\r\n    @Expose\r\n    private String insuranceExpiry;\r\n    @SerializedName(\"DriversLicenseIssueDate\")\r\n    @Expose\r\n    private String driversLicenseIssueDate;\r\n    @SerializedName(\"Agent\")\r\n    @Expose\r\n    private String agent;\r\n    @SerializedName(\"InsurancePhone\")\r\n    @Expose\r\n    private String insurancePhone;\r\n    @SerializedName(\"InsuranceFax\")\r\n    @Expose\r\n    private String insuranceFax;\r\n    @SerializedName(\"ApprovedBy\")\r\n    @Expose\r\n    private String approvedBy;\r\n    @SerializedName(\"Gender\")\r\n    @Expose\r\n    private String gender;\r\n    @SerializedName(\"LicenseValidated\")\r\n    @Expose\r\n    private Boolean licenseValidated;\r\n    @SerializedName(\"IsActive\")\r\n    @Expose\r\n    private Boolean isActive;\r\n    @SerializedName(\"PassportNumber\")\r\n    @Expose\r\n    private String passportNumber;\r\n    @SerializedName(\"PassportExpiry\")\r\n    @Expose\r\n    private String passportExpiry;\r\n    @SerializedName(\"PassportCountry\")\r\n    @Expose\r\n    private String passportCountry;\r\n    @SerializedName(\"PassportType\")\r\n    @Expose\r\n    private String passportType;\r\n    @SerializedName(\"PassportIssuingDate\")\r\n    @Expose\r\n    private String passportIssuingDate;\r\n    @SerializedName(\"JobPosition\")\r\n    @Expose\r\n    private String jobPosition;\r\n    @SerializedName(\"DLScan\")\r\n    @Expose\r\n    private String dLScan;\r\n    @SerializedName(\"Cvv\")\r\n    @Expose\r\n    private String cvv;\r\n    @SerializedName(\"CcTrack\")\r\n    @Expose\r\n    private String ccTrack;\r\n    @SerializedName(\"CreateDate\")\r\n    @Expose\r\n    private String createDate;\r\n    @SerializedName(\"MembershipTypeId\")\r\n    @Expose\r\n    private Integer membershipTypeId;\r\n    @SerializedName(\"SendEmail\")\r\n    @Expose\r\n    private Boolean sendEmail;\r\n    @SerializedName(\"IsRegistrationCompleted\")\r\n    @Expose\r\n    private Boolean isRegistrationCompleted;\r\n    @SerializedName(\"Airport\")\r\n    @Expose\r\n    private String airport;\r\n    @SerializedName(\"Airline\")\r\n    @Expose\r\n    private String airline;\r\n    @SerializedName(\"FlightNumber\")\r\n    @Expose\r\n    private String flightNumber;\r\n    @SerializedName(\"localInformation\")\r\n    @Expose\r\n    private String localInformation;\r\n\r\n    public UpdateCustomerRequest(Integer customerId,\r\n                                 String firstName,\r\n                                 String lastName,\r\n                                 String address,\r\n                                 String city,\r\n                                 String stateCode, String zip, String countryCode, String phone, String licenseNumber, String licenseExpiry, String birthday) {\r\n        this.customerId = customerId;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.address = address;\r\n        this.city = city;\r\n        this.stateCode = stateCode;\r\n        this.zip = zip;\r\n        this.countryCode = countryCode;\r\n        this.phone = phone;\r\n        this.licenseNumber = licenseNumber;\r\n        this.licenseExpiry = licenseExpiry;\r\n        this.birthday = birthday;\r\n    }\r\n\r\n    public UpdateCustomerRequest(int customerId,\r\n                                 String firstName,\r\n                                 String lastName,\r\n                                 String email,\r\n                                 String phone,\r\n                                 String birthday,\r\n                                 String address,\r\n                                 String city,\r\n                                 String stateCode,\r\n                                 String countryCode,\r\n                                 String zip,\r\n                                 String licenseNumber,\r\n                                 String licenseExpiry,\r\n                                 String licenseState,\r\n                                 String companyName,\r\n                                 String companyPhone,\r\n                                 String insuranceCompany,\r\n                                 String policyNumber,\r\n                                 String sSN,\r\n                                 String airport,\r\n                                 String airline,\r\n                                 String flightNumber,\r\n                                 String localInformation) {\r\n        this.customerId = customerId;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        if (email != null) this.email = email;\r\n        this.phone = phone;\r\n        this.birthday = birthday;\r\n        this.address = address;\r\n        this.city = city;\r\n        this.stateCode = stateCode;\r\n        this.countryCode = countryCode;\r\n        this.zip = zip;\r\n        this.licenseNumber = licenseNumber;\r\n        if (licenseExpiry != null) this.licenseExpiry = licenseExpiry;\r\n        this.licenseState = licenseState;\r\n        this.companyPhone = companyPhone;\r\n        this.companyName = companyName;\r\n        this.insuranceCompany = insuranceCompany;\r\n        this.policyNumber = policyNumber;\r\n        this.sSN = sSN;\r\n        this.airport = airport;\r\n        this.flightNumber = flightNumber;\r\n        this.airline = airline;\r\n        this.localInformation = localInformation;\r\n    }\r\n\r\n    public Integer getCustomerId() {\r\n        return customerId;\r\n    }\r\n\r\n    public void setCustomerId(Integer customerId) {\r\n        this.customerId = customerId;\r\n    }\r\n\r\n    public String getFirstName() {\r\n        return firstName;\r\n    }\r\n\r\n    public void setFirstName(String firstName) {\r\n        this.firstName = firstName;\r\n    }\r\n\r\n    public String getMiddleName() {\r\n        return middleName;\r\n    }\r\n\r\n    public void setMiddleName(String middleName) {\r\n        this.middleName = middleName;\r\n    }\r\n\r\n    public String getLastName() {\r\n        return lastName;\r\n    }\r\n\r\n    public void setLastName(String lastName) {\r\n        this.lastName = lastName;\r\n    }\r\n\r\n    public String getUserName() {\r\n        return userName;\r\n    }\r\n\r\n    public void setUserName(String userName) {\r\n        this.userName = userName;\r\n    }\r\n\r\n    public String getSSN() {\r\n        return sSN;\r\n    }\r\n\r\n    public void setSSN(String sSN) {\r\n        this.sSN = sSN;\r\n    }\r\n\r\n    public String getAddress() {\r\n        return address;\r\n    }\r\n\r\n    public void setAddress(String address) {\r\n        this.address = address;\r\n    }\r\n\r\n    public String getAddress2() {\r\n        return address2;\r\n    }\r\n\r\n    public void setAddress2(String address2) {\r\n        this.address2 = address2;\r\n    }\r\n\r\n    public String getCity() {\r\n        return city;\r\n    }\r\n\r\n    public void setCity(String city) {\r\n        this.city = city;\r\n    }\r\n\r\n    public String getStateCode() {\r\n        return stateCode;\r\n    }\r\n\r\n    public void setStateCode(String stateCode) {\r\n        this.stateCode = stateCode;\r\n    }\r\n\r\n    public String getZip() {\r\n        return zip;\r\n    }\r\n\r\n    public void setZip(String zip) {\r\n        this.zip = zip;\r\n    }\r\n\r\n    public String getCountryCode() {\r\n        return countryCode;\r\n    }\r\n\r\n    public void setCountryCode(String countryCode) {\r\n        this.countryCode = countryCode;\r\n    }\r\n\r\n    public String getPhone() {\r\n        return phone;\r\n    }\r\n\r\n    public void setPhone(String phone) {\r\n        this.phone = phone;\r\n    }\r\n\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public void setEmail(String email) {\r\n        this.email = email;\r\n    }\r\n\r\n    public String getFax() {\r\n        return fax;\r\n    }\r\n\r\n    public void setFax(String fax) {\r\n        this.fax = fax;\r\n    }\r\n\r\n    public String getMemo() {\r\n        return memo;\r\n    }\r\n\r\n    public void setMemo(String memo) {\r\n        this.memo = memo;\r\n    }\r\n\r\n    public String getLicenseNumber() {\r\n        return licenseNumber;\r\n    }\r\n\r\n    public void setLicenseNumber(String licenseNumber) {\r\n        this.licenseNumber = licenseNumber;\r\n    }\r\n\r\n    public String getLicenseExpiry() {\r\n        return licenseExpiry;\r\n    }\r\n\r\n    public void setLicenseExpiry(String licenseExpiry) {\r\n        this.licenseExpiry = licenseExpiry;\r\n    }\r\n\r\n    public String getLicenseState() {\r\n        return licenseState;\r\n    }\r\n\r\n    public void setLicenseState(String licenseState) {\r\n        this.licenseState = licenseState;\r\n    }\r\n\r\n    public String getLicenseCountry() {\r\n        return licenseCountry;\r\n    }\r\n\r\n    public void setLicenseCountry(String licenseCountry) {\r\n        this.licenseCountry = licenseCountry;\r\n    }\r\n\r\n    public String getCompanyName() {\r\n        return companyName;\r\n    }\r\n\r\n    public void setCompanyName(String companyName) {\r\n        this.companyName = companyName;\r\n    }\r\n\r\n    public String getCompanyContactName() {\r\n        return companyContactName;\r\n    }\r\n\r\n    public void setCompanyContactName(String companyContactName) {\r\n        this.companyContactName = companyContactName;\r\n    }\r\n\r\n    public String getCompanyAddress() {\r\n        return companyAddress;\r\n    }\r\n\r\n    public void setCompanyAddress(String companyAddress) {\r\n        this.companyAddress = companyAddress;\r\n    }\r\n\r\n    public String getCompanyCity() {\r\n        return companyCity;\r\n    }\r\n\r\n    public void setCompanyCity(String companyCity) {\r\n        this.companyCity = companyCity;\r\n    }\r\n\r\n    public String getCompanyStateCode() {\r\n        return companyStateCode;\r\n    }\r\n\r\n    public void setCompanyStateCode(String companyStateCode) {\r\n        this.companyStateCode = companyStateCode;\r\n    }\r\n\r\n    public String getCompanyCountryCode() {\r\n        return companyCountryCode;\r\n    }\r\n\r\n    public void setCompanyCountryCode(String companyCountryCode) {\r\n        this.companyCountryCode = companyCountryCode;\r\n    }\r\n\r\n    public String getCompanyZip() {\r\n        return companyZip;\r\n    }\r\n\r\n    public void setCompanyZip(String companyZip) {\r\n        this.companyZip = companyZip;\r\n    }\r\n\r\n    public String getCompanyPhone() {\r\n        return companyPhone;\r\n    }\r\n\r\n    public void setCompanyPhone(String companyPhone) {\r\n        this.companyPhone = companyPhone;\r\n    }\r\n\r\n    public String getCompanyFax() {\r\n        return companyFax;\r\n    }\r\n\r\n    public void setCompanyFax(String companyFax) {\r\n        this.companyFax = companyFax;\r\n    }\r\n\r\n    public String getCompanyEmail() {\r\n        return companyEmail;\r\n    }\r\n\r\n    public void setCompanyEmail(String companyEmail) {\r\n        this.companyEmail = companyEmail;\r\n    }\r\n\r\n    public Integer getLocationId() {\r\n        return locationId;\r\n    }\r\n\r\n    public void setLocationId(Integer locationId) {\r\n        this.locationId = locationId;\r\n    }\r\n\r\n    public String getSourceOfReferral() {\r\n        return sourceOfReferral;\r\n    }\r\n\r\n    public void setSourceOfReferral(String sourceOfReferral) {\r\n        this.sourceOfReferral = sourceOfReferral;\r\n    }\r\n\r\n    public String getRegion() {\r\n        return region;\r\n    }\r\n\r\n    public void setRegion(String region) {\r\n        this.region = region;\r\n    }\r\n\r\n    public String getBirthday() {\r\n        return birthday;\r\n    }\r\n\r\n    public void setBirthday(String birthday) {\r\n        this.birthday = birthday;\r\n    }\r\n\r\n    public String getLastModifiedDate() {\r\n        return lastModifiedDate;\r\n    }\r\n\r\n    public void setLastModifiedDate(String lastModifiedDate) {\r\n        this.lastModifiedDate = lastModifiedDate;\r\n    }\r\n\r\n    public String getFreqTravelerId() {\r\n        return freqTravelerId;\r\n    }\r\n\r\n    public void setFreqTravelerId(String freqTravelerId) {\r\n        this.freqTravelerId = freqTravelerId;\r\n    }\r\n\r\n    public String getInsuranceCompany() {\r\n        return insuranceCompany;\r\n    }\r\n\r\n    public void setInsuranceCompany(String insuranceCompany) {\r\n        this.insuranceCompany = insuranceCompany;\r\n    }\r\n\r\n    public String getPolicyNumber() {\r\n        return policyNumber;\r\n    }\r\n\r\n    public void setPolicyNumber(String policyNumber) {\r\n        this.policyNumber = policyNumber;\r\n    }\r\n\r\n    public String getInsuranceExpiry() {\r\n        return insuranceExpiry;\r\n    }\r\n\r\n    public void setInsuranceExpiry(String insuranceExpiry) {\r\n        this.insuranceExpiry = insuranceExpiry;\r\n    }\r\n\r\n    public String getDriversLicenseIssueDate() {\r\n        return driversLicenseIssueDate;\r\n    }\r\n\r\n    public void setDriversLicenseIssueDate(String driversLicenseIssueDate) {\r\n        this.driversLicenseIssueDate = driversLicenseIssueDate;\r\n    }\r\n\r\n    public String getAgent() {\r\n        return agent;\r\n    }\r\n\r\n    public void setAgent(String agent) {\r\n        this.agent = agent;\r\n    }\r\n\r\n    public String getInsurancePhone() {\r\n        return insurancePhone;\r\n    }\r\n\r\n    public void setInsurancePhone(String insurancePhone) {\r\n        this.insurancePhone = insurancePhone;\r\n    }\r\n\r\n    public String getInsuranceFax() {\r\n        return insuranceFax;\r\n    }\r\n\r\n    public void setInsuranceFax(String insuranceFax) {\r\n        this.insuranceFax = insuranceFax;\r\n    }\r\n\r\n    public String getApprovedBy() {\r\n        return approvedBy;\r\n    }\r\n\r\n    public void setApprovedBy(String approvedBy) {\r\n        this.approvedBy = approvedBy;\r\n    }\r\n\r\n    public String getGender() {\r\n        return gender;\r\n    }\r\n\r\n    public void setGender(String gender) {\r\n        this.gender = gender;\r\n    }\r\n\r\n    public Boolean getLicenseValidated() {\r\n        return licenseValidated;\r\n    }\r\n\r\n    public void setLicenseValidated(Boolean licenseValidated) {\r\n        this.licenseValidated = licenseValidated;\r\n    }\r\n\r\n    public Boolean getIsActive() {\r\n        return isActive;\r\n    }\r\n\r\n    public void setIsActive(Boolean isActive) {\r\n        this.isActive = isActive;\r\n    }\r\n\r\n    public String getPassportNumber() {\r\n        return passportNumber;\r\n    }\r\n\r\n    public void setPassportNumber(String passportNumber) {\r\n        this.passportNumber = passportNumber;\r\n    }\r\n\r\n    public String getPassportExpiry() {\r\n        return passportExpiry;\r\n    }\r\n\r\n    public void setPassportExpiry(String passportExpiry) {\r\n        this.passportExpiry = passportExpiry;\r\n    }\r\n\r\n    public String getPassportCountry() {\r\n        return passportCountry;\r\n    }\r\n\r\n    public void setPassportCountry(String passportCountry) {\r\n        this.passportCountry = passportCountry;\r\n    }\r\n\r\n    public String getPassportType() {\r\n        return passportType;\r\n    }\r\n\r\n    public void setPassportType(String passportType) {\r\n        this.passportType = passportType;\r\n    }\r\n\r\n    public String getPassportIssuingDate() {\r\n        return passportIssuingDate;\r\n    }\r\n\r\n    public void setPassportIssuingDate(String passportIssuingDate) {\r\n        this.passportIssuingDate = passportIssuingDate;\r\n    }\r\n\r\n    public String getJobPosition() {\r\n        return jobPosition;\r\n    }\r\n\r\n    public void setJobPosition(String jobPosition) {\r\n        this.jobPosition = jobPosition;\r\n    }\r\n\r\n    public String getDLScan() {\r\n        return dLScan;\r\n    }\r\n\r\n    public void setDLScan(String dLScan) {\r\n        this.dLScan = dLScan;\r\n    }\r\n\r\n    public String getCvv() {\r\n        return cvv;\r\n    }\r\n\r\n    public void setCvv(String cvv) {\r\n        this.cvv = cvv;\r\n    }\r\n\r\n    public String getCcTrack() {\r\n        return ccTrack;\r\n    }\r\n\r\n    public void setCcTrack(String ccTrack) {\r\n        this.ccTrack = ccTrack;\r\n    }\r\n\r\n    public String getCreateDate() {\r\n        return createDate;\r\n    }\r\n\r\n    public void setCreateDate(String createDate) {\r\n        this.createDate = createDate;\r\n    }\r\n\r\n    public Integer getMembershipTypeId() {\r\n        return membershipTypeId;\r\n    }\r\n\r\n    public void setMembershipTypeId(Integer membershipTypeId) {\r\n        this.membershipTypeId = membershipTypeId;\r\n    }\r\n\r\n    public Boolean getSendEmail() {\r\n        return sendEmail;\r\n    }\r\n\r\n    public void setSendEmail(Boolean sendEmail) {\r\n        this.sendEmail = sendEmail;\r\n    }\r\n\r\n    public Boolean getIsRegistrationCompleted() {\r\n        return isRegistrationCompleted;\r\n    }\r\n\r\n    public void setIsRegistrationCompleted(Boolean isRegistrationCompleted) {\r\n        this.isRegistrationCompleted = isRegistrationCompleted;\r\n    }\r\n\r\n    public String getAirport() {\r\n        return airport;\r\n    }\r\n\r\n    public void setAirport(String airport) {\r\n        this.airport = airport;\r\n    }\r\n\r\n    public String getAirline() {\r\n        return airline;\r\n    }\r\n\r\n    public void setAirline(String airline) {\r\n        this.airline = airline;\r\n    }\r\n\r\n    public String getFlightNumber() {\r\n        return flightNumber;\r\n    }\r\n\r\n    public void setFlightNumber(String flightNumber) {\r\n        this.flightNumber = flightNumber;\r\n    }\r\n\r\n    public String getLocalInformation() {\r\n        return localInformation;\r\n    }\r\n\r\n    public void setLocalInformation(String localInformation) {\r\n        this.localInformation = localInformation;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/UpdateCustomerRequest.java	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/UpdateCustomerRequest.java	(date 1609870563242)
@@ -198,6 +198,9 @@
     @SerializedName("localInformation")
     @Expose
     private String localInformation;
+    @SerializedName("MobileRequestId")
+    @Expose
+    private Integer mobileRequestId;
 
     public UpdateCustomerRequest(Integer customerId,
                                  String firstName,
@@ -241,7 +244,8 @@
                                  String airport,
                                  String airline,
                                  String flightNumber,
-                                 String localInformation) {
+                                 String localInformation,
+                                 Integer mobileRequestId) {
         this.customerId = customerId;
         this.firstName = firstName;
         this.lastName = lastName;
@@ -265,6 +269,7 @@
         this.flightNumber = flightNumber;
         this.airline = airline;
         this.localInformation = localInformation;
+        this.mobileRequestId = mobileRequestId;
     }
 
     public Integer getCustomerId() {
@@ -778,4 +783,12 @@
     public void setLocalInformation(String localInformation) {
         this.localInformation = localInformation;
     }
+
+    public Integer getMobileRequestId() {
+        return mobileRequestId;
+    }
+
+    public void setMobileRequestId(Integer mobileRequestId) {
+        this.mobileRequestId = mobileRequestId;
+    }
 }
Index: app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/GetSignatureSetupsRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/GetSignatureSetupsRequest.java	(date 1624629065324)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/GetSignatureSetupsRequest.java	(date 1624629065324)
@@ -0,0 +1,61 @@
+package com.rentcentric.paperlesscounter.Models.Requests;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class GetSignatureSetupsRequest {
+    @SerializedName("LocationID")
+    @Expose
+    private Integer locationID;
+    @SerializedName("ReservationID")
+    @Expose
+    private Integer reservationID;
+    @SerializedName("AgreementId")
+    @Expose
+    private Integer agreementId;
+    @SerializedName("AgreementFormId")
+    @Expose
+    private Integer agreementFormId;
+
+
+    public GetSignatureSetupsRequest(
+            Integer locationID,
+            Integer reservationID,
+            Integer agreementId) {
+        this.locationID = locationID;
+        this.reservationID = reservationID;
+        this.agreementId = agreementId;
+    }
+
+    public Integer getLocationID() {
+        return locationID;
+    }
+
+    public void setLocationID(Integer locationID) {
+        this.locationID = locationID;
+    }
+
+    public Integer getReservationID() {
+        return reservationID;
+    }
+
+    public void setReservationID(Integer reservationID) {
+        this.reservationID = reservationID;
+    }
+
+    public Integer getAgreementId() {
+        return agreementId;
+    }
+
+    public void setAgreementId(Integer agreementId) {
+        this.agreementId = agreementId;
+    }
+
+    public Integer getAgreementFormId() {
+        return agreementFormId;
+    }
+
+    public void setAgreementFormId(Integer agreementFormId) {
+        this.agreementFormId = agreementFormId;
+    }
+}
Index: app/src/main/res/layout/fragment_customer_information.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".Fragments.CustomerInformationFragment\">\r\n\r\n    <android.support.constraint.ConstraintLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n\r\n        <android.support.constraint.Guideline\r\n            android:id=\"@+id/guideline_end\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\"\r\n            app:layout_constraintGuide_end=\"16dp\" />\r\n\r\n        <android.support.constraint.Guideline\r\n            android:id=\"@+id/guideline_start\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\"\r\n            app:layout_constraintGuide_begin=\"16dp\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/first_name_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"First Name\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/basic_title_tv\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/last_name_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Last Name\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/first_name_et\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/email_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Email\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/last_name_et\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/phone_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Phone\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/email_et\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/birthday_title_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Birthday\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/phone_et\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/address_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Address\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/birthday_tv\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/city_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"City\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/address_et\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/state_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"State/Province\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/city_et\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/country_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Country\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/state_spinner\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/zipcode_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Zip/Postal Code\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/country_spinner\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/driver_license_number_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"Driver License Number\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/driver_license_tv\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/credit_card_type_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"Credit Card Type\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/credit_card_title_tv\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/credit_card_number_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Credit Card Number\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/credit_card_type_spinner\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/company_name_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"Company Name\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/other_title_tv\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/insurance_company_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Insurance Company\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/company_phone_et\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/company_phone_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Company Phone\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/company_name_et\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/policy_number_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Policy Number\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/insurance_company_et\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/ssn_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"SIN/SSN\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/policy_number_et\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/airport_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Airport\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/ssn_et\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/airline_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Airline\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/airport_et\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/flight_number_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Flight Number\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/airline_et\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/special_request_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Special Request / Local Information\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/flight_number_et\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/card_holder_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Card Holder\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/credit_Card_number_et\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/cvv_tv\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"CVV\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/card_holder_et\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/card_expiry_title_tv\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Card Expiry\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/card_expiry_month_et\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/card_holder_et\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/driver_license_expiry_title_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Driver License Expiry\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/driver_license_number_et\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/driver_license_state_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Driver License State\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"14sp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/driver_license_expiry_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/first_name_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:inputType=\"text\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"5dp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/first_name_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/last_name_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:inputType=\"text\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"5dp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/last_name_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/email_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:inputType=\"text\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"5dp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/email_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/phone_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:inputType=\"phone\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"5dp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/phone_tv\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/birthday_tv\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:focusable=\"true\"\r\n            android:gravity=\"center_vertical\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"40dp\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"16sp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/birthday_title_tv\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/driver_license_expiry_tv\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:focusable=\"true\"\r\n            android:gravity=\"center_vertical\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"40dp\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"16sp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintHorizontal_bias=\"1.0\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/driver_license_expiry_title_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/card_expiry_month_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:focusable=\"true\"\r\n            android:gravity=\"center_vertical\"\r\n            android:hint=\"Month\"\r\n            android:inputType=\"number\"\r\n            android:maxLength=\"2\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"40dp\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"16sp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/card_expiry_year_et\"\r\n            app:layout_constraintHorizontal_bias=\"0.5\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/cvv_et\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/card_expiry_title_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/card_expiry_year_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:focusable=\"true\"\r\n            android:gravity=\"center_vertical\"\r\n            android:hint=\"Year\"\r\n            android:inputType=\"number\"\r\n            android:maxLength=\"2\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"40dp\"\r\n            android:textColor=\"@color/colorBlack\"\r\n            android:textSize=\"16sp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintHorizontal_bias=\"0.5\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/card_expiry_month_et\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/card_expiry_title_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/address_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:inputType=\"text\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"5dp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/address_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/city_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:inputType=\"text\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"5dp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/city_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/zipcode_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:inputType=\"text\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"5dp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/zipcode_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/driver_license_number_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:inputType=\"text\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"5dp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/driver_license_number_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/credit_Card_number_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:inputType=\"number\"\r\n            android:maxLength=\"16\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"5dp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/credit_card_number_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/card_holder_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:inputType=\"text\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"5dp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/card_holder_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/company_name_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:inputType=\"text\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"5dp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/company_name_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/insurance_company_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:inputType=\"text\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"5dp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/insurance_company_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/ssn_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:inputType=\"text\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"5dp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/ssn_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/airport_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:inputType=\"text\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"5dp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/airport_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/airline_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:inputType=\"text\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"5dp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/airline_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/flight_number_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:inputType=\"text\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"5dp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/flight_number_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/special_request_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:layout_marginBottom=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:inputType=\"text\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"5dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/special_request_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/company_phone_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:inputType=\"phone\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"5dp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/company_phone_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/policy_number_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:inputType=\"number\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"5dp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/policy_number_tv\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/cvv_et\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:inputType=\"number\"\r\n            android:maxLength=\"4\"\r\n            android:maxLines=\"1\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"5dp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/card_expiry_month_et\"\r\n            app:layout_constraintHorizontal_bias=\"0.5\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/cvv_tv\" />\r\n\r\n        <Spinner\r\n            android:id=\"@+id/state_spinner\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:dropDownVerticalOffset=\"40dp\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"25dp\"\r\n            android:spinnerMode=\"dropdown\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/state_tv\" />\r\n\r\n        <Spinner\r\n            android:id=\"@+id/country_spinner\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:dropDownVerticalOffset=\"40dp\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"25dp\"\r\n            android:spinnerMode=\"dropdown\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/country_tv\" />\r\n\r\n\r\n        <Spinner\r\n            android:id=\"@+id/credit_card_type_spinner\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:dropDownVerticalOffset=\"40dp\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"25dp\"\r\n            android:spinnerMode=\"dropdown\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/credit_card_type_tv\" />\r\n\r\n        <Spinner\r\n            android:id=\"@+id/driver_license_state_spinner\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:background=\"@drawable/input_round_bg\"\r\n            android:dropDownVerticalOffset=\"40dp\"\r\n            android:paddingStart=\"5dp\"\r\n            android:paddingEnd=\"25dp\"\r\n            android:spinnerMode=\"dropdown\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/driver_license_state_tv\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/spinner_arrow_state\"\r\n            android:layout_width=\"15dp\"\r\n            android:layout_height=\"15dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            android:src=\"@drawable/ic_down_arrow\"\r\n            android:visibility=\"invisible\"\r\n            app:layout_constraintBottom_toBottomOf=\"@+id/state_spinner\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/guideline_end\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/state_spinner\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/spinner_arrow_county\"\r\n            android:layout_width=\"15dp\"\r\n            android:layout_height=\"15dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            android:src=\"@drawable/ic_down_arrow\"\r\n            android:visibility=\"invisible\"\r\n            app:layout_constraintBottom_toBottomOf=\"@+id/country_spinner\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/guideline_end\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/country_spinner\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/spinner_arrow_license_state\"\r\n            android:layout_width=\"15dp\"\r\n            android:layout_height=\"15dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            android:src=\"@drawable/ic_down_arrow\"\r\n            android:visibility=\"invisible\"\r\n            app:layout_constraintBottom_toBottomOf=\"@+id/driver_license_state_spinner\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/guideline_end\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/driver_license_state_spinner\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/spinner_arrow_credit_card_type\"\r\n            android:layout_width=\"15dp\"\r\n            android:layout_height=\"15dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            android:src=\"@drawable/ic_down_arrow\"\r\n            android:visibility=\"invisible\"\r\n            app:layout_constraintBottom_toBottomOf=\"@+id/credit_card_type_spinner\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/guideline_end\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/credit_card_type_spinner\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/basic_title_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"Basic Info\"\r\n            android:textAllCaps=\"true\"\r\n            android:textColor=\"@color/colorAccent\"\r\n            android:textSize=\"16sp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/driver_license_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Driver License\"\r\n            android:textAllCaps=\"true\"\r\n            android:textColor=\"@color/colorAccent\"\r\n            android:textSize=\"16sp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/zipcode_et\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/credit_card_title_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Credit Card\"\r\n            android:textAllCaps=\"true\"\r\n            android:textColor=\"@color/colorAccent\"\r\n            android:textSize=\"16sp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/driver_license_state_spinner\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/other_title_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"Other\"\r\n            android:textAllCaps=\"true\"\r\n            android:textColor=\"@color/colorAccent\"\r\n            android:textSize=\"16sp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/guideline_start\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/cvv_et\" />\r\n\r\n        <ProgressBar\r\n            android:id=\"@+id/license_state_pb\"\r\n            style=\"?android:attr/progressBarStyle\"\r\n            android:layout_width=\"20dp\"\r\n            android:layout_height=\"20dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"@+id/driver_license_state_spinner\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/driver_license_state_spinner\" />\r\n\r\n        <ProgressBar\r\n            android:id=\"@+id/card_type_pb\"\r\n            style=\"?android:attr/progressBarStyle\"\r\n            android:layout_width=\"20dp\"\r\n            android:layout_height=\"20dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"@+id/credit_card_type_spinner\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/credit_card_type_spinner\" />\r\n\r\n        <ProgressBar\r\n            android:id=\"@+id/state_pb\"\r\n            style=\"?android:attr/progressBarStyle\"\r\n            android:layout_width=\"20dp\"\r\n            android:layout_height=\"20dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"@+id/state_spinner\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/state_spinner\" />\r\n\r\n        <ProgressBar\r\n            android:id=\"@+id/country_pb\"\r\n            style=\"?android:attr/progressBarStyle\"\r\n            android:layout_width=\"20dp\"\r\n            android:layout_height=\"20dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"@+id/country_spinner\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/country_spinner\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/birthday_iv\"\r\n            android:layout_width=\"30dp\"\r\n            android:layout_height=\"30dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            android:src=\"@drawable/ic_date\"\r\n            android:tint=\"@color/colorAccent\"\r\n            app:layout_constraintBottom_toBottomOf=\"@+id/birthday_tv\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/birthday_tv\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/license_expiry_iv\"\r\n            android:layout_width=\"30dp\"\r\n            android:layout_height=\"30dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            android:src=\"@drawable/ic_date\"\r\n            android:tint=\"@color/colorAccent\"\r\n            app:layout_constraintBottom_toBottomOf=\"@+id/driver_license_expiry_tv\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/driver_license_expiry_tv\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/card_expiry_iv\"\r\n            android:layout_width=\"30dp\"\r\n            android:layout_height=\"30dp\"\r\n            android:layout_marginEnd=\"8dp\"\r\n            android:src=\"@drawable/ic_date\"\r\n            android:tint=\"@color/colorAccent\"\r\n            android:visibility=\"gone\"\r\n            app:layout_constraintBottom_toBottomOf=\"@+id/card_expiry_month_et\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_end\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/card_expiry_month_et\" />\r\n\r\n    </android.support.constraint.ConstraintLayout>\r\n</ScrollView>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_customer_information.xml	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/res/layout/fragment_customer_information.xml	(date 1609874034112)
@@ -6,18 +6,18 @@
     android:layout_height="match_parent"
     tools:context=".Fragments.CustomerInformationFragment">
 
-    <android.support.constraint.ConstraintLayout
+    <androidx.constraintlayout.widget.ConstraintLayout
         android:layout_width="match_parent"
         android:layout_height="match_parent">
 
-        <android.support.constraint.Guideline
+        <androidx.constraintlayout.widget.Guideline
             android:id="@+id/guideline_end"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:orientation="vertical"
             app:layout_constraintGuide_end="16dp" />
 
-        <android.support.constraint.Guideline
+        <androidx.constraintlayout.widget.Guideline
             android:id="@+id/guideline_start"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
@@ -885,7 +885,7 @@
             android:layout_height="30dp"
             android:layout_marginEnd="8dp"
             android:src="@drawable/ic_date"
-            android:tint="@color/colorAccent"
+            app:tint="@color/colorAccent"
             app:layout_constraintBottom_toBottomOf="@+id/birthday_tv"
             app:layout_constraintEnd_toStartOf="@+id/guideline_end"
             app:layout_constraintTop_toTopOf="@+id/birthday_tv" />
@@ -896,7 +896,7 @@
             android:layout_height="30dp"
             android:layout_marginEnd="8dp"
             android:src="@drawable/ic_date"
-            android:tint="@color/colorAccent"
+            app:tint="@color/colorAccent"
             app:layout_constraintBottom_toBottomOf="@+id/driver_license_expiry_tv"
             app:layout_constraintEnd_toStartOf="@+id/guideline_end"
             app:layout_constraintTop_toTopOf="@+id/driver_license_expiry_tv" />
@@ -907,11 +907,11 @@
             android:layout_height="30dp"
             android:layout_marginEnd="8dp"
             android:src="@drawable/ic_date"
-            android:tint="@color/colorAccent"
+            app:tint="@color/colorAccent"
             android:visibility="gone"
             app:layout_constraintBottom_toBottomOf="@+id/card_expiry_month_et"
             app:layout_constraintEnd_toStartOf="@+id/guideline_end"
             app:layout_constraintTop_toTopOf="@+id/card_expiry_month_et" />
 
-    </android.support.constraint.ConstraintLayout>
+    </androidx.constraintlayout.widget.ConstraintLayout>
 </ScrollView>
\ No newline at end of file
Index: app/src/main/java/com/rentcentric/paperlesscounter/Activities/CustomerInformationActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.rentcentric.paperlesscounter.Activities;\r\n\r\nimport android.app.FragmentTransaction;\r\nimport android.os.Bundle;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.rentcentric.paperlesscounter.Fragments.CustomerInformationFragment;\r\nimport com.rentcentric.paperlesscounter.R;\r\n\r\npublic class CustomerInformationActivity extends AppCompatActivity\r\n        implements View.OnClickListener {\r\n    // UI\r\n    private TextView toolbarTitleTextView;\r\n    private ImageView backImageView;\r\n    private Button submitButton;\r\n\r\n    // vars\r\n    public Boolean isNewCustomer;\r\n    public int customerId;\r\n    public int mobileRequestId;\r\n\r\n    private SubmitClickListener onSubmitClickListener;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_customer_information);\r\n\r\n        initUI();\r\n        // get sent data\r\n        if (getIntent() != null) {\r\n            isNewCustomer = getIntent().getBooleanExtra(\"isCreateNewCustomer\", false);\r\n            customerId = getIntent().getIntExtra(\"customerId\", 0);\r\n            mobileRequestId = getIntent().getIntExtra(\"mobileRequestId\", 0);\r\n\r\n            if (isNewCustomer) {\r\n                toolbarTitleTextView.setText(\"Add New Customer\");\r\n                submitButton.setText(\"Add New Customer\");\r\n            }else{\r\n                toolbarTitleTextView.setText(\"Customer Information\");\r\n                submitButton.setText(\"Update Customer Info\");\r\n            }\r\n        }\r\n\r\n        // add fragment\r\n        CustomerInformationFragment customerInformationFragment = new CustomerInformationFragment();\r\n        FragmentTransaction ft = getFragmentManager().beginTransaction();\r\n        ft.add(R.id.fragmentContainer, customerInformationFragment).commit();\r\n    }\r\n\r\n    private void initUI() {\r\n        toolbarTitleTextView = findViewById(R.id.toolbar_title_tv);\r\n        backImageView = findViewById(R.id.back_btn_iv);\r\n        backImageView.setOnClickListener(this);\r\n        submitButton = findViewById(R.id.submit_btn);\r\n        submitButton.setOnClickListener(this);\r\n    }\r\n\r\n    public void setOnSubmitClickListener(SubmitClickListener onSubmitClickListener) {\r\n        this.onSubmitClickListener = onSubmitClickListener;\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        switch (v.getId()) {\r\n            case R.id.back_btn_iv:\r\n                this.finish();\r\n                break;\r\n\r\n            case R.id.submit_btn:\r\n                onSubmitClickListener.onSubmitClicked();\r\n                break;\r\n        }\r\n    }\r\n\r\n    public interface SubmitClickListener {\r\n        void onSubmitClicked();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Activities/CustomerInformationActivity.java	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Activities/CustomerInformationActivity.java	(date 1609874034117)
@@ -2,12 +2,12 @@
 
 import android.app.FragmentTransaction;
 import android.os.Bundle;
-import android.support.v7.app.AppCompatActivity;
 import android.view.View;
 import android.widget.Button;
 import android.widget.ImageView;
 import android.widget.TextView;
-import android.widget.Toast;
+
+import androidx.appcompat.app.AppCompatActivity;
 
 import com.rentcentric.paperlesscounter.Fragments.CustomerInformationFragment;
 import com.rentcentric.paperlesscounter.R;
Index: app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/GetPaperLessTempChargeSummeryRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/GetPaperLessTempChargeSummeryRequest.java	(date 1610045531996)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/GetPaperLessTempChargeSummeryRequest.java	(date 1610045531996)
@@ -0,0 +1,24 @@
+package com.rentcentric.paperlesscounter.Models.Requests;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class GetPaperLessTempChargeSummeryRequest {
+    @SerializedName("adminid")
+    @Expose
+    private String admiId;
+
+    public GetPaperLessTempChargeSummeryRequest(String admiId) {
+        this.admiId = admiId;
+    }
+
+    public String getAdmiId() {
+        return admiId;
+    }
+
+    public void setAdmiId(String admiId) {
+        this.admiId = admiId;
+    }
+
+
+}
Index: app/src/main/java/com/rentcentric/paperlesscounter/Activities/SignaturesActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Activities/SignaturesActivity.java	(date 1610022876913)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Activities/SignaturesActivity.java	(date 1610022876913)
@@ -0,0 +1,136 @@
+package com.rentcentric.paperlesscounter.Activities;
+
+import android.app.Activity;
+import android.app.ProgressDialog;
+import android.content.Intent;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.Button;
+import android.widget.ImageView;
+import android.widget.Toast;
+
+
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.rentcentric.paperlesscounter.Models.Responses.SignatureSetup;
+import com.rentcentric.paperlesscounter.R;
+import com.rentcentric.paperlesscounter.Utility.Const;
+
+import java.util.ArrayList;
+
+public class SignaturesActivity
+ extends AppCompatActivity implements
+        View.OnClickListener {
+
+
+    ImageView ivBack;
+    RecyclerView rvSignatures;
+    Button btnNext;
+    ProgressDialog progressDialog;
+
+    ArrayList<SignatureSetup> allSignatures;
+    SignaturesAdapter signaturesAdapter;
+
+    int totalNumberOfSignatures = 0;
+    boolean areSignaturesSaved = false;
+
+    int reservationId = -1;
+
+    boolean isActivationDialogVisible = false;
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_signatures);
+
+        initUI();
+
+        Intent intent = getIntent();
+        if (intent.getParcelableArrayListExtra(Const.INTENT_SIGNATURES_KEY) != null) {
+            allSignatures = intent.getParcelableArrayListExtra(Const.INTENT_SIGNATURES_KEY);
+            totalNumberOfSignatures = allSignatures.size();
+            bindSignaturesList(allSignatures);
+        }
+
+        if (intent.getIntExtra(Const.INTENT_RESERVATION_ID, -1) != -1) {
+            reservationId = intent.getIntExtra(Const.INTENT_RESERVATION_ID, -1);
+        }
+    }
+
+    void initUI() {
+        ivBack = findViewById(R.id.SignaturesBack);
+        ivBack.setOnClickListener(this);
+
+        progressDialog = new ProgressDialog(this);
+        progressDialog.setCanceledOnTouchOutside(false);
+        progressDialog.setMessage(getResources().getString(R.string.loading_txt));
+        progressDialog.setCancelable(false);
+
+        rvSignatures = findViewById(R.id.Signatures_RV);
+        rvSignatures.setLayoutManager(new LinearLayoutManager(SignaturesActivity.this));
+
+        btnNext = findViewById(R.id.SignaturesNext);
+        btnNext.setOnClickListener(this);
+    }
+
+    void bindSignaturesList(ArrayList<SignatureSetup> signaturesList) {
+        signaturesAdapter = new SignaturesAdapter(signaturesList, this);
+        rvSignatures.setAdapter(signaturesAdapter);
+    }
+
+    @Override
+    public void onClick(View v) {
+        switch (v.getId()) {
+
+            case R.id.SignaturesBack:
+                onBackPressed();
+                break;
+
+            case R.id.SignaturesNext:
+                // check if all signatures were signed
+                if (!areAllSignaturesSigned()) {
+                    showToast(getString(R.string.you_should_sign_all_items));
+                } else {
+
+//                    presenter.saveSignaturesSetup(
+//                            reservationId,
+//                            new ArrayList<>(signaturesAdapter.signaturesMap.values()));
+
+                    Intent returnIntent = new Intent();
+                    returnIntent.putExtra(MainActivity.INTENT_SIGNATURES_MAP, new ArrayList<>(signaturesAdapter.signaturesMap.values()));
+                    setResult(Activity.RESULT_OK, returnIntent);
+                    finish();
+                }
+
+                break;
+        }
+    }
+
+    @Override
+    public void onBackPressed() {
+        if (!areAllSignaturesSigned()) {
+            showToast(getString(R.string.you_should_sign_all_items));
+        } else if (!areSignaturesSaved) {
+            showToast(getString(R.string.you_should_submit_your_signature));
+        } else {
+            super.onBackPressed();
+        }
+    }
+
+    boolean areAllSignaturesSigned() {
+        if (signaturesAdapter != null) {
+            if (SignaturesAdapter.setOfSignedSignatures.size() == totalNumberOfSignatures) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    void showToast(String message) {
+        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/rentcentric/paperlesscounter/Models/Responses/SaveSignatureResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Models/Responses/SaveSignatureResponse.java	(date 1603365797069)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Models/Responses/SaveSignatureResponse.java	(date 1603365797069)
@@ -0,0 +1,41 @@
+package com.rentcentric.paperlesscounter.Models.Responses;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class SaveSignatureResponse {
+
+    @SerializedName("Description")
+    @Expose
+    private String description;
+    @SerializedName("State")
+    @Expose
+    private Boolean state;
+    @SerializedName("ExceptionMessage")
+    @Expose
+    private String exceptionMessage;
+
+    public String getDescription() {
+        return description;
+    }
+
+    public void setDescription(String description) {
+        this.description = description;
+    }
+
+    public Boolean getState() {
+        return state;
+    }
+
+    public void setState(Boolean state) {
+        this.state = state;
+    }
+
+    public String getExceptionMessage() {
+        return exceptionMessage;
+    }
+
+    public void setExceptionMessage(String exceptionMessage) {
+        this.exceptionMessage = exceptionMessage;
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/rentcentric/paperlesscounter/Models/Responses/SaveCustomerSignatureResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.rentcentric.paperlesscounter.Models.Responses;\r\n\r\nimport com.google.gson.annotations.Expose;\r\nimport com.google.gson.annotations.SerializedName;\r\n\r\npublic class SaveCustomerSignatureResponse {\r\n\r\n    @SerializedName(\"StatusInfo\")\r\n    @Expose\r\n    private StatusInfo statusInfo;\r\n\r\n    public StatusInfo getStatusInfo() {\r\n        return statusInfo;\r\n    }\r\n\r\n    public void setStatusInfo(StatusInfo statusInfo) {\r\n        this.statusInfo = statusInfo;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Models/Responses/SaveCustomerSignatureResponse.java	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Models/Responses/SaveCustomerSignatureResponse.java	(date 1610630284000)
@@ -4,16 +4,37 @@
 import com.google.gson.annotations.SerializedName;
 
 public class SaveCustomerSignatureResponse {
-
-    @SerializedName("StatusInfo")
+    @SerializedName("Description")
+    @Expose
+    private String description;
+    @SerializedName("State")
     @Expose
-    private StatusInfo statusInfo;
+    private Boolean state;
+    @SerializedName("ExceptionMessage")
+    @Expose
+    private String exceptionMessage;
+
+    public String getDescription() {
+        return description;
+    }
+
+    public void setDescription(String description) {
+        this.description = description;
+    }
+
+    public Boolean getState() {
+        return state;
+    }
+
+    public void setState(Boolean state) {
+        this.state = state;
+    }
 
-    public StatusInfo getStatusInfo() {
-        return statusInfo;
+    public String getExceptionMessage() {
+        return exceptionMessage;
     }
 
-    public void setStatusInfo(StatusInfo statusInfo) {
-        this.statusInfo = statusInfo;
+    public void setExceptionMessage(String exceptionMessage) {
+        this.exceptionMessage = exceptionMessage;
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/rentcentric/paperlesscounter/Models/Responses/GetSignatureSetupsResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Models/Responses/GetSignatureSetupsResponse.java	(date 1603365581392)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Models/Responses/GetSignatureSetupsResponse.java	(date 1603365581392)
@@ -0,0 +1,92 @@
+package com.rentcentric.paperlesscounter.Models.Responses;
+
+
+import android.os.Parcel;
+import android.os.Parcelable;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+import java.util.ArrayList;
+
+public class GetSignatureSetupsResponse implements Parcelable {
+
+    @SerializedName("Result")
+    @Expose
+    private ArrayList<SignatureSetup> signatureSetup = null;
+    @SerializedName("Description")
+    @Expose
+    private String description;
+    @SerializedName("ExceptionMessage")
+    @Expose
+    private String exceptionMessage;
+    @SerializedName("State")
+    @Expose
+    private Boolean state;
+
+
+    protected GetSignatureSetupsResponse(Parcel in) {
+        signatureSetup = in.createTypedArrayList(SignatureSetup.CREATOR);
+        description = in.readString();
+        exceptionMessage = in.readString();
+        byte tmpState = in.readByte();
+        state = tmpState == 0 ? null : tmpState == 1;
+    }
+
+    @Override
+    public void writeToParcel(Parcel dest, int flags) {
+        dest.writeTypedList(signatureSetup);
+        dest.writeString(description);
+        dest.writeString(exceptionMessage);
+        dest.writeByte((byte) (state == null ? 0 : state ? 1 : 2));
+    }
+
+    @Override
+    public int describeContents() {
+        return 0;
+    }
+
+    public static final Creator<GetSignatureSetupsResponse> CREATOR = new Creator<GetSignatureSetupsResponse>() {
+        @Override
+        public GetSignatureSetupsResponse createFromParcel(Parcel in) {
+            return new GetSignatureSetupsResponse(in);
+        }
+
+        @Override
+        public GetSignatureSetupsResponse[] newArray(int size) {
+            return new GetSignatureSetupsResponse[size];
+        }
+    };
+
+    public ArrayList<SignatureSetup> getSignatureSetup() {
+        return signatureSetup;
+    }
+
+    public void setSignatureSetup(ArrayList<SignatureSetup> signatureSetup) {
+        this.signatureSetup = signatureSetup;
+    }
+
+    public String getDescription() {
+        return description;
+    }
+
+    public void setDescription(String description) {
+        this.description = description;
+    }
+
+    public String getExceptionMessage() {
+        return exceptionMessage;
+    }
+
+    public void setExceptionMessage(String exceptionMessage) {
+        this.exceptionMessage = exceptionMessage;
+    }
+
+    public Boolean getState() {
+        return state;
+    }
+
+    public void setState(Boolean state) {
+        this.state = state;
+    }
+}
Index: app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/PaperLessSaveCustomerCheckInSignatureRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/PaperLessSaveCustomerCheckInSignatureRequest.java	(date 1610630248208)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/PaperLessSaveCustomerCheckInSignatureRequest.java	(date 1610630248208)
@@ -0,0 +1,115 @@
+package com.rentcentric.paperlesscounter.Models.Requests;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class PaperLessSaveCustomerCheckInSignatureRequest {
+
+    @SerializedName("AdminId")
+    @Expose
+    private String adminId;
+    @SerializedName("AgreementId")
+    @Expose
+    private Integer agreementId;
+    @SerializedName("AgreementSignId")
+    @Expose
+    private Integer agreementSignId;
+    @SerializedName("AgreementUrl")
+    @Expose
+    private String agreementUrl;
+    @SerializedName("LocationId")
+    @Expose
+    private Integer locationId;
+    @SerializedName("PaperLessAdminLoginId")
+    @Expose
+    private Integer paperLessAdminLoginId;
+    @SerializedName("SignatureImage")
+    @Expose
+    private String signautreImage;
+    @SerializedName("MobileRequestId")
+    @Expose
+    private Integer mobileRequestId;
+
+    public PaperLessSaveCustomerCheckInSignatureRequest(
+            String adminId,
+            Integer agreementId,
+            Integer agreementSignId,
+            Integer locationId,
+            Integer paperLessAdminLoginId,
+            String signautreImage,
+            Integer mobileRequestId,
+            String agreementUrl) {
+        this.adminId = adminId;
+        this.agreementId = agreementId;
+        this.agreementSignId = agreementSignId;
+        this.locationId = locationId;
+        this.paperLessAdminLoginId = paperLessAdminLoginId;
+        this.signautreImage = signautreImage;
+        this.mobileRequestId = mobileRequestId;
+        this.agreementUrl = agreementUrl;
+    }
+
+    public String getAdminId() {
+        return adminId;
+    }
+
+    public void setAdminId(String adminId) {
+        this.adminId = adminId;
+    }
+
+    public Integer getAgreementId() {
+        return agreementId;
+    }
+
+    public void setAgreementId(Integer agreementId) {
+        this.agreementId = agreementId;
+    }
+
+    public Integer getAgreementSignId() {
+        return agreementSignId;
+    }
+
+    public void setAgreementSignId(Integer agreementSignId) {
+        this.agreementSignId = agreementSignId;
+    }
+
+    public String getAgreementUrl() {
+        return agreementUrl;
+    }
+
+    public void setAgreementUrl(String agreementUrl) {
+        this.agreementUrl = agreementUrl;
+    }
+
+    public Integer getLocationId() {
+        return locationId;
+    }
+
+    public void setLocationId(Integer locationId) {
+        this.locationId = locationId;
+    }
+
+    public Integer getPaperLessAdminLoginId() {
+        return paperLessAdminLoginId;
+    }
+
+    public void setPaperLessAdminLoginId(Integer paperLessAdminLoginId) {
+        this.paperLessAdminLoginId = paperLessAdminLoginId;
+    }
+
+    public String getSignautreImage() {
+        return signautreImage;
+    }
+
+    public void setSignautreImage(String signautreImage) {
+        this.signautreImage = signautreImage;
+    }
+
+    public Integer getMobileRequestId() {
+        return mobileRequestId;
+    }
+
+    public void setMobileRequestId(Integer mobileRequestId) {
+        this.mobileRequestId = mobileRequestId;
+    }
+}
Index: app/src/main/java/com/rentcentric/paperlesscounter/Models/Responses/PaperLessSaveCustomerCheckInSignatureResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Models/Responses/PaperLessSaveCustomerCheckInSignatureResponse.java	(date 1610630284005)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Models/Responses/PaperLessSaveCustomerCheckInSignatureResponse.java	(date 1610630284005)
@@ -0,0 +1,40 @@
+package com.rentcentric.paperlesscounter.Models.Responses;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class PaperLessSaveCustomerCheckInSignatureResponse {
+    @SerializedName("Description")
+    @Expose
+    private String description;
+    @SerializedName("State")
+    @Expose
+    private Boolean state;
+    @SerializedName("ExceptionMessage")
+    @Expose
+    private String exceptionMessage;
+
+    public String getDescription() {
+        return description;
+    }
+
+    public void setDescription(String description) {
+        this.description = description;
+    }
+
+    public Boolean getState() {
+        return state;
+    }
+
+    public void setState(Boolean state) {
+        this.state = state;
+    }
+
+    public String getExceptionMessage() {
+        return exceptionMessage;
+    }
+
+    public void setExceptionMessage(String exceptionMessage) {
+        this.exceptionMessage = exceptionMessage;
+    }
+}
Index: app/src/main/java/com/rentcentric/paperlesscounter/Fragments/CustomerInformationFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.rentcentric.paperlesscounter.Fragments;\r\n\r\nimport android.app.DatePickerDialog;\r\nimport android.app.Fragment;\r\nimport android.app.ProgressDialog;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.rentcentric.paperlesscounter.Activities.CustomerInformationActivity;\r\nimport com.rentcentric.paperlesscounter.CallBacks.AddNewCustomerCallBack;\r\nimport com.rentcentric.paperlesscounter.CallBacks.GetCountriesCallBack;\r\nimport com.rentcentric.paperlesscounter.CallBacks.GetCustomerInfoCallBack;\r\nimport com.rentcentric.paperlesscounter.CallBacks.GetPayMethodsCallBack;\r\nimport com.rentcentric.paperlesscounter.CallBacks.GetStatesCallBack;\r\nimport com.rentcentric.paperlesscounter.CallBacks.UpdateCustomerCallBack;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.AddNewCustomerRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.CustomerCreditCardDto;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.UpdateCustomerRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.Country;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.CustomerCreditCard;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.CustomerInfoResult;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.PayMethod;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.State;\r\nimport com.rentcentric.paperlesscounter.R;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\n\r\npublic class CustomerInformationFragment extends Fragment\r\n        implements View.OnClickListener, CustomerInformationActivity.SubmitClickListener {\r\n\r\n    // UI\r\n    private View rootView;\r\n\r\n    private EditText firstNameEt, lastNameEt, emailEt, phoneEt, addressEt, cityEt, zipCodeEt,\r\n            licenseNumberEt, creditCardNumberEt, creditCardHolderEt, cvvEt, cardExpiryMonthEt, cardExpiryYearEt, companyNameEt, companyPhoneEt, insuranceCompanyEt, policyNumberEt, ssnEt, airportEt,\r\n            airlineEt, flightNumberEt, specialRequestEt;\r\n\r\n    private TextView birthdayTv, driverLicenseExpiryTv;\r\n\r\n    private Spinner stateSpinner, countrySpinner, driverLicenseStateSpinner, creditCardTypeSpinner;\r\n    private ImageView stateArrowIv, countryArrowIv, driverLicenseStateArrowIv, creditCardTypeArrowIv;\r\n    private ProgressBar stateProgressBar, countryProgressBar, licenseStateProgressBar, cardTypeProgressBar;\r\n\r\n    public ProgressDialog progressDialog;\r\n\r\n    // VARS\r\n    private List<State> stateList = null;\r\n    private List<Country> countryList = null;\r\n    private List<PayMethod> payMethodList = null;\r\n\r\n    private int licenseExpiryDay, licenseExpiryMonth, licenseExpiryYear;\r\n    private int cardExpiryDay, cardExpiryMonth, cardExpiryYear;\r\n\r\n    private boolean isEmailChanged = false,\r\n            isLicenseExpiryChanged = false,\r\n            isCCNumberChanged = false,\r\n            isCvvChanged = false;\r\n\r\n    private CustomerInfoResult customerInfoResult = null;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            // get saved instance\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        rootView = inflater.inflate(R.layout.fragment_customer_information, container, false);\r\n        initUi();\r\n        ((CustomerInformationActivity) getActivity()).setOnSubmitClickListener(this);\r\n        if (((CustomerInformationActivity) getActivity()).isNewCustomer) {\r\n            new GetStatesCallBack(this, null, null);\r\n            new GetCountriesCallBack(this, null);\r\n            new GetPayMethodsCallBack(this, null);\r\n        } else {\r\n            progressDialog.show();\r\n            new GetCustomerInfoCallBack(this,\r\n                    String.valueOf(((CustomerInformationActivity) getActivity()).customerId));\r\n        }\r\n        return rootView;\r\n    }\r\n\r\n    private void initUi() {\r\n        firstNameEt = rootView.findViewById(R.id.first_name_et);\r\n        lastNameEt = rootView.findViewById(R.id.last_name_et);\r\n        emailEt = rootView.findViewById(R.id.email_et);\r\n        phoneEt = rootView.findViewById(R.id.phone_et);\r\n        addressEt = rootView.findViewById(R.id.address_et);\r\n        cityEt = rootView.findViewById(R.id.city_et);\r\n        zipCodeEt = rootView.findViewById(R.id.zipcode_et);\r\n        licenseNumberEt = rootView.findViewById(R.id.driver_license_number_et);\r\n        creditCardNumberEt = rootView.findViewById(R.id.credit_Card_number_et);\r\n        creditCardHolderEt = rootView.findViewById(R.id.card_holder_et);\r\n        cvvEt = rootView.findViewById(R.id.cvv_et);\r\n        companyNameEt = rootView.findViewById(R.id.company_name_et);\r\n        companyPhoneEt = rootView.findViewById(R.id.company_phone_et);\r\n        insuranceCompanyEt = rootView.findViewById(R.id.insurance_company_et);\r\n        policyNumberEt = rootView.findViewById(R.id.policy_number_et);\r\n        ssnEt = rootView.findViewById(R.id.ssn_et);\r\n        airportEt = rootView.findViewById(R.id.airport_et);\r\n        airlineEt = rootView.findViewById(R.id.airline_et);\r\n        flightNumberEt = rootView.findViewById(R.id.flight_number_et);\r\n        specialRequestEt = rootView.findViewById(R.id.special_request_et);\r\n\r\n        birthdayTv = rootView.findViewById(R.id.birthday_tv);\r\n        birthdayTv.setOnClickListener(this);\r\n        driverLicenseExpiryTv = rootView.findViewById(R.id.driver_license_expiry_tv);\r\n        driverLicenseExpiryTv.setOnClickListener(this);\r\n        cardExpiryMonthEt = rootView.findViewById(R.id.card_expiry_month_et);\r\n        cardExpiryYearEt = rootView.findViewById(R.id.card_expiry_year_et);\r\n\r\n        stateSpinner = rootView.findViewById(R.id.state_spinner);\r\n        countrySpinner = rootView.findViewById(R.id.country_spinner);\r\n        driverLicenseStateSpinner = rootView.findViewById(R.id.driver_license_state_spinner);\r\n        creditCardTypeSpinner = rootView.findViewById(R.id.credit_card_type_spinner);\r\n\r\n        stateArrowIv = rootView.findViewById(R.id.spinner_arrow_state);\r\n        countryArrowIv = rootView.findViewById(R.id.spinner_arrow_county);\r\n        driverLicenseStateArrowIv = rootView.findViewById(R.id.spinner_arrow_license_state);\r\n        creditCardTypeArrowIv = rootView.findViewById(R.id.spinner_arrow_credit_card_type);\r\n\r\n        stateProgressBar = rootView.findViewById(R.id.state_pb);\r\n        countryProgressBar = rootView.findViewById(R.id.country_pb);\r\n        licenseStateProgressBar = rootView.findViewById(R.id.license_state_pb);\r\n        cardTypeProgressBar = rootView.findViewById(R.id.card_type_pb);\r\n\r\n        progressDialog = new ProgressDialog(getActivity());\r\n        progressDialog.setCanceledOnTouchOutside(false);\r\n        progressDialog.setMessage(getResources().getString(R.string.loading_txt));\r\n        progressDialog.setCancelable(false);\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        switch (v.getId()) {\r\n            case R.id.birthday_tv:\r\n                selectDateOfBirth();\r\n                break;\r\n\r\n            case R.id.birthday_iv:\r\n                selectDateOfBirth();\r\n                break;\r\n\r\n            case R.id.driver_license_expiry_tv:\r\n                selectLicenseExpiryDate();\r\n                break;\r\n\r\n            case R.id.license_expiry_iv:\r\n                selectLicenseExpiryDate();\r\n                break;\r\n\r\n//            case R.id.card_expiry_et:\r\n//                selectCardExpiryDate();\r\n//                break;\r\n//\r\n//            case R.id.card_expiry_iv:\r\n//                selectCardExpiryDate();\r\n//                break;\r\n        }\r\n    }\r\n\r\n\r\n    // for states and license states\r\n    public void bindStates(List<State> stateList, String stateCode, String licenseStateCode) {\r\n        this.stateList = stateList;\r\n\r\n        stateProgressBar.setVisibility(View.INVISIBLE);\r\n        stateArrowIv.setVisibility(View.VISIBLE);\r\n\r\n        licenseStateProgressBar.setVisibility(View.INVISIBLE);\r\n        driverLicenseStateArrowIv.setVisibility(View.VISIBLE);\r\n\r\n        List<String> states = new ArrayList<>();\r\n        for (State s : stateList) {\r\n            states.add(s.getStateName());\r\n        }\r\n        ArrayAdapter<String> statesAdapter = new ArrayAdapter<String>(Objects.requireNonNull(getActivity()), R.layout.country_list_item, states);\r\n        stateSpinner.setAdapter(statesAdapter);\r\n        driverLicenseStateSpinner.setAdapter(statesAdapter);\r\n\r\n        if (stateCode != null) {\r\n            int index = 0;\r\n            for (State s : stateList) {\r\n                if (s.getStateCode().equals(stateCode)) {\r\n                    stateSpinner.setSelection(index);\r\n                    break;\r\n                }\r\n                index++;\r\n            }\r\n        }\r\n\r\n        if (licenseStateCode != null) {\r\n            int index = 0;\r\n            for (State s : stateList) {\r\n                if (s.getStateCode().equals(licenseStateCode)) {\r\n                    driverLicenseStateSpinner.setSelection(index);\r\n                    break;\r\n                }\r\n                index++;\r\n            }\r\n        }\r\n    }\r\n\r\n    public void bindCountries(List<Country> countryList, String countryCode) {\r\n        this.countryList = countryList;\r\n\r\n        countryProgressBar.setVisibility(View.INVISIBLE);\r\n        countryArrowIv.setVisibility(View.VISIBLE);\r\n\r\n        List<String> countries = new ArrayList<>();\r\n        for (Country c : countryList) {\r\n            countries.add(c.getCountryName());\r\n        }\r\n        ArrayAdapter<String> countryAdapter = new ArrayAdapter<String>(Objects.requireNonNull(getActivity()), R.layout.country_list_item, countries);\r\n        countrySpinner.setAdapter(countryAdapter);\r\n\r\n        if (countryCode != null) {\r\n            int index = 0;\r\n            for (Country c : countryList) {\r\n                if (c.getCountryCode().equals(countryCode)) {\r\n                    countrySpinner.setSelection(index);\r\n                    break;\r\n                }\r\n                index++;\r\n            }\r\n        }\r\n    }\r\n\r\n    public void bindPayMethods(List<PayMethod> payMethodList, PayMethod payMethod) {\r\n        this.payMethodList = payMethodList;\r\n\r\n        cardTypeProgressBar.setVisibility(View.INVISIBLE);\r\n        creditCardTypeArrowIv.setVisibility(View.VISIBLE);\r\n\r\n        List<String> payMethods = new ArrayList<>();\r\n        for (PayMethod p : payMethodList) {\r\n            payMethods.add(p.getPayMethod());\r\n        }\r\n        ArrayAdapter<String> countryAdapter = new ArrayAdapter<String>(Objects.requireNonNull(getActivity()), R.layout.country_list_item, payMethods);\r\n        creditCardTypeSpinner.setAdapter(countryAdapter);\r\n\r\n        if (payMethod != null) {\r\n            int index = 0;\r\n            for (PayMethod pm : payMethodList) {\r\n                if (pm.getPayMethodId().equals(payMethod.getPayMethodId())) {\r\n                    creditCardTypeSpinner.setSelection(index);\r\n                    break;\r\n                }\r\n                index++;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private boolean validateInput() {\r\n        // todo: handle update case\r\n        if(customerInfoResult != null){ // update case\r\n                if(!emailEt.getText().toString().equals(customerInfoResult.getCustomerInfo().getEmail())){\r\n                    isEmailChanged = true;\r\n                }\r\n            if(!driverLicenseExpiryTv.getText().toString().equals(customerInfoResult.getCustomerInfo().getLicenseExpiry())){\r\n                isLicenseExpiryChanged = true;\r\n            }\r\n            if(!cvvEt.getText().toString().equals(customerInfoResult.getCustomerInfo().getCvv())){\r\n                isCvvChanged = true;\r\n            }\r\n            if(customerInfoResult.getCustomerCreditCards() != null &&\r\n                    customerInfoResult.getCustomerCreditCards().get(0) != null &&\r\n                    !creditCardNumberEt.getText().toString().equals(customerInfoResult.getCustomerCreditCards().get(0).getCustomerCreditCardNumber())){\r\n                isCCNumberChanged = true;\r\n            }\r\n\r\n        }\r\n\r\n        // validate\r\n        boolean proceed = true;\r\n        if (firstNameEt.getText().toString().isEmpty()) {\r\n            firstNameEt.setError(getActivity().getString(R.string.required));\r\n            firstNameEt.requestFocus();\r\n            proceed = false;\r\n        } else if (lastNameEt.getText().toString().isEmpty()) {\r\n            lastNameEt.setError(getActivity().getString(R.string.required));\r\n            lastNameEt.requestFocus();\r\n            proceed = false;\r\n        } else if (emailEt.getText().toString().isEmpty()) {\r\n            emailEt.setError(getActivity().getString(R.string.required));\r\n            emailEt.requestFocus();\r\n            proceed = false;\r\n        }\r\n        else if ((customerInfoResult == null || isEmailChanged) &&\r\n                !android.util.Patterns.EMAIL_ADDRESS.matcher(emailEt.getText().toString()).matches()) {\r\n            emailEt.setError(getActivity().getString(R.string.invalid_email_address_error));\r\n            emailEt.requestFocus();\r\n            proceed = false;\r\n        } else if (phoneEt.getText().toString().isEmpty()) {\r\n            phoneEt.setError(getActivity().getString(R.string.required));\r\n            phoneEt.requestFocus();\r\n            proceed = false;\r\n        } else if (birthdayTv.getText().toString().isEmpty()) {\r\n            birthdayTv.setError(getActivity().getString(R.string.required));\r\n            birthdayTv.requestFocus();\r\n            proceed = false;\r\n        } else if (addressEt.getText().toString().isEmpty()) {\r\n            addressEt.setError(getActivity().getString(R.string.required));\r\n            addressEt.requestFocus();\r\n            proceed = false;\r\n        } else if (cityEt.getText().toString().isEmpty()) {\r\n            cityEt.setError(getActivity().getString(R.string.required));\r\n            cityEt.requestFocus();\r\n            proceed = false;\r\n        } else if (stateList == null) {\r\n            proceed = false;\r\n            Toast.makeText(getActivity(), \"Select State\", Toast.LENGTH_SHORT).show();\r\n        } else if (countryList == null) {\r\n            proceed = false;\r\n            Toast.makeText(getActivity(), \"Select Country\", Toast.LENGTH_SHORT).show();\r\n        } else if (zipCodeEt.getText().toString().isEmpty()) {\r\n            zipCodeEt.setError(getActivity().getString(R.string.required));\r\n            zipCodeEt.requestFocus();\r\n            proceed = false;\r\n        } else if (licenseNumberEt.getText().toString().isEmpty()) {\r\n            licenseNumberEt.setError(getActivity().getString(R.string.required));\r\n            licenseNumberEt.requestFocus();\r\n            proceed = false;\r\n        }\r\n        else if (driverLicenseExpiryTv.getText().toString().isEmpty()) {\r\n            driverLicenseExpiryTv.setError(getActivity().getString(R.string.required));\r\n            driverLicenseExpiryTv.requestFocus();\r\n            proceed = false;\r\n        }\r\n        else if (payMethodList == null) {\r\n            proceed = false;\r\n            Toast.makeText(getActivity(), \"Select Card Type\", Toast.LENGTH_SHORT).show();\r\n        } else if (creditCardNumberEt.getText().toString().isEmpty()) {\r\n            creditCardNumberEt.setError(getActivity().getString(R.string.required));\r\n            creditCardNumberEt.requestFocus();\r\n            proceed = false;\r\n        } else if (creditCardHolderEt.getText().toString().isEmpty()) {\r\n            creditCardHolderEt.setError(getActivity().getString(R.string.required));\r\n            creditCardHolderEt.requestFocus();\r\n            proceed = false;\r\n        } else if (cvvEt.getText().toString().isEmpty()) {\r\n            cvvEt.setError(getActivity().getString(R.string.required));\r\n            cvvEt.requestFocus();\r\n            proceed = false;\r\n        } else if (cardExpiryMonthEt.getText().toString().isEmpty()) {\r\n            cardExpiryMonthEt.setError(getActivity().getString(R.string.required));\r\n            cardExpiryMonthEt.requestFocus();\r\n            proceed = false;\r\n        }\r\n\r\n        return proceed;\r\n    }\r\n\r\n    @Override\r\n    public void onSubmitClicked() {\r\n        if (validateInput()) {\r\n            progressDialog.show();\r\n            if (((CustomerInformationActivity) getActivity()).isNewCustomer) {\r\n                // add new customer\r\n                new AddNewCustomerCallBack(this,\r\n                        new AddNewCustomerRequest(\r\n                                firstNameEt.getText().toString(),\r\n                                lastNameEt.getText().toString(),\r\n                                emailEt.getText().toString(),\r\n                                phoneEt.getText().toString(),\r\n                                birthdayTv.getText().toString(),\r\n                                addressEt.getText().toString(),\r\n                                cityEt.getText().toString(),\r\n                                stateList.get(stateSpinner.getSelectedItemPosition()).getStateCode(),\r\n                                countryList.get(countrySpinner.getSelectedItemPosition()).getCountryCode(),\r\n                                zipCodeEt.getText().toString(),\r\n                                licenseNumberEt.getText().toString(),\r\n                                driverLicenseExpiryTv.getText().toString(),\r\n                                stateList.get(driverLicenseStateSpinner.getSelectedItemPosition()).getStateCode(),\r\n                                new CustomerCreditCardDto(\r\n                                        payMethodList.get(creditCardTypeSpinner.getSelectedItemPosition()),\r\n                                        0,\r\n                                        creditCardNumberEt.getText().toString(),\r\n                                        true,\r\n                                        creditCardHolderEt.getText().toString(),\r\n                                        Integer.parseInt(cardExpiryMonthEt.getText().toString()),\r\n                                        Integer.parseInt(cardExpiryYearEt.getText().toString())\r\n                                ),\r\n                                companyNameEt.getText().toString(),\r\n                                companyPhoneEt.getText().toString(),\r\n                                insuranceCompanyEt.getText().toString(),\r\n                                policyNumberEt.getText().toString(),\r\n                                ssnEt.getText().toString(),\r\n                                ((CustomerInformationActivity) getActivity()).mobileRequestId,\r\n                                airportEt.getText().toString(),\r\n                                airlineEt.getText().toString(),\r\n                                flightNumberEt.getText().toString(),\r\n                                specialRequestEt.getText().toString()\r\n                        ));\r\n            } else {\r\n                // update customer\r\n                new UpdateCustomerCallBack(this,\r\n                        new UpdateCustomerRequest(\r\n                                customerInfoResult.getCustomerInfo().getCustomerId(),\r\n                                firstNameEt.getText().toString(),\r\n                                lastNameEt.getText().toString(),\r\n                                isEmailChanged? emailEt.getText().toString() : null,\r\n                                phoneEt.getText().toString(),\r\n                                birthdayTv.getText().toString(),\r\n                                addressEt.getText().toString(),\r\n                                cityEt.getText().toString(),\r\n                                stateList.get(stateSpinner.getSelectedItemPosition()).getStateCode(),\r\n                                countryList.get(countrySpinner.getSelectedItemPosition()).getCountryCode(),\r\n                                zipCodeEt.getText().toString(),\r\n                                licenseNumberEt.getText().toString(),\r\n                                isLicenseExpiryChanged ? driverLicenseExpiryTv.getText().toString() : null,\r\n                                stateList.get(driverLicenseStateSpinner.getSelectedItemPosition()).getStateCode(),\r\n                                companyNameEt.getText().toString(),\r\n                                companyPhoneEt.getText().toString(),\r\n                                insuranceCompanyEt.getText().toString(),\r\n                                policyNumberEt.getText().toString(),\r\n                                ssnEt.getText().toString(),\r\n                                airportEt.getText().toString(),\r\n                                airlineEt.getText().toString(),\r\n                                flightNumberEt.getText().toString(),\r\n                                specialRequestEt.getText().toString()\r\n                        ));\r\n            }\r\n        }\r\n    }\r\n\r\n    private void selectDateOfBirth() {\r\n        DatePickerDialog pickupDatePickerDialog = new DatePickerDialog(getActivity(), new DatePickerDialog.OnDateSetListener() {\r\n            @Override\r\n            public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\r\n                String result = \"\";\r\n\r\n                if (dayOfMonth <= 9) {\r\n                    result = ((month + 1 <= 9 ? \"0\" : \"\") + (month + 1) + \"/\" + \"0\" + dayOfMonth + \"/\" + year);\r\n                } else {\r\n                    result = ((month + 1 <= 9 ? \"0\" : \"\") + (month + 1) + \"/\" + dayOfMonth + \"/\" + year);\r\n                }\r\n\r\n                birthdayTv.setText(result);\r\n                birthdayTv.setError(null);\r\n            }\r\n        }, 2000,\r\n                0,\r\n                1);\r\n        pickupDatePickerDialog.getDatePicker().setMaxDate(System.currentTimeMillis());\r\n        pickupDatePickerDialog.show();\r\n    }\r\n\r\n    private void selectLicenseExpiryDate() {\r\n        DatePickerDialog pickupDatePickerDialog = new DatePickerDialog(getActivity(), new DatePickerDialog.OnDateSetListener() {\r\n            @Override\r\n            public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\r\n                licenseExpiryMonth = month;\r\n                licenseExpiryYear = year;\r\n                licenseExpiryDay = dayOfMonth;\r\n\r\n                String result = \"\";\r\n\r\n                if (dayOfMonth <= 9) {\r\n                    result = ((month + 1 <= 9 ? \"0\" : \"\") + (month + 1) + \"/\" + \"0\" + dayOfMonth + \"/\" + year);\r\n                } else {\r\n                    result = ((month + 1 <= 9 ? \"0\" : \"\") + (month + 1) + \"/\" + dayOfMonth + \"/\" + year);\r\n                }\r\n\r\n                driverLicenseExpiryTv.setText(result);\r\n                driverLicenseExpiryTv.setError(null);\r\n            }\r\n        }, licenseExpiryYear,\r\n                licenseExpiryMonth,\r\n                licenseExpiryDay);\r\n        pickupDatePickerDialog.getDatePicker().setMinDate(System.currentTimeMillis());\r\n        pickupDatePickerDialog.show();\r\n    }\r\n\r\n    private void selectCardExpiryDate() {\r\n        DatePickerDialog pickupDatePickerDialog = new DatePickerDialog(getActivity(), new DatePickerDialog.OnDateSetListener() {\r\n            @Override\r\n            public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\r\n                cardExpiryMonth = month;\r\n                cardExpiryYear = year;\r\n                cardExpiryDay = dayOfMonth;\r\n\r\n                String result = \"\";\r\n\r\n                if (dayOfMonth <= 9) {\r\n                    result = ((month + 1 <= 9 ? \"0\" : \"\") + (month + 1) + \"/\" + \"0\" + dayOfMonth + \"/\" + year);\r\n                } else {\r\n                    result = ((month + 1 <= 9 ? \"0\" : \"\") + (month + 1) + \"/\" + dayOfMonth + \"/\" + year);\r\n                }\r\n\r\n                cardExpiryMonthEt.setText(result);\r\n                cardExpiryMonthEt.setError(null);\r\n            }\r\n        }, cardExpiryYear,\r\n                cardExpiryMonth,\r\n                cardExpiryDay);\r\n        pickupDatePickerDialog.getDatePicker().setMinDate(System.currentTimeMillis());\r\n        pickupDatePickerDialog.show();\r\n    }\r\n\r\n    public void onAddCustomerSuccess() {\r\n        progressDialog.dismiss();\r\n        getActivity().finish();\r\n        Toast.makeText(getActivity(), \"Customer Added Successfully!\", Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    public void onUpdateCustomerSuccess() {\r\n        progressDialog.dismiss();\r\n        getActivity().finish();\r\n        Toast.makeText(getActivity(), \"Customer Updated Successfully!\", Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    public void onGetCustomerInfoSuccess(CustomerInfoResult customerInfoResult) {\r\n        this.customerInfoResult = customerInfoResult;\r\n        progressDialog.dismiss();\r\n        // bind data\r\n        firstNameEt.setText(customerInfoResult.getCustomerInfo().getFirstName());\r\n        lastNameEt.setText(customerInfoResult.getCustomerInfo().getLastName());\r\n        emailEt.setText(customerInfoResult.getCustomerInfo().getEmail());\r\n//        emailEt.setFocusable(false);\r\n        phoneEt.setText(customerInfoResult.getCustomerInfo().getPhone());\r\n        birthdayTv.setText(customerInfoResult.getCustomerInfo().getBirthday());\r\n        addressEt.setText(customerInfoResult.getCustomerInfo().getAddress());\r\n        cityEt.setText(customerInfoResult.getCustomerInfo().getCity());\r\n\r\n        new GetStatesCallBack(\r\n                this,\r\n                customerInfoResult.getCustomerInfo().getStateCode(),\r\n                customerInfoResult.getCustomerInfo().getLicenseState());\r\n\r\n        new GetCountriesCallBack(\r\n                this,\r\n                customerInfoResult.getCustomerInfo().getCountryCode());\r\n\r\n        zipCodeEt.setText(customerInfoResult.getCustomerInfo().getZip());\r\n        cityEt.setText(customerInfoResult.getCustomerInfo().getCity());\r\n        licenseNumberEt.setText(customerInfoResult.getCustomerInfo().getLicenseNumber());\r\n        driverLicenseExpiryTv.setText(customerInfoResult.getCustomerInfo().getLicenseExpiry());\r\n\r\n        // select the default cc\r\n        if (customerInfoResult.getCustomerCreditCards() != null) {\r\n            for (CustomerCreditCard cc : customerInfoResult.getCustomerCreditCards()) {\r\n                if (cc.getIsDefault()) {\r\n                    new GetPayMethodsCallBack(this, cc.getPayMethod());\r\n                    creditCardHolderEt.setText(cc.getCardHolder());\r\n                    creditCardNumberEt.setText(cc.getCustomerCreditCardNumber());\r\n                    cvvEt.setText(customerInfoResult.getCustomerInfo().getCvv());\r\n                    cardExpiryMonthEt.setText(cc.getExpiryMonth().toString());\r\n                    cardExpiryYearEt.setText(cc.getExpiryYear().toString());\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            new GetPayMethodsCallBack(this, null);\r\n        }\r\n\r\n\r\n//        creditCardTypeSpinner.setEnabled(false);\r\n//        cardTypeProgressBar.setVisibility(View.GONE);\r\n//        creditCardTypeArrowIv.setVisibility(View.VISIBLE);\r\n//\r\n//        creditCardNumberEt.setEnabled(false);\r\n//        creditCardHolderEt.setEnabled(false);\r\n//        cvvEt.setEnabled(false);\r\n//        cardExpiryMonthEt.setClickable(false);\r\n\r\n        companyNameEt.setText(customerInfoResult.getCustomerInfo().getCompanyName());\r\n        companyPhoneEt.setText(customerInfoResult.getCustomerInfo().getCompanyPhone());\r\n        insuranceCompanyEt.setText(customerInfoResult.getCustomerInfo().getInsuranceCompany());\r\n        policyNumberEt.setText(customerInfoResult.getCustomerInfo().getPolicyNumber());\r\n        ssnEt.setText(customerInfoResult.getCustomerInfo().getSSN());\r\n        airportEt.setText(customerInfoResult.getCustomerInfo().getAirport());\r\n        airlineEt.setText(customerInfoResult.getCustomerInfo().getAirline());\r\n        flightNumberEt.setText(customerInfoResult.getCustomerInfo().getFlightNumber());\r\n        specialRequestEt.setText(customerInfoResult.getCustomerInfo().getLocalInformation());\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Fragments/CustomerInformationFragment.java	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Fragments/CustomerInformationFragment.java	(date 1610476909436)
@@ -355,16 +355,24 @@
             creditCardHolderEt.setError(getActivity().getString(R.string.required));
             creditCardHolderEt.requestFocus();
             proceed = false;
-        } else if (cvvEt.getText().toString().isEmpty()) {
-            cvvEt.setError(getActivity().getString(R.string.required));
-            cvvEt.requestFocus();
-            proceed = false;
-        } else if (cardExpiryMonthEt.getText().toString().isEmpty()) {
+        }
+//        else if (cvvEt.getText().toString().isEmpty()) {
+//            cvvEt.setError(getActivity().getString(R.string.required));
+//            cvvEt.requestFocus();
+//            proceed = false;
+//        }
+        else if (cardExpiryMonthEt.getText().toString().isEmpty()) {
             cardExpiryMonthEt.setError(getActivity().getString(R.string.required));
             cardExpiryMonthEt.requestFocus();
             proceed = false;
         }
 
+        else if (cardExpiryYearEt.getText().toString().isEmpty()) {
+            cardExpiryYearEt.setError(getActivity().getString(R.string.required));
+            cardExpiryYearEt.requestFocus();
+            proceed = false;
+        }
+
         return proceed;
     }
 
@@ -435,7 +443,8 @@
                                 airportEt.getText().toString(),
                                 airlineEt.getText().toString(),
                                 flightNumberEt.getText().toString(),
-                                specialRequestEt.getText().toString()
+                                specialRequestEt.getText().toString(),
+                                ((CustomerInformationActivity) getActivity()).mobileRequestId
                         ));
             }
         }
Index: app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/GetPaperLessAgreementRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.rentcentric.paperlesscounter.Models.Requests;\r\n\r\nimport com.google.gson.annotations.Expose;\r\nimport com.google.gson.annotations.SerializedName;\r\n\r\npublic class GetPaperLessAgreementRequest {\r\n\r\n    @SerializedName(\"PaperLessAdminLoginId\")\r\n    @Expose\r\n    private Integer paperLessAdminLoginId;\r\n    @SerializedName(\"AdminId\")\r\n    @Expose\r\n    private String adminId;\r\n    @SerializedName(\"LocationId\")\r\n    @Expose\r\n    private Integer locationId;\r\n    @SerializedName(\"MobileRequestId\")\r\n    @Expose\r\n    private Integer mobileRequestId;\r\n\r\n    public GetPaperLessAgreementRequest(Integer paperLessAdminLoginId, String adminId, Integer locationId, Integer mobileRequestId) {\r\n        this.paperLessAdminLoginId = paperLessAdminLoginId;\r\n        this.adminId = adminId;\r\n        this.locationId = locationId;\r\n        this.mobileRequestId = mobileRequestId;\r\n    }\r\n\r\n    public Integer getPaperLessAdminLoginId() {\r\n        return paperLessAdminLoginId;\r\n    }\r\n\r\n    public void setPaperLessAdminLoginId(Integer paperLessAdminLoginId) {\r\n        this.paperLessAdminLoginId = paperLessAdminLoginId;\r\n    }\r\n\r\n    public String getAdminId() {\r\n        return adminId;\r\n    }\r\n\r\n    public void setAdminId(String adminId) {\r\n        this.adminId = adminId;\r\n    }\r\n\r\n    public Integer getLocationId() {\r\n        return locationId;\r\n    }\r\n\r\n    public void setLocationId(Integer locationId) {\r\n        this.locationId = locationId;\r\n    }\r\n\r\n    public Integer getMobileRequestId() {\r\n        return mobileRequestId;\r\n    }\r\n\r\n    public void setMobileRequestId(Integer mobileRequestId) {\r\n        this.mobileRequestId = mobileRequestId;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/GetPaperLessAgreementRequest.java	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/GetPaperLessAgreementRequest.java	(date 1610022131533)
@@ -18,11 +18,14 @@
     @Expose
     private Integer mobileRequestId;
 
-    public GetPaperLessAgreementRequest(Integer paperLessAdminLoginId, String adminId, Integer locationId, Integer mobileRequestId) {
+    public GetPaperLessAgreementRequest(
+            Integer paperLessAdminLoginId,
+            String adminId,
+            Integer locationId) {
         this.paperLessAdminLoginId = paperLessAdminLoginId;
         this.adminId = adminId;
         this.locationId = locationId;
-        this.mobileRequestId = mobileRequestId;
+//        this.mobileRequestId = mobileRequestId;
     }
 
     public Integer getPaperLessAdminLoginId() {
Index: app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/SaveCustomerSignatureRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.rentcentric.paperlesscounter.Models.Requests;\r\n\r\nimport com.google.gson.annotations.Expose;\r\nimport com.google.gson.annotations.SerializedName;\r\n\r\npublic class SaveCustomerSignatureRequest {\r\n\r\n    @SerializedName(\"AdminId\")\r\n    @Expose\r\n    private String adminId;\r\n    @SerializedName(\"AgreementId\")\r\n    @Expose\r\n    private String agreementId;\r\n    @SerializedName(\"AgreementSignId\")\r\n    @Expose\r\n    private String agreementSignId;\r\n    @SerializedName(\"AgreementUrl\")\r\n    @Expose\r\n    private String agreementUrl;\r\n    @SerializedName(\"LocationId\")\r\n    @Expose\r\n    private String locationId;\r\n    @SerializedName(\"PaperLessAdminLoginId\")\r\n    @Expose\r\n    private String paperLessAdminLoginId;\r\n    @SerializedName(\"SignautreImage\")\r\n    @Expose\r\n    private String signautreImage;\r\n\r\n    public SaveCustomerSignatureRequest(String adminId, String agreementId, String agreementSignId, String locationId, String paperLessAdminLoginId, String signautreImage) {\r\n        this.adminId = adminId;\r\n        this.agreementId = agreementId;\r\n        this.agreementSignId = agreementSignId;\r\n        this.locationId = locationId;\r\n        this.paperLessAdminLoginId = paperLessAdminLoginId;\r\n        this.signautreImage = signautreImage;\r\n    }\r\n\r\n    public String getAdminId() {\r\n        return adminId;\r\n    }\r\n\r\n    public void setAdminId(String adminId) {\r\n        this.adminId = adminId;\r\n    }\r\n\r\n    public String getAgreementId() {\r\n        return agreementId;\r\n    }\r\n\r\n    public void setAgreementId(String agreementId) {\r\n        this.agreementId = agreementId;\r\n    }\r\n\r\n    public String getAgreementSignId() {\r\n        return agreementSignId;\r\n    }\r\n\r\n    public void setAgreementSignId(String agreementSignId) {\r\n        this.agreementSignId = agreementSignId;\r\n    }\r\n\r\n    public String getAgreementUrl() {\r\n        return agreementUrl;\r\n    }\r\n\r\n    public void setAgreementUrl(String agreementUrl) {\r\n        this.agreementUrl = agreementUrl;\r\n    }\r\n\r\n    public String getLocationId() {\r\n        return locationId;\r\n    }\r\n\r\n    public void setLocationId(String locationId) {\r\n        this.locationId = locationId;\r\n    }\r\n\r\n    public String getPaperLessAdminLoginId() {\r\n        return paperLessAdminLoginId;\r\n    }\r\n\r\n    public void setPaperLessAdminLoginId(String paperLessAdminLoginId) {\r\n        this.paperLessAdminLoginId = paperLessAdminLoginId;\r\n    }\r\n\r\n    public String getSignautreImage() {\r\n        return signautreImage;\r\n    }\r\n\r\n    public void setSignautreImage(String signautreImage) {\r\n        this.signautreImage = signautreImage;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/SaveCustomerSignatureRequest.java	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/SaveCustomerSignatureRequest.java	(date 1610389782507)
@@ -10,30 +10,43 @@
     private String adminId;
     @SerializedName("AgreementId")
     @Expose
-    private String agreementId;
+    private Integer agreementId;
     @SerializedName("AgreementSignId")
     @Expose
-    private String agreementSignId;
+    private Integer agreementSignId;
     @SerializedName("AgreementUrl")
     @Expose
     private String agreementUrl;
     @SerializedName("LocationId")
     @Expose
-    private String locationId;
+    private Integer locationId;
     @SerializedName("PaperLessAdminLoginId")
     @Expose
-    private String paperLessAdminLoginId;
-    @SerializedName("SignautreImage")
+    private Integer paperLessAdminLoginId;
+    @SerializedName("SignatureImage")
     @Expose
     private String signautreImage;
+    @SerializedName("MobileRequestId")
+    @Expose
+    private Integer mobileRequestId;
 
-    public SaveCustomerSignatureRequest(String adminId, String agreementId, String agreementSignId, String locationId, String paperLessAdminLoginId, String signautreImage) {
+    public SaveCustomerSignatureRequest(
+            String adminId,
+            Integer agreementId,
+            Integer agreementSignId,
+            Integer locationId,
+            Integer paperLessAdminLoginId,
+            String signautreImage,
+            Integer mobileRequestId,
+            String agreementUrl) {
         this.adminId = adminId;
         this.agreementId = agreementId;
         this.agreementSignId = agreementSignId;
         this.locationId = locationId;
         this.paperLessAdminLoginId = paperLessAdminLoginId;
         this.signautreImage = signautreImage;
+        this.mobileRequestId = mobileRequestId;
+        this.agreementUrl = agreementUrl;
     }
 
     public String getAdminId() {
@@ -44,19 +57,19 @@
         this.adminId = adminId;
     }
 
-    public String getAgreementId() {
+    public Integer getAgreementId() {
         return agreementId;
     }
 
-    public void setAgreementId(String agreementId) {
+    public void setAgreementId(Integer agreementId) {
         this.agreementId = agreementId;
     }
 
-    public String getAgreementSignId() {
+    public Integer getAgreementSignId() {
         return agreementSignId;
     }
 
-    public void setAgreementSignId(String agreementSignId) {
+    public void setAgreementSignId(Integer agreementSignId) {
         this.agreementSignId = agreementSignId;
     }
 
@@ -68,19 +81,19 @@
         this.agreementUrl = agreementUrl;
     }
 
-    public String getLocationId() {
+    public Integer getLocationId() {
         return locationId;
     }
 
-    public void setLocationId(String locationId) {
+    public void setLocationId(Integer locationId) {
         this.locationId = locationId;
     }
 
-    public String getPaperLessAdminLoginId() {
+    public Integer getPaperLessAdminLoginId() {
         return paperLessAdminLoginId;
     }
 
-    public void setPaperLessAdminLoginId(String paperLessAdminLoginId) {
+    public void setPaperLessAdminLoginId(Integer paperLessAdminLoginId) {
         this.paperLessAdminLoginId = paperLessAdminLoginId;
     }
 
@@ -91,4 +104,12 @@
     public void setSignautreImage(String signautreImage) {
         this.signautreImage = signautreImage;
     }
+
+    public Integer getMobileRequestId() {
+        return mobileRequestId;
+    }
+
+    public void setMobileRequestId(Integer mobileRequestId) {
+        this.mobileRequestId = mobileRequestId;
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/AddNewCustomerRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\npackage com.rentcentric.paperlesscounter.Models.Requests;\r\n\r\nimport com.google.gson.annotations.Expose;\r\nimport com.google.gson.annotations.SerializedName;\r\n\r\npublic class AddNewCustomerRequest {\r\n\r\n    @SerializedName(\"CustomerCreditCardDto\")\r\n    @Expose\r\n    private CustomerCreditCardDto customerCreditCardDto;\r\n    @SerializedName(\"LocationId\")\r\n    @Expose\r\n    private Integer locationId;\r\n    @SerializedName(\"Email\")\r\n    @Expose\r\n    private String email;\r\n    @SerializedName(\"Password\")\r\n    @Expose\r\n    private String password;\r\n    @SerializedName(\"Gender\")\r\n    @Expose\r\n    private String gender;\r\n    @SerializedName(\"FirstName\")\r\n    @Expose\r\n    private String firstName;\r\n    @SerializedName(\"LastName\")\r\n    @Expose\r\n    private String lastName;\r\n    @SerializedName(\"Address\")\r\n    @Expose\r\n    private String address;\r\n    @SerializedName(\"Address2\")\r\n    @Expose\r\n    private String address2;\r\n    @SerializedName(\"City\")\r\n    @Expose\r\n    private String city;\r\n    @SerializedName(\"StateCode\")\r\n    @Expose\r\n    private String stateCode;\r\n    @SerializedName(\"CountryCode\")\r\n    @Expose\r\n    private String countryCode;\r\n    @SerializedName(\"Zip\")\r\n    @Expose\r\n    private String zip;\r\n    @SerializedName(\"Phone\")\r\n    @Expose\r\n    private String phone;\r\n    @SerializedName(\"Mobile\")\r\n    @Expose\r\n    private String mobile;\r\n    @SerializedName(\"Birthday\")\r\n    @Expose\r\n    private String birthday;\r\n    @SerializedName(\"Nationality\")\r\n    @Expose\r\n    private String nationality;\r\n    @SerializedName(\"CityOfBirth\")\r\n    @Expose\r\n    private String cityOfBirth;\r\n    @SerializedName(\"NationalInsuranceNumber\")\r\n    @Expose\r\n    private String nationalInsuranceNumber;\r\n    @SerializedName(\"PassportType\")\r\n    @Expose\r\n    private String passportType;\r\n    @SerializedName(\"PassportNumber\")\r\n    @Expose\r\n    private String passportNumber;\r\n    @SerializedName(\"PassportCountryCode\")\r\n    @Expose\r\n    private String passportCountryCode;\r\n    @SerializedName(\"PassportExpiry\")\r\n    @Expose\r\n    private String passportExpiry;\r\n    @SerializedName(\"PassportIssuingDate\")\r\n    @Expose\r\n    private String passportIssuingDate;\r\n    @SerializedName(\"CompanyPhone\")\r\n    @Expose\r\n    private String companyPhone;\r\n    @SerializedName(\"DriverLicenseFullName\")\r\n    @Expose\r\n    private String driverLicenseFullName;\r\n    @SerializedName(\"LicenseNumber\")\r\n    @Expose\r\n    private String licenseNumber;\r\n    @SerializedName(\"LicenseStateCode\")\r\n    @Expose\r\n    private String licenseStateCode;\r\n    @SerializedName(\"LicenseCountryCode\")\r\n    @Expose\r\n    private String licenseCountryCode;\r\n    @SerializedName(\"LicenseExpiryDate\")\r\n    @Expose\r\n    private String licenseExpiryDate;\r\n    @SerializedName(\"EmailMarketingUnSubscribtion\")\r\n    @Expose\r\n    private Boolean emailMarketingUnSubscribtion;\r\n    @SerializedName(\"InsuranceCompany\")\r\n    @Expose\r\n    private String insuranceCompany;\r\n    @SerializedName(\"PolicyNumber\")\r\n    @Expose\r\n    private String policyNumber;\r\n    @SerializedName(\"MembershipTypeId\")\r\n    @Expose\r\n    private Integer membershipTypeId;\r\n    @SerializedName(\"TlcLicenceNumber\")\r\n    @Expose\r\n    private String tlcLicenceNumber;\r\n    @SerializedName(\"Ssn\")\r\n    @Expose\r\n    private String ssn;\r\n    @SerializedName(\"CustomerNotes\")\r\n    @Expose\r\n    private String customerNotes;\r\n    @SerializedName(\"Cvv\")\r\n    @Expose\r\n    private String cvv;\r\n    @SerializedName(\"CompanyId\")\r\n    @Expose\r\n    private Integer companyId;\r\n    @SerializedName(\"MobileRequestId\")\r\n    @Expose\r\n    private Integer mobileRequestId;\r\n    @SerializedName(\"Airport\")\r\n    @Expose\r\n    private String airport;\r\n    @SerializedName(\"Airline\")\r\n    @Expose\r\n    private String airline;\r\n    @SerializedName(\"FlightNumber\")\r\n    @Expose\r\n    private String flightNumber;\r\n    @SerializedName(\"localInformation\")\r\n    @Expose\r\n    private String localInformation;\r\n    @SerializedName(\"CompanyName\")\r\n    @Expose\r\n    private String companyName;\r\n\r\n    public AddNewCustomerRequest(CustomerCreditCardDto customerCreditCardDto,\r\n                                 Integer locationId,\r\n                                 String email,\r\n                                 String firstName,\r\n                                 String lastName,\r\n                                 String phone,\r\n                                 String licenseNumber,\r\n                                 String licenseStateCode,\r\n                                 String licenseCountryCode,\r\n                                 String licenseExpiryDate,\r\n                                 String dateOfBirth,\r\n                                 int companyId) {\r\n        this.customerCreditCardDto = customerCreditCardDto;\r\n        this.locationId = locationId;\r\n        this.email = email;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.phone = phone;\r\n        this.licenseNumber = licenseNumber;\r\n        this.licenseStateCode = licenseStateCode;\r\n        this.licenseCountryCode = licenseCountryCode;\r\n        this.licenseExpiryDate = licenseExpiryDate;\r\n        this.birthday = dateOfBirth;\r\n        this.companyId = companyId;\r\n    }\r\n\r\n    public AddNewCustomerRequest(String firstName,\r\n                                 String lastName,\r\n                                 String email,\r\n                                 String phone,\r\n                                 String birthday,\r\n                                 String address,\r\n                                 String city,\r\n                                 String stateCode,\r\n                                 String countryCode,\r\n                                 String zip,\r\n                                 String licenseNumber,\r\n                                 String licenseExpiryDate,\r\n                                 String licenseStateCode,\r\n                                 CustomerCreditCardDto customerCreditCardDto,\r\n                                 String companyName,\r\n                                 String companyPhone,\r\n                                 String insuranceCompany,\r\n                                 String policyNumber,\r\n                                 String ssn,\r\n                                 int mobileRequestId,\r\n                                 String airport,\r\n                                 String airline,\r\n                                 String flightNumber,\r\n                                 String localInformation) {\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.email = email;\r\n        this.phone = phone;\r\n        this.birthday = birthday;\r\n        this.address = address;\r\n        this.city = city;\r\n        this.stateCode = stateCode;\r\n        this.countryCode = countryCode;\r\n        this.zip = zip;\r\n        this.licenseNumber = licenseNumber;\r\n        this.licenseExpiryDate = licenseExpiryDate;\r\n        this.licenseStateCode = licenseStateCode;\r\n        this.customerCreditCardDto = customerCreditCardDto;\r\n        this.companyName = companyName;\r\n        this.companyPhone = companyPhone;\r\n        this.insuranceCompany = insuranceCompany;\r\n        this.policyNumber = policyNumber;\r\n        this.ssn = ssn;\r\n        this.mobileRequestId = mobileRequestId;\r\n        this.airport = airport;\r\n        this.flightNumber = flightNumber;\r\n        this.airline = airline;\r\n        this.localInformation = localInformation;\r\n    }\r\n\r\n    public CustomerCreditCardDto getCustomerCreditCardDto() {\r\n        return customerCreditCardDto;\r\n    }\r\n\r\n    public void setCustomerCreditCardDto(CustomerCreditCardDto customerCreditCardDto) {\r\n        this.customerCreditCardDto = customerCreditCardDto;\r\n    }\r\n\r\n    public Integer getLocationId() {\r\n        return locationId;\r\n    }\r\n\r\n    public void setLocationId(Integer locationId) {\r\n        this.locationId = locationId;\r\n    }\r\n\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public void setEmail(String email) {\r\n        this.email = email;\r\n    }\r\n\r\n    public String getPassword() {\r\n        return password;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n\r\n    public String getGender() {\r\n        return gender;\r\n    }\r\n\r\n    public void setGender(String gender) {\r\n        this.gender = gender;\r\n    }\r\n\r\n    public String getFirstName() {\r\n        return firstName;\r\n    }\r\n\r\n    public void setFirstName(String firstName) {\r\n        this.firstName = firstName;\r\n    }\r\n\r\n    public String getLastName() {\r\n        return lastName;\r\n    }\r\n\r\n    public void setLastName(String lastName) {\r\n        this.lastName = lastName;\r\n    }\r\n\r\n    public String getAddress() {\r\n        return address;\r\n    }\r\n\r\n    public void setAddress(String address) {\r\n        this.address = address;\r\n    }\r\n\r\n    public String getAddress2() {\r\n        return address2;\r\n    }\r\n\r\n    public void setAddress2(String address2) {\r\n        this.address2 = address2;\r\n    }\r\n\r\n    public String getCity() {\r\n        return city;\r\n    }\r\n\r\n    public void setCity(String city) {\r\n        this.city = city;\r\n    }\r\n\r\n    public String getStateCode() {\r\n        return stateCode;\r\n    }\r\n\r\n    public void setStateCode(String stateCode) {\r\n        this.stateCode = stateCode;\r\n    }\r\n\r\n    public String getCountryCode() {\r\n        return countryCode;\r\n    }\r\n\r\n    public void setCountryCode(String countryCode) {\r\n        this.countryCode = countryCode;\r\n    }\r\n\r\n    public String getZip() {\r\n        return zip;\r\n    }\r\n\r\n    public void setZip(String zip) {\r\n        this.zip = zip;\r\n    }\r\n\r\n    public String getPhone() {\r\n        return phone;\r\n    }\r\n\r\n    public void setPhone(String phone) {\r\n        this.phone = phone;\r\n    }\r\n\r\n    public String getMobile() {\r\n        return mobile;\r\n    }\r\n\r\n    public void setMobile(String mobile) {\r\n        this.mobile = mobile;\r\n    }\r\n\r\n    public String getBirthday() {\r\n        return birthday;\r\n    }\r\n\r\n    public void setBirthday(String birthday) {\r\n        this.birthday = birthday;\r\n    }\r\n\r\n    public String getNationality() {\r\n        return nationality;\r\n    }\r\n\r\n    public void setNationality(String nationality) {\r\n        this.nationality = nationality;\r\n    }\r\n\r\n    public String getCityOfBirth() {\r\n        return cityOfBirth;\r\n    }\r\n\r\n    public void setCityOfBirth(String cityOfBirth) {\r\n        this.cityOfBirth = cityOfBirth;\r\n    }\r\n\r\n    public String getNationalInsuranceNumber() {\r\n        return nationalInsuranceNumber;\r\n    }\r\n\r\n    public void setNationalInsuranceNumber(String nationalInsuranceNumber) {\r\n        this.nationalInsuranceNumber = nationalInsuranceNumber;\r\n    }\r\n\r\n    public String getPassportType() {\r\n        return passportType;\r\n    }\r\n\r\n    public void setPassportType(String passportType) {\r\n        this.passportType = passportType;\r\n    }\r\n\r\n    public String getPassportNumber() {\r\n        return passportNumber;\r\n    }\r\n\r\n    public void setPassportNumber(String passportNumber) {\r\n        this.passportNumber = passportNumber;\r\n    }\r\n\r\n    public String getPassportCountryCode() {\r\n        return passportCountryCode;\r\n    }\r\n\r\n    public void setPassportCountryCode(String passportCountryCode) {\r\n        this.passportCountryCode = passportCountryCode;\r\n    }\r\n\r\n    public String getPassportExpiry() {\r\n        return passportExpiry;\r\n    }\r\n\r\n    public void setPassportExpiry(String passportExpiry) {\r\n        this.passportExpiry = passportExpiry;\r\n    }\r\n\r\n    public String getPassportIssuingDate() {\r\n        return passportIssuingDate;\r\n    }\r\n\r\n    public void setPassportIssuingDate(String passportIssuingDate) {\r\n        this.passportIssuingDate = passportIssuingDate;\r\n    }\r\n\r\n    public String getCompanyPhone() {\r\n        return companyPhone;\r\n    }\r\n\r\n    public void setCompanyPhone(String companyPhone) {\r\n        this.companyPhone = companyPhone;\r\n    }\r\n\r\n    public String getDriverLicenseFullName() {\r\n        return driverLicenseFullName;\r\n    }\r\n\r\n    public void setDriverLicenseFullName(String driverLicenseFullName) {\r\n        this.driverLicenseFullName = driverLicenseFullName;\r\n    }\r\n\r\n    public String getLicenseNumber() {\r\n        return licenseNumber;\r\n    }\r\n\r\n    public void setLicenseNumber(String licenseNumber) {\r\n        this.licenseNumber = licenseNumber;\r\n    }\r\n\r\n    public String getLicenseStateCode() {\r\n        return licenseStateCode;\r\n    }\r\n\r\n    public void setLicenseStateCode(String licenseStateCode) {\r\n        this.licenseStateCode = licenseStateCode;\r\n    }\r\n\r\n    public String getLicenseCountryCode() {\r\n        return licenseCountryCode;\r\n    }\r\n\r\n    public void setLicenseCountryCode(String licenseCountryCode) {\r\n        this.licenseCountryCode = licenseCountryCode;\r\n    }\r\n\r\n    public String getLicenseExpiryDate() {\r\n        return licenseExpiryDate;\r\n    }\r\n\r\n    public void setLicenseExpiryDate(String licenseExpiryDate) {\r\n        this.licenseExpiryDate = licenseExpiryDate;\r\n    }\r\n\r\n    public Boolean getEmailMarketingUnSubscribtion() {\r\n        return emailMarketingUnSubscribtion;\r\n    }\r\n\r\n    public void setEmailMarketingUnSubscribtion(Boolean emailMarketingUnSubscribtion) {\r\n        this.emailMarketingUnSubscribtion = emailMarketingUnSubscribtion;\r\n    }\r\n\r\n    public String getInsuranceCompany() {\r\n        return insuranceCompany;\r\n    }\r\n\r\n    public void setInsuranceCompany(String insuranceCompany) {\r\n        this.insuranceCompany = insuranceCompany;\r\n    }\r\n\r\n    public String getPolicyNumber() {\r\n        return policyNumber;\r\n    }\r\n\r\n    public void setPolicyNumber(String policyNumber) {\r\n        this.policyNumber = policyNumber;\r\n    }\r\n\r\n    public Integer getMembershipTypeId() {\r\n        return membershipTypeId;\r\n    }\r\n\r\n    public void setMembershipTypeId(Integer membershipTypeId) {\r\n        this.membershipTypeId = membershipTypeId;\r\n    }\r\n\r\n    public String getTlcLicenceNumber() {\r\n        return tlcLicenceNumber;\r\n    }\r\n\r\n    public void setTlcLicenceNumber(String tlcLicenceNumber) {\r\n        this.tlcLicenceNumber = tlcLicenceNumber;\r\n    }\r\n\r\n    public String getSsn() {\r\n        return ssn;\r\n    }\r\n\r\n    public void setSsn(String ssn) {\r\n        this.ssn = ssn;\r\n    }\r\n\r\n    public String getCustomerNotes() {\r\n        return customerNotes;\r\n    }\r\n\r\n    public void setCustomerNotes(String customerNotes) {\r\n        this.customerNotes = customerNotes;\r\n    }\r\n\r\n    public String getCvv() {\r\n        return cvv;\r\n    }\r\n\r\n    public void setCvv(String cvv) {\r\n        this.cvv = cvv;\r\n    }\r\n\r\n    public Integer getCompanyId() {\r\n        return companyId;\r\n    }\r\n\r\n    public void setCompanyId(Integer companyId) {\r\n        this.companyId = companyId;\r\n    }\r\n\r\n    public String getAirport() {\r\n        return airport;\r\n    }\r\n\r\n    public void setAirport(String airport) {\r\n        this.airport = airport;\r\n    }\r\n\r\n    public String getAirline() {\r\n        return airline;\r\n    }\r\n\r\n    public void setAirline(String airline) {\r\n        this.airline = airline;\r\n    }\r\n\r\n    public String getFlightNumber() {\r\n        return flightNumber;\r\n    }\r\n\r\n    public void setFlightNumber(String flightNumber) {\r\n        this.flightNumber = flightNumber;\r\n    }\r\n\r\n    public String getLocalInformation() {\r\n        return localInformation;\r\n    }\r\n\r\n    public void setLocalInformation(String localInformation) {\r\n        this.localInformation = localInformation;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/AddNewCustomerRequest.java	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Models/Requests/AddNewCustomerRequest.java	(date 1609871077653)
@@ -142,6 +142,7 @@
     @Expose
     private String companyName;
 
+
     public AddNewCustomerRequest(CustomerCreditCardDto customerCreditCardDto,
                                  Integer locationId,
                                  String email,
Index: app/src/main/java/com/rentcentric/paperlesscounter/Activities/splash/SplashActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Activities/splash/SplashActivity.java	(date 1610625533030)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Activities/splash/SplashActivity.java	(date 1610625533030)
@@ -0,0 +1,129 @@
+package com.rentcentric.paperlesscounter.Activities.splash;
+
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Bundle;
+import androidx.appcompat.app.AlertDialog;
+import androidx.appcompat.app.AppCompatActivity;
+import android.view.View;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+
+import com.microsoft.appcenter.AppCenter;
+import com.microsoft.appcenter.analytics.Analytics;
+import com.microsoft.appcenter.crashes.Crashes;
+import com.rentcentric.paperlesscounter.Activities.LoginActivity;
+import com.rentcentric.paperlesscounter.Activities.MainActivity;
+import com.rentcentric.paperlesscounter.BuildConfig;
+import com.rentcentric.paperlesscounter.R;
+
+
+public class SplashActivity extends AppCompatActivity implements SplashActivityPresenter.View {
+    private static final String TAG = SplashActivity.class.getSimpleName() + "TAGG";
+
+    ProgressBar progressBar;
+    TextView retry, version;
+   SplashActivityPresenter splashActivityPresenter;
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_splash);
+
+        // init ui
+        version = findViewById(R.id.tv_version);
+        version.setText("version: " + BuildConfig.VERSION_NAME);
+
+        progressBar = findViewById(R.id.LoginProgressBar);
+        retry = findViewById(R.id.LoginRetry);
+
+        splashActivityPresenter = new SplashActivityPresenter(this, this);
+
+        splashActivityPresenter.checkAppVersion();
+
+        retry.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+//                if (splashActivityPresenter.isOnline()) {
+//                    splashActivityPresenter.checkLogin();
+//                }
+                splashActivityPresenter.checkAppVersion();
+
+            }
+        });
+
+        // AppCenter
+        AppCenter.start(getApplication(), "6820e617-ff1d-4916-909f-06afb0b2260e",
+                Analytics.class, Crashes.class);
+    }
+
+
+    @Override
+    public void showProgressBar() {
+        progressBar.setVisibility(View.VISIBLE);
+    }
+
+    @Override
+    public void hideProgressBar() {
+        progressBar.setVisibility(View.INVISIBLE);
+    }
+
+    @Override
+    public void showRetryButton() {
+        retry.setVisibility(View.VISIBLE);
+    }
+
+    @Override
+    public void hideRetryButton() {
+        retry.setVisibility(View.INVISIBLE);
+    }
+
+    @Override
+    public void goToLoginActivity() {
+        Intent intent = new Intent(SplashActivity.this, LoginActivity.class);
+        startActivity(intent);
+        finish();
+    }
+
+    @Override
+    public void goToHomeActivity() {
+        Intent intent = new Intent(SplashActivity.this, MainActivity.class);
+        startActivity(intent);
+        finish();
+    }
+
+    @Override
+    public void showAppUpdateDialog(String latestVersion) {
+        AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(this);
+
+        alertDialogBuilder.setTitle(getString(R.string.you_are_not_updated_title));
+        alertDialogBuilder.setMessage(getResources().getString(R.string.app_update_message, latestVersion));
+        alertDialogBuilder.setCancelable(false);
+
+        alertDialogBuilder.setPositiveButton(R.string.update, (dialog, id) -> {
+            this.startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse("market://details?id=" + this.getPackageName())));
+            //dialog.cancel();
+        });
+
+        alertDialogBuilder.show();
+    }
+
+    @Override
+    public void showError(String message) {
+        android.app.AlertDialog.Builder
+                alert = new android.app.AlertDialog.Builder(this);
+        alert.setPositiveButton(getResources().getString(R.string.ok), null);
+        alert.setCancelable(false);
+
+        alert.setMessage(message);
+        alert.show();
+    }
+
+    @Override
+    public void checkLogin() {
+        if (splashActivityPresenter.isOnline()) {
+            splashActivityPresenter.checkLogin();
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/rentcentric/paperlesscounter/Models/Responses/GetPaperLessTempChargeSummeryResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Models/Responses/GetPaperLessTempChargeSummeryResponse.java	(date 1610025939566)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Models/Responses/GetPaperLessTempChargeSummeryResponse.java	(date 1610025939566)
@@ -0,0 +1,51 @@
+package com.rentcentric.paperlesscounter.Models.Responses;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class GetPaperLessTempChargeSummeryResponse {
+    @SerializedName("Result")
+    @Expose
+    private String result;
+    @SerializedName("Description")
+    @Expose
+    private String description;
+    @SerializedName("ExceptionMessage")
+    @Expose
+    private String exceptionMessage;
+    @SerializedName("State")
+    @Expose
+    private Boolean state;
+
+    public String getResult() {
+        return result;
+    }
+
+    public void setResult(String result) {
+        this.result = result;
+    }
+
+    public String getDescription() {
+        return description;
+    }
+
+    public void setDescription(String description) {
+        this.description = description;
+    }
+
+    public String getExceptionMessage() {
+        return exceptionMessage;
+    }
+
+    public void setExceptionMessage(String exceptionMessage) {
+        this.exceptionMessage = exceptionMessage;
+    }
+
+    public Boolean getState() {
+        return state;
+    }
+
+    public void setState(Boolean state) {
+        this.state = state;
+    }
+}
Index: app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/PaperLessAdminLogOutCallBack.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.rentcentric.paperlesscounter.CallBacks;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Intent;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.widget.Toast;\r\n\r\nimport com.rentcentric.paperlesscounter.Activities.LoginActivity;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.PaperLessAdminLogOutRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.PaperLessAdminLogOutResponse;\r\nimport com.rentcentric.paperlesscounter.Network.RetrofitFactory;\r\nimport com.rentcentric.paperlesscounter.Preferences.LoginPreference;\r\nimport com.rentcentric.paperlesscounter.R;\r\nimport com.rentcentric.paperlesscounter.Utility.Extensions;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class PaperLessAdminLogOutCallBack implements Callback<PaperLessAdminLogOutResponse> {\r\n\r\n    private AppCompatActivity context;\r\n    private ProgressDialog progressDialog;\r\n    private LoginPreference loginPreference;\r\n\r\n    public PaperLessAdminLogOutCallBack(AppCompatActivity context, PaperLessAdminLogOutRequest request) {\r\n        this.context = context;\r\n        progressDialog = ProgressDialog.show(context, \"\", context.getString(R.string.loading));\r\n        loginPreference = new LoginPreference(context);\r\n        RetrofitFactory.getClientService(loginPreference.getServerName(),\r\n                loginPreference.getClientId(),\r\n                loginPreference.getToken()\r\n        ).paperLessAdminLogOut(request).enqueue(this);\r\n    }\r\n\r\n    @Override\r\n    public void onResponse(Call<PaperLessAdminLogOutResponse> call, Response<PaperLessAdminLogOutResponse> response) {\r\n        progressDialog.dismiss();\r\n        if (response.isSuccessful()) {\r\n            if (response.body() != null && response.body().getState() != null && response.body().getState().equals(true)) {\r\n                loginPreference.clearLoginData();\r\n                Intent intent = new Intent(context, LoginActivity.class);\r\n                context.startActivity(intent);\r\n                context.finish();\r\n            } else {\r\n                Extensions.Dialog(context, response.body() != null ? response.body().getDescription() : \"Error\");\r\n            }\r\n        } else {\r\n            Extensions.Dialog(context, context.getString(R.string.invalid_response) + \" (PaperLessAdminLogOut API)\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onFailure(Call<PaperLessAdminLogOutResponse> call, Throwable t) {\r\n        progressDialog.dismiss();\r\n        Toast.makeText(context, context.getString(R.string.server_connection_error), Toast.LENGTH_LONG).show();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/PaperLessAdminLogOutCallBack.java	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/PaperLessAdminLogOutCallBack.java	(date 1609872093728)
@@ -2,9 +2,10 @@
 
 import android.app.ProgressDialog;
 import android.content.Intent;
-import android.support.v7.app.AppCompatActivity;
 import android.widget.Toast;
 
+import androidx.appcompat.app.AppCompatActivity;
+
 import com.rentcentric.paperlesscounter.Activities.LoginActivity;
 import com.rentcentric.paperlesscounter.Models.Requests.PaperLessAdminLogOutRequest;
 import com.rentcentric.paperlesscounter.Models.Responses.PaperLessAdminLogOutResponse;
Index: app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/PaperLessSaveCustomerCheckInSignatureCallBack.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/PaperLessSaveCustomerCheckInSignatureCallBack.java	(date 1610631016232)
+++ app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/PaperLessSaveCustomerCheckInSignatureCallBack.java	(date 1610631016232)
@@ -0,0 +1,58 @@
+package com.rentcentric.paperlesscounter.CallBacks;
+
+import android.app.ProgressDialog;
+import android.widget.Toast;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import com.rentcentric.paperlesscounter.Activities.MainActivity;
+import com.rentcentric.paperlesscounter.Models.Requests.PaperLessSaveCustomerCheckInSignatureRequest;
+import com.rentcentric.paperlesscounter.Models.Requests.SaveCustomerSignatureRequest;
+import com.rentcentric.paperlesscounter.Models.Responses.PaperLessSaveCustomerCheckInSignatureResponse;
+import com.rentcentric.paperlesscounter.Models.Responses.SaveCustomerSignatureResponse;
+import com.rentcentric.paperlesscounter.Network.RetrofitFactory;
+import com.rentcentric.paperlesscounter.Preferences.LoginPreference;
+import com.rentcentric.paperlesscounter.R;
+import com.rentcentric.paperlesscounter.Utility.Extensions;
+
+import retrofit2.Call;
+import retrofit2.Callback;
+import retrofit2.Response;
+
+public class PaperLessSaveCustomerCheckInSignatureCallBack implements Callback<PaperLessSaveCustomerCheckInSignatureResponse> {
+
+    private AppCompatActivity context;
+    private ProgressDialog progressDialog;
+    private LoginPreference loginPreference;
+
+    public PaperLessSaveCustomerCheckInSignatureCallBack(AppCompatActivity context, PaperLessSaveCustomerCheckInSignatureRequest request) {
+        this.context = context;
+        progressDialog = ProgressDialog.show(context, "", context.getString(R.string.loading));
+        loginPreference = new LoginPreference(context);
+        RetrofitFactory.getClientService(
+                loginPreference.getServerName(),
+                loginPreference.getClientId(),
+                loginPreference.getToken()
+        ).saveCustomerSignatureForCheckIn(request).enqueue(this);
+    }
+
+    @Override
+    public void onResponse(Call<PaperLessSaveCustomerCheckInSignatureResponse> call, Response<PaperLessSaveCustomerCheckInSignatureResponse> response) {
+        progressDialog.dismiss();
+        if (response.isSuccessful()) {
+            if (response.body() != null && response.body().getState()) {
+                ((MainActivity) context).onSaveCustomerSignatureCallBack();
+            } else {
+                Extensions.Dialog(context, response.body().getDescription());
+            }
+        } else {
+            Extensions.Dialog(context, context.getString(R.string.invalid_response) + " (PaperLessSaveCustomerCheckInSignature API)");
+        }
+    }
+
+    @Override
+    public void onFailure(Call<PaperLessSaveCustomerCheckInSignatureResponse> call, Throwable t) {
+        progressDialog.dismiss();
+        Toast.makeText(context, context.getString(R.string.server_connection_error), Toast.LENGTH_LONG).show();
+    }
+}
Index: app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/SaveCustomerSignatureCallBack.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.rentcentric.paperlesscounter.CallBacks;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.widget.Toast;\r\n\r\nimport com.rentcentric.paperlesscounter.Activities.MainActivity;\r\nimport com.rentcentric.paperlesscounter.Preferences.LoginPreference;\r\nimport com.rentcentric.paperlesscounter.Utility.Extensions;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.SaveCustomerSignatureRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.SaveCustomerSignatureResponse;\r\nimport com.rentcentric.paperlesscounter.Network.RetrofitFactory;\r\nimport com.rentcentric.paperlesscounter.R;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class SaveCustomerSignatureCallBack implements Callback<SaveCustomerSignatureResponse> {\r\n\r\n    private AppCompatActivity context;\r\n    private ProgressDialog progressDialog;\r\n    private LoginPreference loginPreference;\r\n\r\n    public SaveCustomerSignatureCallBack(AppCompatActivity context, SaveCustomerSignatureRequest request) {\r\n        this.context = context;\r\n        progressDialog = ProgressDialog.show(context, \"\", context.getString(R.string.loading));\r\n        loginPreference = new LoginPreference(context);\r\n        RetrofitFactory.getOldClientService(loginPreference.getServerName(), loginPreference.getClientId()).saveCustomerSignature(request).enqueue(this);\r\n    }\r\n\r\n    @Override\r\n    public void onResponse(Call<SaveCustomerSignatureResponse> call, Response<SaveCustomerSignatureResponse> response) {\r\n        progressDialog.dismiss();\r\n        if (response.isSuccessful()) {\r\n            if (response.body().getStatusInfo().getStatusCode().equals(\"0\")) {\r\n                ((MainActivity) context).onSaveCustomerSignatureCallBack();\r\n            } else {\r\n                Extensions.Dialog(context, response.body().getStatusInfo().getDescription());\r\n            }\r\n        } else {\r\n            Extensions.Dialog(context, context.getString(R.string.invalid_response) + \" (SaveCustomerSignature API)\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onFailure(Call<SaveCustomerSignatureResponse> call, Throwable t) {\r\n        progressDialog.dismiss();\r\n        Toast.makeText(context, context.getString(R.string.server_connection_error), Toast.LENGTH_LONG).show();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/SaveCustomerSignatureCallBack.java	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/SaveCustomerSignatureCallBack.java	(date 1610385759726)
@@ -1,9 +1,10 @@
 package com.rentcentric.paperlesscounter.CallBacks;
 
 import android.app.ProgressDialog;
-import android.support.v7.app.AppCompatActivity;
 import android.widget.Toast;
 
+import androidx.appcompat.app.AppCompatActivity;
+
 import com.rentcentric.paperlesscounter.Activities.MainActivity;
 import com.rentcentric.paperlesscounter.Preferences.LoginPreference;
 import com.rentcentric.paperlesscounter.Utility.Extensions;
@@ -26,20 +27,24 @@
         this.context = context;
         progressDialog = ProgressDialog.show(context, "", context.getString(R.string.loading));
         loginPreference = new LoginPreference(context);
-        RetrofitFactory.getOldClientService(loginPreference.getServerName(), loginPreference.getClientId()).saveCustomerSignature(request).enqueue(this);
+        RetrofitFactory.getClientService(
+                loginPreference.getServerName(),
+                loginPreference.getClientId(),
+                loginPreference.getToken()
+        ).saveCustomerSignature(request).enqueue(this);
     }
 
     @Override
     public void onResponse(Call<SaveCustomerSignatureResponse> call, Response<SaveCustomerSignatureResponse> response) {
         progressDialog.dismiss();
         if (response.isSuccessful()) {
-            if (response.body().getStatusInfo().getStatusCode().equals("0")) {
+            if (response.body() != null && response.body().getState()) {
                 ((MainActivity) context).onSaveCustomerSignatureCallBack();
             } else {
-                Extensions.Dialog(context, response.body().getStatusInfo().getDescription());
+                Extensions.Dialog(context, response.body().getDescription());
             }
         } else {
-            Extensions.Dialog(context, context.getString(R.string.invalid_response) + " (SaveCustomerSignature API)");
+            Extensions.Dialog(context, context.getString(R.string.invalid_response) + " (PaperLessSaveCustomerSignature API)");
         }
     }
 
Index: app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/SaveSignatureSetupsCallback.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/SaveSignatureSetupsCallback.java	(date 1609962723084)
+++ app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/SaveSignatureSetupsCallback.java	(date 1609962723084)
@@ -0,0 +1,56 @@
+package com.rentcentric.paperlesscounter.CallBacks;
+
+import android.app.ProgressDialog;
+import android.widget.Toast;
+
+import com.rentcentric.paperlesscounter.Activities.MainActivity;
+import com.rentcentric.paperlesscounter.Models.Requests.SaveSignatureRequest;
+import com.rentcentric.paperlesscounter.Models.Responses.SaveSignatureResponse;
+import com.rentcentric.paperlesscounter.Network.RetrofitFactory;
+import com.rentcentric.paperlesscounter.Preferences.LoginPreference;
+import com.rentcentric.paperlesscounter.R;
+import com.rentcentric.paperlesscounter.Utility.Extensions;
+
+import retrofit2.Call;
+import retrofit2.Callback;
+import retrofit2.Response;
+
+public class SaveSignatureSetupsCallback implements Callback<SaveSignatureResponse> {
+    private MainActivity mainActivity;
+    private LoginPreference loginPreference;
+    private ProgressDialog progressDialog;
+
+    public SaveSignatureSetupsCallback(MainActivity mainActivity, SaveSignatureRequest saveSignatureRequest) {
+        this.mainActivity = mainActivity;
+        loginPreference = new LoginPreference(mainActivity);
+        progressDialog = ProgressDialog.show(mainActivity, "", mainActivity.getString(R.string.loading));
+        RetrofitFactory.getClientService(
+                loginPreference.getServerName(),
+                loginPreference.getClientId(),
+                loginPreference.getToken()
+        ).saveSignatureSetups(
+                saveSignatureRequest
+        ).enqueue(this);
+    }
+
+    @Override
+    public void onResponse(Call<SaveSignatureResponse> call, Response<SaveSignatureResponse> response) {
+        progressDialog.dismiss();
+        if (response.isSuccessful()) {
+            if (response.body() != null && response.body().getState()) {
+                // return signature list
+                mainActivity.onSaveSignaturesCallBack();
+            } else {
+                Toast.makeText(mainActivity, "SaveSignature API: " + response.body().getDescription(), Toast.LENGTH_LONG).show();
+            }
+        } else {
+            Extensions.Dialog(mainActivity, mainActivity.getString(R.string.invalid_response) + " (SaveSignature API)");
+        }
+    }
+
+    @Override
+    public void onFailure(Call<SaveSignatureResponse> call, Throwable t) {
+        progressDialog.dismiss();
+        Toast.makeText(mainActivity, mainActivity.getString(R.string.server_connection_error), Toast.LENGTH_LONG).show();
+    }
+}
Index: app/src/main/java/com/rentcentric/paperlesscounter/Activities/AdsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.rentcentric.paperlesscounter.Activities;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.os.Bundle;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.view.animation.AlphaAnimation;\r\nimport android.view.animation.Animation;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport com.rentcentric.paperlesscounter.CallBacks.GetPaperLessCounterAdsCallBack;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.GetPaperLessCounterAdsRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.GetPaperLessCounterAdsResponse;\r\nimport com.rentcentric.paperlesscounter.Network.RetrofitFactory;\r\nimport com.rentcentric.paperlesscounter.Preferences.LoginPreference;\r\nimport com.rentcentric.paperlesscounter.R;\r\nimport com.rentcentric.paperlesscounter.Utility.SwipeGesture;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class AdsActivity extends AppCompatActivity {\r\n    TextView tvSwipeMessage;\r\n    ImageView ivAdsImage;\r\n\r\n    List<String> adsImages = new ArrayList<>();\r\n    List<Integer> adsImagesDuration = new ArrayList<>();\r\n    int i;\r\n    private LoginPreference loginPreference;\r\n\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);\r\n        setContentView(R.layout.activity_ads);\r\n\r\n        tvSwipeMessage = findViewById(R.id.Ads_TV_SwipeMessage);\r\n\r\n        ivAdsImage = findViewById(R.id.Ads_IV_AdsImage);\r\n        ivAdsImage.setOnTouchListener(new SwipeGesture(AdsActivity.this) {\r\n            public void onSwipeTop() {\r\n                finish();\r\n            }\r\n\r\n            public void onSwipeRight() {\r\n                finish();\r\n            }\r\n\r\n            public void onSwipeLeft() {\r\n                finish();\r\n            }\r\n\r\n            public void onSwipeBottom() {\r\n                finish();\r\n            }\r\n\r\n        });\r\n\r\n        swipeMessageAnimation();\r\n\r\n        loginPreference = new LoginPreference(this);\r\n        new GetPaperLessCounterAdsCallBack(this, new GetPaperLessCounterAdsRequest(\r\n                loginPreference.getClientId(),\r\n                loginPreference.getServerName()));\r\n    }\r\n\r\n    private void swipeMessageAnimation() {\r\n        Animation anim = new AlphaAnimation(0.0f, 1.0f);\r\n        anim.setDuration(700);\r\n        anim.setStartOffset(500);\r\n        anim.setRepeatMode(Animation.REVERSE);\r\n        anim.setRepeatCount(Animation.INFINITE);\r\n        tvSwipeMessage.startAnimation(anim);\r\n    }\r\n\r\n    public void onGetPaperLessCounterAdsCallBack(GetPaperLessCounterAdsResponse response) {\r\n        if (response.getGetPaperLessCounterAdsResult().getPaperLessCounterAdsList() != null &&\r\n                response.getGetPaperLessCounterAdsResult().getPaperLessCounterAdsList().size() > 0) {\r\n            for (int i = 0; i < response.getGetPaperLessCounterAdsResult().getPaperLessCounterAdsList().size(); i++) {\r\n                adsImages.add(response.getGetPaperLessCounterAdsResult().getPaperLessCounterAdsList().get(i).getPaperImage());\r\n                adsImagesDuration.add(response.getGetPaperLessCounterAdsResult().getPaperLessCounterAdsList().get(i).getDuration());\r\n            }\r\n            Timer();\r\n        }\r\n    }\r\n\r\n    private void Timer() {\r\n        Thread t = new Thread() {\r\n            @Override\r\n            public void run() {\r\n                try {\r\n                    for (i = 1; i <= adsImages.size(); i++) {\r\n                        Thread.sleep(adsImagesDuration.get(i) * 1000);\r\n                        runOnUiThread(new Runnable() {\r\n                            @Override\r\n                            public void run() {\r\n                                Picasso.get().load(adsImages.get(i-1)).into(ivAdsImage);\r\n                                if (i == adsImages.size()) {\r\n                                    Timer();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        };\r\n        t.start();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Activities/AdsActivity.java	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Activities/AdsActivity.java	(date 1611236096176)
@@ -2,7 +2,6 @@
 
 import android.annotation.SuppressLint;
 import android.os.Bundle;
-import android.support.v7.app.AppCompatActivity;
 import android.view.Window;
 import android.view.WindowManager;
 import android.view.animation.AlphaAnimation;
@@ -10,10 +9,11 @@
 import android.widget.ImageView;
 import android.widget.TextView;
 
+import androidx.appcompat.app.AppCompatActivity;
+
 import com.rentcentric.paperlesscounter.CallBacks.GetPaperLessCounterAdsCallBack;
 import com.rentcentric.paperlesscounter.Models.Requests.GetPaperLessCounterAdsRequest;
 import com.rentcentric.paperlesscounter.Models.Responses.GetPaperLessCounterAdsResponse;
-import com.rentcentric.paperlesscounter.Network.RetrofitFactory;
 import com.rentcentric.paperlesscounter.Preferences.LoginPreference;
 import com.rentcentric.paperlesscounter.R;
 import com.rentcentric.paperlesscounter.Utility.SwipeGesture;
@@ -95,12 +95,14 @@
             @Override
             public void run() {
                 try {
-                    for (i = 1; i <= adsImages.size(); i++) {
+                    for (i = 0; i <= adsImages.size(); i++) {
                         Thread.sleep(adsImagesDuration.get(i) * 1000);
                         runOnUiThread(new Runnable() {
                             @Override
                             public void run() {
-                                Picasso.get().load(adsImages.get(i-1)).into(ivAdsImage);
+                                if(i - 1 >= 0)
+                                Picasso.get().load(adsImages.get(i - 1)).into(ivAdsImage);
+
                                 if (i == adsImages.size()) {
                                     Timer();
                                 }
@@ -114,4 +116,11 @@
         };
         t.start();
     }
+//
+//    @Override
+//    protected void onResume() {
+//        super.onResume();
+//
+//        i = 0;
+//    }
 }
\ No newline at end of file
Index: app/src/main/res/layout/activity_customer_information.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<android.support.constraint.ConstraintLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".Activities.CustomerInformationActivity\">\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/toolbar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"50dp\"\r\n        android:background=\"@color/colorPrimary\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/back_btn_iv\"\r\n            android:layout_width=\"30dp\"\r\n            android:layout_height=\"30dp\"\r\n            android:layout_centerVertical=\"true\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:src=\"@drawable/ic_chevron_left_black_24dp\"\r\n            tools:ignore=\"VectorDrawableCompat\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/toolbar_title_tv\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_centerInParent=\"true\"\r\n            android:gravity=\"center\"\r\n            android:text=\"Customer Information\"\r\n            android:textColor=\"@color/colorWhite\"\r\n            android:textSize=\"20sp\" />\r\n\r\n    </RelativeLayout>\r\n\r\n    <FrameLayout\r\n        android:id=\"@+id/fragmentContainer\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        android:layout_marginBottom=\"8dp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/submit_btn\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/toolbar\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/submit_btn\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginBottom=\"8dp\"\r\n        android:background=\"@drawable/button_blue\"\r\n        android:padding=\"5dp\"\r\n        android:text=\"Submit\"\r\n        android:textAllCaps=\"false\"\r\n        android:textColor=\"@color/colorWhite\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\" />\r\n</android.support.constraint.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_customer_information.xml	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/res/layout/activity_customer_information.xml	(date 1609873884468)
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
-<android.support.constraint.ConstraintLayout
+<androidx.constraintlayout.widget.ConstraintLayout
     xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
@@ -60,4 +60,4 @@
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent" />
-</android.support.constraint.ConstraintLayout>
\ No newline at end of file
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/GetMobileRequestsCallBack.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.rentcentric.paperlesscounter.CallBacks;\r\n\r\nimport android.support.v7.app.AppCompatActivity;\r\n\r\nimport com.rentcentric.paperlesscounter.Activities.MainActivity;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.GetMobileRequestsRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.GetMobileRequestsResponse;\r\nimport com.rentcentric.paperlesscounter.Network.RetrofitFactory;\r\nimport com.rentcentric.paperlesscounter.Preferences.LoginPreference;\r\nimport com.rentcentric.paperlesscounter.R;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class GetMobileRequestsCallBack implements Callback<GetMobileRequestsResponse> {\r\n\r\n    private AppCompatActivity context;\r\n    private LoginPreference loginPreference;\r\n\r\n    public GetMobileRequestsCallBack(AppCompatActivity context, GetMobileRequestsRequest request) {\r\n        this.context = context;\r\n        loginPreference = new LoginPreference(context);\r\n        RetrofitFactory.getClientService(loginPreference.getServerName(),\r\n                loginPreference.getClientId(),\r\n                loginPreference.getToken()\r\n        ).getMobileRequests(request).enqueue(this);\r\n    }\r\n\r\n    @Override\r\n    public void onResponse(Call<GetMobileRequestsResponse> call, Response<GetMobileRequestsResponse> response) {\r\n        if (response.isSuccessful()) {\r\n            if (response.body() != null) {\r\n                ((MainActivity) context).onGetMobileRequestsCallBack(response.body());\r\n            } else {\r\n                ((MainActivity) context).onGetCallBackError(response.body().getDescription());\r\n            }\r\n        } else {\r\n            ((MainActivity) context).onGetCallBackError((R.string.invalid_response) + \" (GetMobileRequests API)\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onFailure(Call<GetMobileRequestsResponse> call, Throwable t) {\r\n        ((MainActivity) context).onGetCallBackError(context.getString(R.string.server_connection_error));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/GetMobileRequestsCallBack.java	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/GetMobileRequestsCallBack.java	(date 1611239385606)
@@ -1,6 +1,7 @@
 package com.rentcentric.paperlesscounter.CallBacks;
+import android.widget.Toast;
 
-import android.support.v7.app.AppCompatActivity;
+import androidx.appcompat.app.AppCompatActivity;
 
 import com.rentcentric.paperlesscounter.Activities.MainActivity;
 import com.rentcentric.paperlesscounter.Models.Requests.GetMobileRequestsRequest;
@@ -35,7 +36,12 @@
             } else {
                 ((MainActivity) context).onGetCallBackError(response.body().getDescription());
             }
-        } else {
+        }
+        else if(response.code() == 401){
+//            Toast.makeText(context, "Your Activation Code is Not Valid.", Toast.LENGTH_LONG).show();
+            ((MainActivity) context).sessionExpiredLogout();
+        }
+        else {
             ((MainActivity) context).onGetCallBackError((R.string.invalid_response) + " (GetMobileRequests API)");
         }
     }
Index: app/src/main/java/com/rentcentric/paperlesscounter/Activities/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.rentcentric.paperlesscounter.Activities;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.os.Bundle;\r\nimport android.support.design.widget.NavigationView;\r\nimport android.support.v4.view.GravityCompat;\r\nimport android.support.v4.widget.DrawerLayout;\r\nimport android.support.v7.app.ActionBarDrawerToggle;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.support.v7.widget.Toolbar;\r\nimport android.util.Base64;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.webkit.WebView;\r\nimport android.widget.Button;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.facebook.stetho.Stetho;\r\nimport com.github.gcacace.signaturepad.views.SignaturePad;\r\nimport com.rentcentric.paperlesscounter.BuildConfig;\r\nimport com.rentcentric.paperlesscounter.CallBacks.GetMobileRequestsCallBack;\r\nimport com.rentcentric.paperlesscounter.CallBacks.GetPaperLessAgreementCallBack;\r\nimport com.rentcentric.paperlesscounter.CallBacks.PaperLessAdminLogOutCallBack;\r\nimport com.rentcentric.paperlesscounter.CallBacks.SaveCustomerSignatureCallBack;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.GetMobileRequestsRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.GetPaperLessAgreementRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.PaperLessAdminLogOutRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.SaveCustomerSignatureRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.GetMobileRequestsResponse;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.GetPaperLessAgreementResponse;\r\nimport com.rentcentric.paperlesscounter.Preferences.LoginPreference;\r\nimport com.rentcentric.paperlesscounter.R;\r\nimport com.rentcentric.paperlesscounter.Utility.Extensions;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\n\r\npublic class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener, View.OnClickListener {\r\n\r\n    DrawerLayout drawer;\r\n    RelativeLayout rlTimeoutContainer, rlNotFoundContainer, rlMainContainer;\r\n    LinearLayout llContractContainer;\r\n    TextView tvError, tvRetry, tvNavFullName, tvNavVersion, tvTimer;\r\n    ProgressBar pbMain;\r\n    WebView wvMain;\r\n    SignaturePad spMain;\r\n    Button btnCancel, btnSubmit;\r\n\r\n    int i;\r\n\r\n    private GetPaperLessAgreementResponse response;\r\n\r\n    private LoginPreference loginPreference;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        Stetho.initializeWithDefaults(this);\r\n\r\n        loginPreference = new LoginPreference(this);\r\n\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        getSupportActionBar().setTitle(\"Contract\");\r\n\r\n        drawer = findViewById(R.id.drawer_layout);\r\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);\r\n        drawer.addDrawerListener(toggle);\r\n        toggle.syncState();\r\n\r\n\r\n        NavigationView navigationView = findViewById(R.id.nav_view);\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n\r\n        View navHeader = navigationView.getHeaderView(0);\r\n\r\n\r\n        tvNavFullName = navHeader.findViewById(R.id.NavFullName);\r\n        tvNavVersion = navHeader.findViewById(R.id.NavVersion);\r\n\r\n        rlTimeoutContainer = findViewById(R.id.TimeoutContainer);\r\n        rlNotFoundContainer = findViewById(R.id.NotFoundContainer);\r\n        rlMainContainer = findViewById(R.id.MainContainer);\r\n\r\n        llContractContainer = findViewById(R.id.ContractContainer);\r\n\r\n        tvError = findViewById(R.id.TimeoutError);\r\n\r\n        tvRetry = findViewById(R.id.TimeoutRetry);\r\n        tvRetry.setOnClickListener(this);\r\n\r\n        tvTimer = findViewById(R.id.Main_TV_Timer);\r\n\r\n        pbMain = findViewById(R.id.Main_PB);\r\n\r\n        wvMain = findViewById(R.id.Main_WV);\r\n        wvMain.getSettings().setSupportZoom(true);\r\n        wvMain.getSettings().setBuiltInZoomControls(true);\r\n        wvMain.getSettings().setLoadWithOverviewMode(true);\r\n        wvMain.getSettings().setUseWideViewPort(true);\r\n        wvMain.getSettings().setAllowFileAccess(true);\r\n        wvMain.getSettings().setJavaScriptEnabled(true);\r\n\r\n        spMain = findViewById(R.id.Main_SP);\r\n\r\n        btnCancel = findViewById(R.id.Main_BTN_Cancel);\r\n        btnCancel.setOnClickListener(this);\r\n\r\n        btnSubmit = findViewById(R.id.Main_BTN_Submit);\r\n        btnSubmit.setOnClickListener(this);\r\n\r\n        tvNavFullName.setText(loginPreference.getFullName());\r\n        tvNavVersion.setText(\"Version \" + BuildConfig.VERSION_NAME);\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        pbMain.setVisibility(View.VISIBLE);\r\n        wvMain.loadUrl(\"about:blank\");\r\n\r\n        // check for requests\r\n        new GetMobileRequestsCallBack(\r\n                this,\r\n                new GetMobileRequestsRequest(\r\n                        loginPreference.getAdminId(),\r\n                        Integer.parseInt(loginPreference.getLocationId()),\r\n                        \"Paperless\"\r\n                )\r\n        );\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        switch (v.getId()) {\r\n\r\n            case R.id.TimeoutRetry:\r\n                Extensions.ReplaceContainers(4, rlTimeoutContainer, rlNotFoundContainer, rlMainContainer, pbMain);\r\n                onResume();\r\n                break;\r\n\r\n            case R.id.Main_BTN_Cancel:\r\n                spMain.clear();\r\n                startActivity(new Intent(MainActivity.this, AdsActivity.class));\r\n                break;\r\n\r\n            case R.id.Main_BTN_Submit:\r\n                if (spMain.isEmpty()) {\r\n                    Toast.makeText(this, \"Please sign your signature\", Toast.LENGTH_LONG).show();\r\n                } else {\r\n                    ByteArrayOutputStream bao = new ByteArrayOutputStream();\r\n                    spMain.getTransparentSignatureBitmap(true).compress(Bitmap.CompressFormat.PNG, 100, bao);\r\n                    byte[] signatureByteArray = bao.toByteArray();\r\n\r\n                    new SaveCustomerSignatureCallBack(this, new SaveCustomerSignatureRequest(\r\n                            response.getResult().getAdminId(),\r\n                            String.valueOf(response.getResult().getAgreementId()),\r\n                            String.valueOf(response.getResult().getAgreementSignId()),\r\n                            loginPreference.getLocationId(),\r\n                            loginPreference.getPaperlessAdminLoginId(),\r\n                            Base64.encodeToString(signatureByteArray, Base64.DEFAULT)));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean onNavigationItemSelected(MenuItem item) {\r\n        if (item.getItemId() == R.id.nav_logout) {\r\n            AlertDialog.Builder logoutDialog = new AlertDialog.Builder(MainActivity.this);\r\n            logoutDialog.setMessage(\"Are you sure you want to logout?\").setCancelable(false)\r\n                    .setPositiveButton(\"YES\", new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int which) {\r\n                            new PaperLessAdminLogOutCallBack(MainActivity.this,\r\n                                    new PaperLessAdminLogOutRequest(\r\n                                            Integer.parseInt(loginPreference.getPaperlessAdminLoginId()),\r\n                                            Integer.parseInt(loginPreference.getLocationId())\r\n                                    ));\r\n                        }\r\n                    }).setNegativeButton(\"NO\", new DialogInterface.OnClickListener() {\r\n                @Override\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    dialog.cancel();\r\n                }\r\n            });\r\n            AlertDialog alertDialog = logoutDialog.create();\r\n            alertDialog.show();\r\n        }\r\n        drawer.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        if (drawer.isDrawerOpen(GravityCompat.START)) {\r\n            drawer.closeDrawer(GravityCompat.START);\r\n        } else {\r\n            super.onBackPressed();\r\n        }\r\n    }\r\n\r\n\r\n    // todo -- handle this to be shown on agreemeents only\r\n    public void onGetPaperLessAgreementCallBack(GetPaperLessAgreementResponse response) {\r\n        if (!Extensions.isNullOrEmpty(response.getResult().getAgreementUrl()) && !response.getResult().getAgreementUrl().contains(\"AgreementFormID=0\")) {\r\n            this.response = response;\r\n            Extensions.ReplaceContainers(3, rlTimeoutContainer, rlNotFoundContainer, rlMainContainer, pbMain);\r\n\r\n            wvMain.loadUrl(response.getResult().getAgreementUrl());\r\n            LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(\r\n                    LinearLayout.LayoutParams.MATCH_PARENT,\r\n                    LinearLayout.LayoutParams.MATCH_PARENT,\r\n                    1.0f);\r\n            llContractContainer.setLayoutParams(params);\r\n        } else {\r\n            Extensions.ReplaceContainers(2, rlTimeoutContainer, rlNotFoundContainer, rlMainContainer, pbMain);\r\n            Timer();\r\n\r\n            LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(\r\n                    LinearLayout.LayoutParams.MATCH_PARENT,\r\n                    LinearLayout.LayoutParams.MATCH_PARENT,\r\n                    0.0f);\r\n            llContractContainer.setLayoutParams(params);\r\n        }\r\n    }\r\n\r\n    public void onGetMobileRequestsCallBack(GetMobileRequestsResponse response) {\r\n        if (response.getState() != null\r\n                && response.getState().equals(true)\r\n                && !Extensions.isNullOrEmpty(response.getResult().getRequestType())) {\r\n\r\n            Intent customerInformationIntent = new Intent(this, CustomerInformationActivity.class);\r\n            customerInformationIntent.putExtra(\"customerId\", response.getResult().getCustomerId());\r\n            customerInformationIntent.putExtra(\"mobileRequestId\", response.getResult().getMobileRequestId());\r\n\r\n            // handle request type\r\n            switch (response.getResult().getRequestType()) {\r\n                case \"Contract\":\r\n                    new GetPaperLessAgreementCallBack(this, new GetPaperLessAgreementRequest(\r\n                            Integer.parseInt(loginPreference.getPaperlessAdminLoginId()),\r\n                            loginPreference.getAdminId(),\r\n                            Integer.parseInt(loginPreference.getLocationId()),\r\n                            response.getResult().getMobileRequestId()));\r\n                    break;\r\n\r\n                case \"Create\":\r\n                    customerInformationIntent.putExtra(\"isCreateNewCustomer\", true);\r\n                    startActivity(customerInformationIntent);\r\n                    break;\r\n\r\n                case \"Update\":\r\n                    customerInformationIntent.putExtra(\"isCreateNewCustomer\", false);\r\n                    startActivity(customerInformationIntent);\r\n                    break;\r\n            }\r\n        } else {\r\n            Extensions.ReplaceContainers(2, rlTimeoutContainer, rlNotFoundContainer, rlMainContainer, pbMain);\r\n            Timer();\r\n            LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(\r\n                    LinearLayout.LayoutParams.MATCH_PARENT,\r\n                    LinearLayout.LayoutParams.MATCH_PARENT,\r\n                    0.0f);\r\n            llContractContainer.setLayoutParams(params);\r\n        }\r\n    }\r\n\r\n    public void onGetCallBackError(String error) {\r\n        Extensions.ReplaceContainers(1, rlTimeoutContainer, rlNotFoundContainer, rlMainContainer, pbMain);\r\n        tvError.setText(error);\r\n    }\r\n\r\n    private void Timer() {\r\n        tvTimer.setText(\"Going back to Ads page after 5 sec...\");\r\n        final Thread t = new Thread() {\r\n            @Override\r\n            public void run() {\r\n                try {\r\n                    i = 5;\r\n                    for (; i > 0; i--) {\r\n                        Log.v(\"okhttp\", \"i = \" + i);\r\n                        Thread.sleep(1000);\r\n                        runOnUiThread(new Runnable() {\r\n                            @Override\r\n                            public void run() {\r\n                                if (i != 1) {\r\n                                    tvTimer.setText(\"Going back to Ads page after \" + i + \" sec...\");\r\n                                } else {\r\n                                    startActivity(new Intent(MainActivity.this, AdsActivity.class));\r\n                                    i = 1;\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        };\r\n        t.start();\r\n    }\r\n\r\n    public void onSaveCustomerSignatureCallBack() {\r\n        spMain.clear();\r\n        startActivity(new Intent(this, AdsActivity.class));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Activities/MainActivity.java	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Activities/MainActivity.java	(date 1624629065316)
@@ -1,21 +1,17 @@
 package com.rentcentric.paperlesscounter.Activities;
 
+import android.app.Activity;
 import android.app.AlertDialog;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.graphics.Bitmap;
+import android.os.AsyncTask;
 import android.os.Bundle;
-import android.support.design.widget.NavigationView;
-import android.support.v4.view.GravityCompat;
-import android.support.v4.widget.DrawerLayout;
-import android.support.v7.app.ActionBarDrawerToggle;
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.Toolbar;
+import android.os.Environment;
 import android.util.Base64;
 import android.util.Log;
 import android.view.MenuItem;
 import android.view.View;
-import android.webkit.WebView;
 import android.widget.Button;
 import android.widget.LinearLayout;
 import android.widget.ProgressBar;
@@ -23,44 +19,90 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.ActionBarDrawerToggle;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.appcompat.widget.Toolbar;
+import androidx.core.view.GravityCompat;
+import androidx.drawerlayout.widget.DrawerLayout;
+
 import com.facebook.stetho.Stetho;
 import com.github.gcacace.signaturepad.views.SignaturePad;
+import com.google.android.material.navigation.NavigationView;
 import com.rentcentric.paperlesscounter.BuildConfig;
 import com.rentcentric.paperlesscounter.CallBacks.GetMobileRequestsCallBack;
 import com.rentcentric.paperlesscounter.CallBacks.GetPaperLessAgreementCallBack;
-import com.rentcentric.paperlesscounter.CallBacks.PaperLessAdminLogOutCallBack;
+import com.rentcentric.paperlesscounter.CallBacks.GetSignatureSetupCallBack;
+import com.rentcentric.paperlesscounter.CallBacks.PaperLessSaveCustomerCheckInSignatureCallBack;
 import com.rentcentric.paperlesscounter.CallBacks.SaveCustomerSignatureCallBack;
+import com.rentcentric.paperlesscounter.CallBacks.SaveSignatureSetupsCallback;
 import com.rentcentric.paperlesscounter.Models.Requests.GetMobileRequestsRequest;
 import com.rentcentric.paperlesscounter.Models.Requests.GetPaperLessAgreementRequest;
-import com.rentcentric.paperlesscounter.Models.Requests.PaperLessAdminLogOutRequest;
+import com.rentcentric.paperlesscounter.Models.Requests.PaperLessSaveCustomerCheckInSignatureRequest;
 import com.rentcentric.paperlesscounter.Models.Requests.SaveCustomerSignatureRequest;
+import com.rentcentric.paperlesscounter.Models.Requests.SaveSignatureRequest;
+import com.rentcentric.paperlesscounter.Models.Requests.Signature;
 import com.rentcentric.paperlesscounter.Models.Responses.GetMobileRequestsResponse;
 import com.rentcentric.paperlesscounter.Models.Responses.GetPaperLessAgreementResponse;
+import com.rentcentric.paperlesscounter.Models.Responses.SignatureSetup;
 import com.rentcentric.paperlesscounter.Preferences.LoginPreference;
 import com.rentcentric.paperlesscounter.R;
+import com.rentcentric.paperlesscounter.Utility.Const;
 import com.rentcentric.paperlesscounter.Utility.Extensions;
 
+import java.io.BufferedInputStream;
 import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.net.URL;
+import java.net.URLConnection;
+import java.util.ArrayList;
+import java.util.List;
+
+import im.delight.android.webview.AdvancedWebView;
 
-public class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener, View.OnClickListener {
+public class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener,
+        View.OnClickListener, AdvancedWebView.Listener {
+
+    public static MainActivity mainActivity;
 
     DrawerLayout drawer;
     RelativeLayout rlTimeoutContainer, rlNotFoundContainer, rlMainContainer;
     LinearLayout llContractContainer;
     TextView tvError, tvRetry, tvNavFullName, tvNavVersion, tvTimer;
-    ProgressBar pbMain;
-    WebView wvMain;
+    ProgressBar mainProgressBar;
+    AdvancedWebView mainWebView;
+    com.github.barteksc.pdfviewer.PDFView pdfView;
     SignaturePad spMain;
     Button btnCancel, btnSubmit;
 
+    private Thread timerThread;
+
     int i;
 
-    private GetPaperLessAgreementResponse response;
+    private GetPaperLessAgreementResponse getPaperLessAgreementResponse;
 
     private LoginPreference loginPreference;
+    private GetMobileRequestsResponse getMobileRequestsResponse;
+
+    // Signatures List (if Found)
+    public List<Signature> signaturesList = null;
+    public final static String INTENT_SIGNATURES_MAP = "signatures_map";
+    public final static int SIGNATURES_REQUEST_CODE = 0;
+    private boolean isSignaturesSigned = false;
+
+    public boolean showAds = false;
+    public boolean isWaitForContract = false;
+
+    private boolean isDrawerOpen = false;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        mainActivity = this;
+
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
 
@@ -70,20 +112,54 @@
 
         Toolbar toolbar = findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
-        getSupportActionBar().setTitle("Contract");
+        getSupportActionBar().setTitle(getString(R.string.app_name));
 
         drawer = findViewById(R.id.drawer_layout);
-        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
+        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
+                this,
+                drawer,
+                toolbar,
+                R.string.navigation_drawer_open,
+                R.string.navigation_drawer_close);
         drawer.addDrawerListener(toggle);
         toggle.syncState();
 
+        // drawer.open
+
+        drawer.addDrawerListener(new DrawerLayout.DrawerListener() {
+            @Override
+            public void onDrawerSlide(@NonNull View drawerView, float slideOffset) {
+
+            }
+
+            @Override
+            public void onDrawerOpened(@NonNull View drawerView) {
+                isDrawerOpen = true;
+            }
+
+            @Override
+            public void onDrawerClosed(@NonNull View drawerView) {
+                isDrawerOpen = false;
+                Extensions.ReplaceContainers(2, rlTimeoutContainer, rlNotFoundContainer, rlMainContainer, mainProgressBar);
+                startTimer();
+                LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(
+                        LinearLayout.LayoutParams.MATCH_PARENT,
+                        LinearLayout.LayoutParams.MATCH_PARENT,
+                        0.0f);
+                llContractContainer.setLayoutParams(params);
+            }
+
+            @Override
+            public void onDrawerStateChanged(int newState) {
+
+            }
+        });
 
         NavigationView navigationView = findViewById(R.id.nav_view);
         navigationView.setNavigationItemSelectedListener(this);
 
         View navHeader = navigationView.getHeaderView(0);
 
-
         tvNavFullName = navHeader.findViewById(R.id.NavFullName);
         tvNavVersion = navHeader.findViewById(R.id.NavVersion);
 
@@ -100,16 +176,14 @@
 
         tvTimer = findViewById(R.id.Main_TV_Timer);
 
-        pbMain = findViewById(R.id.Main_PB);
+        mainProgressBar = findViewById(R.id.Main_PB);
 
-        wvMain = findViewById(R.id.Main_WV);
-        wvMain.getSettings().setSupportZoom(true);
-        wvMain.getSettings().setBuiltInZoomControls(true);
-        wvMain.getSettings().setLoadWithOverviewMode(true);
-        wvMain.getSettings().setUseWideViewPort(true);
-        wvMain.getSettings().setAllowFileAccess(true);
-        wvMain.getSettings().setJavaScriptEnabled(true);
+        mainWebView = findViewById(R.id.Main_WV);
 
+        mainWebView.setListener(this, this);
+        mainWebView.setMixedContentAllowed(false);
+
+        pdfView = findViewById(R.id.pdfView);
         spMain = findViewById(R.id.Main_SP);
 
         btnCancel = findViewById(R.id.Main_BTN_Cancel);
@@ -122,29 +196,54 @@
         tvNavVersion.setText("Version " + BuildConfig.VERSION_NAME);
     }
 
+
+    void showToast(String msg) {
+        Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
+    }
+
     @Override
     protected void onResume() {
         super.onResume();
-        pbMain.setVisibility(View.VISIBLE);
-        wvMain.loadUrl("about:blank");
+        if (showAds) {
+            Extensions.ReplaceContainers(2, rlTimeoutContainer, rlNotFoundContainer, rlMainContainer, mainProgressBar);
+            startTimer();
+            LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(
+                    LinearLayout.LayoutParams.MATCH_PARENT,
+                    LinearLayout.LayoutParams.MATCH_PARENT,
+                    0.0f);
+            llContractContainer.setLayoutParams(params);
+            showAds = false;
+        } else if (signaturesList == null && !isSignaturesSigned) {
+            // reset
+            if (getSupportActionBar() != null)
+                getSupportActionBar().setTitle(getString(R.string.app_name));
+            pdfView.setVisibility(View.INVISIBLE);
+            mainWebView.setVisibility(View.INVISIBLE);
 
-        // check for requests
-        new GetMobileRequestsCallBack(
-                this,
-                new GetMobileRequestsRequest(
-                        loginPreference.getAdminId(),
-                        Integer.parseInt(loginPreference.getLocationId()),
-                        "Paperless"
-                )
-        );
-    }
+            // check for requests
+            new GetMobileRequestsCallBack(
+                    this,
+                    new GetMobileRequestsRequest(
+                            loginPreference.getAdminId(),
+                            Integer.parseInt(loginPreference.getLocationId()),
+                            "Paperless"
+                    )
+            );
+        }
 
+        if (isWaitForContract) {
+            Toast.makeText(this, "Please wait...\n" +
+                    "We are almost there", Toast.LENGTH_LONG).show();
+            isWaitForContract = false;
+        }
+    }
+
     @Override
     public void onClick(View v) {
         switch (v.getId()) {
 
             case R.id.TimeoutRetry:
-                Extensions.ReplaceContainers(4, rlTimeoutContainer, rlNotFoundContainer, rlMainContainer, pbMain);
+                Extensions.ReplaceContainers(4, rlTimeoutContainer, rlNotFoundContainer, rlMainContainer, mainProgressBar);
                 onResume();
                 break;
 
@@ -157,17 +256,50 @@
                 if (spMain.isEmpty()) {
                     Toast.makeText(this, "Please sign your signature", Toast.LENGTH_LONG).show();
                 } else {
-                    ByteArrayOutputStream bao = new ByteArrayOutputStream();
-                    spMain.getTransparentSignatureBitmap(true).compress(Bitmap.CompressFormat.PNG, 100, bao);
-                    byte[] signatureByteArray = bao.toByteArray();
+                    if (signaturesList != null) {
+                        new SaveSignatureSetupsCallback(
+                                this,
+                                new SaveSignatureRequest(
+                                        getPaperLessAgreementResponse.getResult().getAgreementId(),
+                                        signaturesList));
+                    } else {
+                        ByteArrayOutputStream bao = new ByteArrayOutputStream();
+                        spMain.getTransparentSignatureBitmap(true).compress(Bitmap.CompressFormat.PNG, 100, bao);
+                        byte[] signatureByteArray = bao.toByteArray();
 
-                    new SaveCustomerSignatureCallBack(this, new SaveCustomerSignatureRequest(
-                            response.getResult().getAdminId(),
-                            String.valueOf(response.getResult().getAgreementId()),
-                            String.valueOf(response.getResult().getAgreementSignId()),
-                            loginPreference.getLocationId(),
-                            loginPreference.getPaperlessAdminLoginId(),
-                            Base64.encodeToString(signatureByteArray, Base64.DEFAULT)));
+
+                        if (getMobileRequestsResponse.getResult().getRequestType().equals("Contract")) {
+                            new SaveCustomerSignatureCallBack(
+                                    this,
+                                    new SaveCustomerSignatureRequest(
+                                            getPaperLessAgreementResponse.getResult().getAdminId(),
+                                            getPaperLessAgreementResponse.getResult().getAgreementId(),
+                                            getPaperLessAgreementResponse.getResult().getAgreementSignId(),
+                                            Integer.valueOf(loginPreference.getLocationId()),
+                                            Integer.valueOf(loginPreference.getPaperlessAdminLoginId()),
+                                            Base64.encodeToString(signatureByteArray, Base64.DEFAULT),
+                                            getMobileRequestsResponse.getResult().getMobileRequestId(),
+                                            getPaperLessAgreementResponse.getResult().getAgreementUrl()
+                                    )
+                            );
+                        } else if (getMobileRequestsResponse.getResult().getRequestType().equals("Contract CheckIn")) {
+                            new PaperLessSaveCustomerCheckInSignatureCallBack(
+                                    this,
+                                    new PaperLessSaveCustomerCheckInSignatureRequest(
+                                            getPaperLessAgreementResponse.getResult().getAdminId(),
+                                            getPaperLessAgreementResponse.getResult().getAgreementId(),
+                                            getPaperLessAgreementResponse.getResult().getAgreementSignId(),
+                                            Integer.valueOf(loginPreference.getLocationId()),
+                                            Integer.valueOf(loginPreference.getPaperlessAdminLoginId()),
+                                            Base64.encodeToString(signatureByteArray, Base64.DEFAULT),
+                                            getMobileRequestsResponse.getResult().getMobileRequestId(),
+                                            getPaperLessAgreementResponse.getResult().getAgreementUrl()
+                                    )
+                            );
+                        }
+
+                    }
+
                 }
                 break;
         }
@@ -176,16 +308,16 @@
     @Override
     public boolean onNavigationItemSelected(MenuItem item) {
         if (item.getItemId() == R.id.nav_logout) {
+//           stopTimer();
             AlertDialog.Builder logoutDialog = new AlertDialog.Builder(MainActivity.this);
             logoutDialog.setMessage("Are you sure you want to logout?").setCancelable(false)
                     .setPositiveButton("YES", new DialogInterface.OnClickListener() {
                         @Override
                         public void onClick(DialogInterface dialog, int which) {
-                            new PaperLessAdminLogOutCallBack(MainActivity.this,
-                                    new PaperLessAdminLogOutRequest(
-                                            Integer.parseInt(loginPreference.getPaperlessAdminLoginId()),
-                                            Integer.parseInt(loginPreference.getLocationId())
-                                    ));
+                            loginPreference.clearLoginData();
+                            Intent intent = new Intent(MainActivity.this, LoginActivity.class);
+                            startActivity(intent);
+                            finish();
                         }
                     }).setNegativeButton("NO", new DialogInterface.OnClickListener() {
                 @Override
@@ -196,10 +328,30 @@
             AlertDialog alertDialog = logoutDialog.create();
             alertDialog.show();
         }
-        drawer.closeDrawer(GravityCompat.START);
+//        drawer.closeDrawer(GravityCompat.START);
         return true;
     }
 
+    public void logout() {
+        loginPreference.clearLoginData();
+        Intent intent = new Intent(MainActivity.this, LoginActivity.class);
+        startActivity(intent);
+        finish();
+    }
+
+    public void sessionExpiredLogout() {
+        AlertDialog.Builder logoutDialog = new AlertDialog.Builder(MainActivity.this);
+        logoutDialog.setMessage("Session Expired").setCancelable(false)
+                .setPositiveButton("OK", new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialog, int which) {
+                        logout();
+                    }
+                });
+        AlertDialog alertDialog = logoutDialog.create();
+        alertDialog.show();
+    }
+
     @Override
     public void onBackPressed() {
         if (drawer.isDrawerOpen(GravityCompat.START)) {
@@ -210,31 +362,80 @@
     }
 
 
-    // todo -- handle this to be shown on agreemeents only
-    public void onGetPaperLessAgreementCallBack(GetPaperLessAgreementResponse response) {
-        if (!Extensions.isNullOrEmpty(response.getResult().getAgreementUrl()) && !response.getResult().getAgreementUrl().contains("AgreementFormID=0")) {
-            this.response = response;
-            Extensions.ReplaceContainers(3, rlTimeoutContainer, rlNotFoundContainer, rlMainContainer, pbMain);
+    public void onGetPaperLessAgreementCallBack(GetPaperLessAgreementResponse getPaperLessAgreementResponse) {
+        if (getPaperLessAgreementResponse.getState()) {
+            if (!Extensions.isNullOrEmpty(getPaperLessAgreementResponse.getResult().getAgreementUrl())
+//                && !getPaperLessAgreementResponse.getResult().getAgreementUrl().contains("AgreementFormID=0")
+            ) {
+                this.getPaperLessAgreementResponse = getPaperLessAgreementResponse;
+                Extensions.ReplaceContainers(3, rlTimeoutContainer, rlNotFoundContainer, rlMainContainer, mainProgressBar);
+
+                mainProgressBar.setVisibility(View.VISIBLE);
+
+                if (getPaperLessAgreementResponse.getResult().getContractType().toLowerCase().equals("pdf")) {
+                    new DownloadFileFromURL().execute(getPaperLessAgreementResponse.getResult().getAgreementUrl());
+                } else {
+                    String contractURL = getPaperLessAgreementResponse.getResult().getAgreementUrl();
+                    if (contractURL.contains("http") && !contractURL.contains("https"))
+                        contractURL = contractURL.replace("http", "https");
+
+                    mainWebView.getSettings().setSupportZoom(true);
+                    mainWebView.getSettings().setBuiltInZoomControls(true);
+                    mainWebView.getSettings().setLoadWithOverviewMode(true);
+                    mainWebView.getSettings().setUseWideViewPort(true);
+                    mainWebView.getSettings().setAllowFileAccess(true);
+                    mainWebView.getSettings().setJavaScriptEnabled(true);
+                    mainWebView.getSettings().setAppCacheEnabled(true);
+                    mainWebView.loadUrl(contractURL);
+                }
 
-            wvMain.loadUrl(response.getResult().getAgreementUrl());
-            LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(
-                    LinearLayout.LayoutParams.MATCH_PARENT,
-                    LinearLayout.LayoutParams.MATCH_PARENT,
-                    1.0f);
-            llContractContainer.setLayoutParams(params);
-        } else {
-            Extensions.ReplaceContainers(2, rlTimeoutContainer, rlNotFoundContainer, rlMainContainer, pbMain);
-            Timer();
+
+                LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(
+                        LinearLayout.LayoutParams.MATCH_PARENT,
+                        LinearLayout.LayoutParams.MATCH_PARENT,
+                        1.0f);
+                llContractContainer.setLayoutParams(params);
+
+
+                if (getMobileRequestsResponse.getResult().getRequestType().equals("Contract"))
+                    new GetSignatureSetupCallBack(
+                            this,
+                            Integer.parseInt(loginPreference.getLocationId()),
+                            -1,
+                            getPaperLessAgreementResponse.getResult().getAgreementId());
+
+            } else {
+                Extensions.ReplaceContainers(2, rlTimeoutContainer, rlNotFoundContainer, rlMainContainer, mainProgressBar);
+                startTimer();
 
-            LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(
-                    LinearLayout.LayoutParams.MATCH_PARENT,
-                    LinearLayout.LayoutParams.MATCH_PARENT,
-                    0.0f);
-            llContractContainer.setLayoutParams(params);
+                LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(
+                        LinearLayout.LayoutParams.MATCH_PARENT,
+                        LinearLayout.LayoutParams.MATCH_PARENT,
+                        0.0f);
+                llContractContainer.setLayoutParams(params);
+            }
+        } else if (getPaperLessAgreementResponse.getDescription().equals("Please Login First")) {
+            // logout
+            AlertDialog.Builder logoutDialog = new AlertDialog.Builder(MainActivity.this);
+            logoutDialog.setMessage(getPaperLessAgreementResponse.getDescription()).setCancelable(false)
+                    .setPositiveButton("OK", new DialogInterface.OnClickListener() {
+                        @Override
+                        public void onClick(DialogInterface dialog, int which) {
+                            loginPreference.clearLoginData();
+                            Intent intent = new Intent(MainActivity.this, LoginActivity.class);
+                            startActivity(intent);
+                            finish();
+                        }
+                    });
+            AlertDialog alertDialog = logoutDialog.create();
+            alertDialog.show();
         }
+
     }
 
     public void onGetMobileRequestsCallBack(GetMobileRequestsResponse response) {
+        this.getMobileRequestsResponse = response;
+
         if (response.getState() != null
                 && response.getState().equals(true)
                 && !Extensions.isNullOrEmpty(response.getResult().getRequestType())) {
@@ -246,11 +447,15 @@
             // handle request type
             switch (response.getResult().getRequestType()) {
                 case "Contract":
-                    new GetPaperLessAgreementCallBack(this, new GetPaperLessAgreementRequest(
-                            Integer.parseInt(loginPreference.getPaperlessAdminLoginId()),
-                            loginPreference.getAdminId(),
-                            Integer.parseInt(loginPreference.getLocationId()),
-                            response.getResult().getMobileRequestId()));
+                    getSupportActionBar().setTitle("Contract");
+                    mainProgressBar.setVisibility(View.VISIBLE);
+                    new GetPaperLessAgreementCallBack(
+                            this,
+                            new GetPaperLessAgreementRequest(
+                                    Integer.parseInt(loginPreference.getPaperlessAdminLoginId()),
+                                    loginPreference.getAdminId(),
+                                    Integer.parseInt(loginPreference.getLocationId())));
+
                     break;
 
                 case "Create":
@@ -262,10 +467,61 @@
                     customerInformationIntent.putExtra("isCreateNewCustomer", false);
                     startActivity(customerInformationIntent);
                     break;
+
+                case "TempChargeSummery":
+                    startActivity(new Intent(this, ChargesSummaryActivity.class));
+                    break;
+
+                case "Contract CheckIn":
+                    // don't check on signature setups
+                    getSupportActionBar().setTitle("Contract");
+                    mainProgressBar.setVisibility(View.VISIBLE);
+                    new GetPaperLessAgreementCallBack(
+                            this,
+                            new GetPaperLessAgreementRequest(
+                                    Integer.parseInt(loginPreference.getPaperlessAdminLoginId()),
+                                    loginPreference.getAdminId(),
+                                    Integer.parseInt(loginPreference.getLocationId())));
+
+                    break;
+
             }
+        } else if (response.getDescription().equals("Session Expired, Please Log in")) {
+//            Extensions.ReplaceContainers(2, rlTimeoutContainer, rlNotFoundContainer, rlMainContainer, mainProgressBar);
+//            startTimer();
+//            LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(
+//                    LinearLayout.LayoutParams.MATCH_PARENT,
+//                    LinearLayout.LayoutParams.MATCH_PARENT,
+//                    0.0f);
+//            llContractContainer.setLayoutParams(params);
+
+            // logout
+            AlertDialog.Builder logoutDialog = new AlertDialog.Builder(MainActivity.this);
+            logoutDialog.setMessage(response.getDescription()).setCancelable(false)
+                    .setPositiveButton("OK", new DialogInterface.OnClickListener() {
+                        @Override
+                        public void onClick(DialogInterface dialog, int which) {
+                            logout();
+                        }
+                    });
+            AlertDialog alertDialog = logoutDialog.create();
+            alertDialog.show();
+        } else if (response.getDescription().equals("Your Rent Centric account is not subscribed to this service. Please contact Rent Centric Sales (sales@rentcentric.com) for additional information and to enable.")) {
+
+            // logout
+            AlertDialog.Builder logoutDialog = new AlertDialog.Builder(MainActivity.this);
+            logoutDialog.setMessage(response.getDescription()).setCancelable(false)
+                    .setPositiveButton("OK", new DialogInterface.OnClickListener() {
+                        @Override
+                        public void onClick(DialogInterface dialog, int which) {
+                            logout();
+                        }
+                    });
+            AlertDialog alertDialog = logoutDialog.create();
+            alertDialog.show();
         } else {
-            Extensions.ReplaceContainers(2, rlTimeoutContainer, rlNotFoundContainer, rlMainContainer, pbMain);
-            Timer();
+            Extensions.ReplaceContainers(2, rlTimeoutContainer, rlNotFoundContainer, rlMainContainer, mainProgressBar);
+            startTimer();
             LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(
                     LinearLayout.LayoutParams.MATCH_PARENT,
                     LinearLayout.LayoutParams.MATCH_PARENT,
@@ -275,11 +531,11 @@
     }
 
     public void onGetCallBackError(String error) {
-        Extensions.ReplaceContainers(1, rlTimeoutContainer, rlNotFoundContainer, rlMainContainer, pbMain);
+        Extensions.ReplaceContainers(1, rlTimeoutContainer, rlNotFoundContainer, rlMainContainer, mainProgressBar);
         tvError.setText(error);
     }
 
-    private void Timer() {
+    private void startTimer() {
         tvTimer.setText("Going back to Ads page after 5 sec...");
         final Thread t = new Thread() {
             @Override
@@ -292,11 +548,12 @@
                         runOnUiThread(new Runnable() {
                             @Override
                             public void run() {
-                                if (i != 1) {
-                                    tvTimer.setText("Going back to Ads page after " + i + " sec...");
+                                if (i == 0) {
+                                    if (!isDrawerOpen) {
+                                        startActivity(new Intent(MainActivity.this, AdsActivity.class));
+                                    }
                                 } else {
-                                    startActivity(new Intent(MainActivity.this, AdsActivity.class));
-                                    i = 1;
+                                    tvTimer.setText("Going back to Ads page after " + i + " sec...");
                                 }
                             }
                         });
@@ -309,8 +566,195 @@
         t.start();
     }
 
+    private void stopTimer() {
+        if (timerThread.isAlive())
+            timerThread.stop();
+    }
+
     public void onSaveCustomerSignatureCallBack() {
         spMain.clear();
         startActivity(new Intent(this, AdsActivity.class));
+        showToast("Signature uploaded successfully.");
+    }
+
+    public void onSaveSignaturesCallBack() {
+        // reset
+        signaturesList = null;
+        isSignaturesSigned = false;
+
+//        spMain.clear();
+
+//        startActivity(new Intent(this, AdsActivity.class));
+
+        ByteArrayOutputStream bao = new ByteArrayOutputStream();
+        spMain.getTransparentSignatureBitmap(true).compress(Bitmap.CompressFormat.PNG, 100, bao);
+        byte[] signatureByteArray = bao.toByteArray();
+
+        new SaveCustomerSignatureCallBack(
+                this,
+                new SaveCustomerSignatureRequest(
+                        getPaperLessAgreementResponse.getResult().getAdminId(),
+                        getPaperLessAgreementResponse.getResult().getAgreementId(),
+                        getPaperLessAgreementResponse.getResult().getAgreementSignId(),
+                        Integer.valueOf(loginPreference.getLocationId()),
+                        Integer.valueOf(loginPreference.getPaperlessAdminLoginId()),
+                        Base64.encodeToString(signatureByteArray, Base64.DEFAULT),
+                        getMobileRequestsResponse.getResult().getMobileRequestId(),
+                        getPaperLessAgreementResponse.getResult().getAgreementUrl()
+                )
+        );
+    }
+
+    public void onGetSignatureSetupSuccess(ArrayList<SignatureSetup> signaturesList) {
+        if (signaturesList != null) {
+            // go to signatures activity
+            Intent intent = new Intent(this, SignaturesActivity.class);
+            intent.putExtra(Const.INTENT_SIGNATURES_KEY, signaturesList);
+//            intent.putExtra(Const.INTENT_RESERVATION_ID, reservation.getReservationId());
+            startActivityForResult(intent, SIGNATURES_REQUEST_CODE);
+        }
+
+//        new GetPaperLessAgreementCallBack(
+//                this,
+//                new GetPaperLessAgreementRequest(
+//                        Integer.parseInt(loginPreference.getPaperlessAdminLoginId()),
+//                        loginPreference.getAdminId(),
+//                        Integer.parseInt(loginPreference.getLocationId())
+////                        getMobileRequestsResponse.getResult().getMobileRequestId()
+//                )
+//        );
+    }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+        if (requestCode == SIGNATURES_REQUEST_CODE) {
+            if (resultCode == Activity.RESULT_OK) {
+                if (data != null && data.getIntegerArrayListExtra(INTENT_SIGNATURES_MAP) != null) {
+                    signaturesList = data.getParcelableArrayListExtra(INTENT_SIGNATURES_MAP);
+                    isSignaturesSigned = true;
+                }
+            }
+        }
+    }
+
+
+    @Override
+    public void onPageStarted(String url, Bitmap favicon) {
+        Log.v("", "");
+    }
+
+    @Override
+    public void onPageFinished(String url) {
+        Log.v("", "");
+        mainProgressBar.setVisibility(View.INVISIBLE);
+        mainWebView.setVisibility(View.VISIBLE);
+    }
+
+    @Override
+    public void onPageError(int errorCode, String description, String failingUrl) {
+        Log.v("", "");
     }
+
+    @Override
+    public void onDownloadRequested(String url, String suggestedFilename, String mimeType, long contentLength, String contentDisposition, String userAgent) {
+//        Log.v("", "");
+//        new DownloadFileFromURL().execute(url);
+    }
+
+    @Override
+    public void onExternalPageRequest(String url) {
+        Log.v("", "");
+    }
+
+    class DownloadFileFromURL extends AsyncTask<String, String, String> {
+
+        /**
+         * Before starting background thread
+         */
+        @Override
+        protected void onPreExecute() {
+            super.onPreExecute();
+            System.out.println("Starting download");
+            mainProgressBar.setVisibility(View.VISIBLE);
+        }
+
+        /**
+         * Downloading file in background thread
+         */
+        @Override
+        protected String doInBackground(String... f_url) {
+            int count;
+            String filePath = "";
+            try {
+                String timeStamp = String.valueOf(System.currentTimeMillis());
+                String imageFileName = timeStamp + "_contract";
+                File storageDir = MainActivity.this.getExternalFilesDir(Environment.DIRECTORY_DOCUMENTS);
+                File pdfFile = File.createTempFile(
+                        imageFileName,  /* prefix */
+                        ".pdf",         /* suffix */
+                        storageDir      /* directory */
+                );
+
+                filePath = pdfFile.getPath();
+
+//                String root = Environment.getExternalStorageDirectory().toString();
+
+                System.out.println("Downloading");
+                URL url = new URL(f_url[0]);
+
+                URLConnection conection = url.openConnection();
+                conection.connect();
+                // getting file length
+                int lenghtOfFile = conection.getContentLength();
+
+                // input stream to read file - with 8k buffer
+                InputStream input = new BufferedInputStream(url.openStream(), 8192);
+
+                // Output stream to write file
+
+                OutputStream output = new FileOutputStream(pdfFile);
+                byte data[] = new byte[1024];
+
+                long total = 0;
+                while ((count = input.read(data)) != -1) {
+                    total += count;
+
+                    // writing data to file
+                    output.write(data, 0, count);
+
+                }
+
+                // flushing output
+                output.flush();
+
+                // closing streams
+                output.close();
+                input.close();
+
+            } catch (Exception e) {
+                Log.e("Error: ", e.getMessage());
+            }
+
+            return filePath;
+        }
+
+
+        /**
+         * After completing background task
+         **/
+        @Override
+        protected void onPostExecute(String file_path) {
+            System.out.println("Downloaded");
+            mainProgressBar.setVisibility(View.INVISIBLE);
+            mainWebView.setVisibility(View.INVISIBLE);
+            pdfView.setVisibility(View.VISIBLE);
+            pdfView.fromFile(new File(file_path))
+                    .enableSwipe(true)
+                    .enableAnnotationRendering(true)
+                    .swipeHorizontal(false)
+                    .load();
+        }
+    }
+
 }
\ No newline at end of file
Index: app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/GetPaperLessAgreementCallBack.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.rentcentric.paperlesscounter.CallBacks;\r\n\r\nimport android.support.v7.app.AppCompatActivity;\r\n\r\nimport com.rentcentric.paperlesscounter.Activities.MainActivity;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.GetPaperLessAgreementRequest;\r\nimport com.rentcentric.paperlesscounter.Models.Responses.GetPaperLessAgreementResponse;\r\nimport com.rentcentric.paperlesscounter.Network.RetrofitFactory;\r\nimport com.rentcentric.paperlesscounter.Preferences.LoginPreference;\r\nimport com.rentcentric.paperlesscounter.R;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class GetPaperLessAgreementCallBack implements Callback<GetPaperLessAgreementResponse> {\r\n\r\n    private AppCompatActivity context;\r\n    private LoginPreference loginPreference;\r\n\r\n    public GetPaperLessAgreementCallBack(AppCompatActivity context, GetPaperLessAgreementRequest request) {\r\n        this.context = context;\r\n        loginPreference = new LoginPreference(context);\r\n        RetrofitFactory.getClientService(\r\n                loginPreference.getServerName(),\r\n                loginPreference.getClientId(),\r\n                loginPreference.getToken()\r\n        ).getPaperLessAgreement(request).enqueue(this);\r\n    }\r\n\r\n    @Override\r\n    public void onResponse(Call<GetPaperLessAgreementResponse> call, Response<GetPaperLessAgreementResponse> response) {\r\n        if (response.isSuccessful()) {\r\n            if (response.body() != null && response.body().getState()) {\r\n                ((MainActivity) context).onGetPaperLessAgreementCallBack(response.body());\r\n            } else {\r\n                ((MainActivity) context).onGetCallBackError(response.body().getDescription());\r\n            }\r\n        } else {\r\n            ((MainActivity) context).onGetCallBackError(context.getString(R.string.invalid_response) + \" (PaperLessAgreement API)\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onFailure(Call<GetPaperLessAgreementResponse> call, Throwable t) {\r\n        ((MainActivity) context).onGetCallBackError(context.getString(R.string.server_connection_error));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/GetPaperLessAgreementCallBack.java	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/GetPaperLessAgreementCallBack.java	(date 1610906497644)
@@ -1,6 +1,6 @@
 package com.rentcentric.paperlesscounter.CallBacks;
 
-import android.support.v7.app.AppCompatActivity;
+import androidx.appcompat.app.AppCompatActivity;
 
 import com.rentcentric.paperlesscounter.Activities.MainActivity;
 import com.rentcentric.paperlesscounter.Models.Requests.GetPaperLessAgreementRequest;
@@ -14,7 +14,6 @@
 import retrofit2.Response;
 
 public class GetPaperLessAgreementCallBack implements Callback<GetPaperLessAgreementResponse> {
-
     private AppCompatActivity context;
     private LoginPreference loginPreference;
 
@@ -31,11 +30,12 @@
     @Override
     public void onResponse(Call<GetPaperLessAgreementResponse> call, Response<GetPaperLessAgreementResponse> response) {
         if (response.isSuccessful()) {
-            if (response.body() != null && response.body().getState()) {
+            if (response.body() != null) {
                 ((MainActivity) context).onGetPaperLessAgreementCallBack(response.body());
-            } else {
-                ((MainActivity) context).onGetCallBackError(response.body().getDescription());
             }
+//            else {
+//                ((MainActivity) context).onGetCallBackError(response.body().getDescription());
+//            }
         } else {
             ((MainActivity) context).onGetCallBackError(context.getString(R.string.invalid_response) + " (PaperLessAgreement API)");
         }
Index: gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Project-wide Gradle settings.\r\n# IDE (e.g. Android Studio) users:\r\n# Gradle settings configured through the IDE *will override*\r\n# any settings specified in this file.\r\n# For more details on how to configure your build environment visit\r\n# http://www.gradle.org/docs/current/userguide/build_environment.html\r\n# Specifies the JVM arguments used for the daemon process.\r\n# The setting is particularly useful for tweaking memory settings.\r\norg.gradle.jvmargs=-Xmx1536m\r\n# When configured, Gradle will run in incubating parallel mode.\r\n# This option should only be used with decoupled projects. More details, visit\r\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\r\n# org.gradle.parallel=true\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1256
===================================================================
--- gradle.properties	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ gradle.properties	(date 1611070341265)
@@ -6,10 +6,11 @@
 # http://www.gradle.org/docs/current/userguide/build_environment.html
 # Specifies the JVM arguments used for the daemon process.
 # The setting is particularly useful for tweaking memory settings.
-org.gradle.jvmargs=-Xmx1536m
+org.gradle.jvmargs=-Xmx4608m
 # When configured, Gradle will run in incubating parallel mode.
 # This option should only be used with decoupled projects. More details, visit
 # http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
 # org.gradle.parallel=true
-
+android.useAndroidX=true
+android.enableJetifier=true
 
Index: app/src/main/res/layout/activity_charges_summary.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_charges_summary.xml	(date 1611234023299)
+++ app/src/main/res/layout/activity_charges_summary.xml	(date 1611234023299)
@@ -0,0 +1,85 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    tools:context="com.rentcentric.paperlesscounter.Activities.ChargesSummaryActivity">
+
+    <RelativeLayout
+        android:id="@+id/toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="50dp"
+        android:layout_alignParentTop="true"
+        android:background="@color/colorPrimary">
+
+        <ImageView
+            android:id="@+id/btnBack"
+            android:layout_width="30dp"
+            android:layout_height="30dp"
+            android:layout_centerVertical="true"
+            android:layout_marginStart="10dp"
+            android:src="@drawable/ic_chevron_left_black_24dp"
+            tools:ignore="VectorDrawableCompat" />
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_centerInParent="true"
+            android:text="@string/charges_summary"
+            android:textColor="@color/colorWhite"
+            android:textSize="20sp" />
+
+    </RelativeLayout>
+
+    <WebView
+        android:id="@+id/webview"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_margin="5dp"
+        android:layout_below="@id/toolbar" />
+
+    <com.google.android.material.floatingactionbutton.FloatingActionButton
+        android:id="@+id/fab_refresh"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginEnd="16dp"
+        android:layout_marginBottom="8dp"
+        android:layout_above="@id/btn_agree"
+        android:layout_alignParentEnd="true"
+        android:src="@drawable/ic_baseline_refresh_24" />
+
+    <ProgressBar
+        android:id="@+id/progressBar"
+        style="?android:attr/progressBarStyle"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerInParent="true"/>
+
+
+    <TextView
+        android:id="@+id/tv_msg"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerInParent="true"
+        android:textAlignment="center"
+        android:text="Please wait... \nWe are preparing your contract"
+        android:visibility="gone"/>
+
+    <Button
+        android:id="@+id/btn_agree"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="8dp"
+        android:layout_marginEnd="8dp"
+        android:layout_marginStart="8dp"
+        android:background="@drawable/button_blue"
+        android:padding="5dp"
+        android:text="Agree and Sign"
+        android:textAllCaps="true"
+        android:textColor="@color/colorWhite"
+        android:layout_alignParentBottom="true"
+        android:layout_centerHorizontal="true"/>
+
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/GetPaperLessTempChargeSummeryCallBack.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/GetPaperLessTempChargeSummeryCallBack.java	(date 1610040687138)
+++ app/src/main/java/com/rentcentric/paperlesscounter/CallBacks/GetPaperLessTempChargeSummeryCallBack.java	(date 1610040687138)
@@ -0,0 +1,56 @@
+package com.rentcentric.paperlesscounter.CallBacks;
+
+import android.view.View;
+
+import com.rentcentric.paperlesscounter.Activities.ChargesSummaryActivity;
+import com.rentcentric.paperlesscounter.Models.Requests.GetPaperLessTempChargeSummeryRequest;
+import com.rentcentric.paperlesscounter.Models.Responses.GetPaperLessTempChargeSummeryResponse;
+import com.rentcentric.paperlesscounter.Network.RetrofitFactory;
+import com.rentcentric.paperlesscounter.Preferences.LoginPreference;
+import com.rentcentric.paperlesscounter.R;
+
+import retrofit2.Call;
+import retrofit2.Callback;
+import retrofit2.Response;
+
+public class GetPaperLessTempChargeSummeryCallBack implements Callback<GetPaperLessTempChargeSummeryResponse> {
+    private ChargesSummaryActivity chargesSummaryActivity;
+    private LoginPreference loginPreference;
+
+    public GetPaperLessTempChargeSummeryCallBack(
+            ChargesSummaryActivity chargesSummaryActivity) {
+        this.chargesSummaryActivity = chargesSummaryActivity;
+        loginPreference = new LoginPreference(chargesSummaryActivity);
+
+        chargesSummaryActivity.loadingPb.setVisibility(View.VISIBLE);
+
+        RetrofitFactory.getClientService(
+                loginPreference.getServerName(),
+                loginPreference.getClientId(),
+                loginPreference.getToken()
+        ).getPaperLessTempChargeSummery(
+                new GetPaperLessTempChargeSummeryRequest(loginPreference.getAdminId())
+        ).enqueue(this);
+    }
+
+    @Override
+    public void onResponse(Call<GetPaperLessTempChargeSummeryResponse> call, Response<GetPaperLessTempChargeSummeryResponse> response) {
+        chargesSummaryActivity.loadingPb.setVisibility(View.GONE);
+
+        if (response.isSuccessful()) {
+            if (response.body() != null && response.body().getState()) {
+                chargesSummaryActivity.onGetPaperLessChargesSummaryCallBack(response.body());
+            } else {
+                chargesSummaryActivity.onGetCallBackError(response.body().getDescription());
+            }
+        } else {
+            chargesSummaryActivity.onGetCallBackError(chargesSummaryActivity.getString(R.string.invalid_response) + " (GetPaperLessTempChargeSummery API)");
+        }
+    }
+
+    @Override
+    public void onFailure(Call<GetPaperLessTempChargeSummeryResponse> call, Throwable t) {
+        chargesSummaryActivity.loadingPb.setVisibility(View.GONE);
+        chargesSummaryActivity.onGetCallBackError(chargesSummaryActivity.getString(R.string.server_connection_error));
+    }
+}
Index: app/src/main/java/com/rentcentric/paperlesscounter/Models/Responses/SignatureSetup.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Models/Responses/SignatureSetup.java	(date 1609973935872)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Models/Responses/SignatureSetup.java	(date 1609973935872)
@@ -0,0 +1,199 @@
+package com.rentcentric.paperlesscounter.Models.Responses;
+
+import android.os.Parcel;
+import android.os.Parcelable;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+public class SignatureSetup implements Parcelable {
+
+    @SerializedName("ConditionID")
+    @Expose
+    private Integer conditionID;
+    @SerializedName("Disclaimer")
+    @Expose
+    private String disclaimer;
+    @SerializedName("InsuranceID")
+    @Expose
+    private Integer insuranceID;
+    @SerializedName("IsActive")
+    @Expose
+    private Boolean isActive;
+    @SerializedName("MiscChargeID")
+    @Expose
+    private Integer miscChargeID;
+    @SerializedName("SignatureCode")
+    @Expose
+    private String signatureCode;
+    @SerializedName("SignatureSetupId")
+    @Expose
+    private Integer signatureSetupID;
+    @SerializedName("SignatureTypeID")
+    @Expose
+    private Integer signatureTypeID;
+
+    protected SignatureSetup(Parcel in) {
+        if (in.readByte() == 0) {
+            conditionID = null;
+        } else {
+            conditionID = in.readInt();
+        }
+        disclaimer = in.readString();
+        if (in.readByte() == 0) {
+            insuranceID = null;
+        } else {
+            insuranceID = in.readInt();
+        }
+        byte tmpIsActive = in.readByte();
+        isActive = tmpIsActive == 0 ? null : tmpIsActive == 1;
+        if (in.readByte() == 0) {
+            miscChargeID = null;
+        } else {
+            miscChargeID = in.readInt();
+        }
+        signatureCode = in.readString();
+        if (in.readByte() == 0) {
+            signatureSetupID = null;
+        } else {
+            signatureSetupID = in.readInt();
+        }
+        if (in.readByte() == 0) {
+            signatureTypeID = null;
+        } else {
+            signatureTypeID = in.readInt();
+        }
+    }
+
+    @Override
+    public void writeToParcel(Parcel dest, int flags) {
+        if (conditionID == null) {
+            dest.writeByte((byte) 0);
+        } else {
+            dest.writeByte((byte) 1);
+            dest.writeInt(conditionID);
+        }
+        dest.writeString(disclaimer);
+        if (insuranceID == null) {
+            dest.writeByte((byte) 0);
+        } else {
+            dest.writeByte((byte) 1);
+            dest.writeInt(insuranceID);
+        }
+        dest.writeByte((byte) (isActive == null ? 0 : isActive ? 1 : 2));
+        if (miscChargeID == null) {
+            dest.writeByte((byte) 0);
+        } else {
+            dest.writeByte((byte) 1);
+            dest.writeInt(miscChargeID);
+        }
+        dest.writeString(signatureCode);
+        if (signatureSetupID == null) {
+            dest.writeByte((byte) 0);
+        } else {
+            dest.writeByte((byte) 1);
+            dest.writeInt(signatureSetupID);
+        }
+        if (signatureTypeID == null) {
+            dest.writeByte((byte) 0);
+        } else {
+            dest.writeByte((byte) 1);
+            dest.writeInt(signatureTypeID);
+        }
+    }
+
+    @Override
+    public int describeContents() {
+        return 0;
+    }
+
+    public static final Creator<SignatureSetup> CREATOR = new Creator<SignatureSetup>() {
+        @Override
+        public SignatureSetup createFromParcel(Parcel in) {
+            return new SignatureSetup(in);
+        }
+
+        @Override
+        public SignatureSetup[] newArray(int size) {
+            return new SignatureSetup[size];
+        }
+    };
+
+    public Integer getConditionID() {
+        return conditionID;
+    }
+
+    public void setConditionID(Integer conditionID) {
+        this.conditionID = conditionID;
+    }
+
+    public String getDisclaimer() {
+        return disclaimer;
+    }
+
+    public void setDisclaimer(String disclaimer) {
+        this.disclaimer = disclaimer;
+    }
+
+    public Integer getInsuranceID() {
+        return insuranceID;
+    }
+
+    public void setInsuranceID(Integer insuranceID) {
+        this.insuranceID = insuranceID;
+    }
+
+    public Boolean getIsActive() {
+        return isActive;
+    }
+
+    public void setIsActive(Boolean isActive) {
+        this.isActive = isActive;
+    }
+
+    public Integer getMiscChargeID() {
+        return miscChargeID;
+    }
+
+    public void setMiscChargeID(Integer miscChargeID) {
+        this.miscChargeID = miscChargeID;
+    }
+
+    public String getSignatureCode() {
+        return signatureCode;
+    }
+
+    public void setSignatureCode(String signatureCode) {
+        this.signatureCode = signatureCode;
+    }
+
+    public Integer getSignatureSetupID() {
+        return signatureSetupID;
+    }
+
+    public void setSignatureSetupID(Integer signatureSetupID) {
+        this.signatureSetupID = signatureSetupID;
+    }
+
+    public Integer getSignatureTypeID() {
+        return signatureTypeID;
+    }
+
+    public void setSignatureTypeID(Integer signatureTypeID) {
+        this.signatureTypeID = signatureTypeID;
+    }
+
+    @Override
+    public String toString() {
+        return "SignatureSetup{" +
+                "\"conditionID\" : " + conditionID +
+                ", \"disclaimer\" : " + disclaimer + "\"" +
+                ", \"insuranceID\" : " + insuranceID +
+                ", \"isActive\" : " + isActive +
+                ", \"miscChargeID\" : " + miscChargeID +
+                ", \"signatureCode\" : \"" + signatureCode + "\"" +
+                ", \"signatureSetupID\" : " + signatureSetupID +
+                ", \"signatureTypeID\" : " + signatureTypeID +
+                '}';
+    }
+}
Index: app/src/main/java/com/rentcentric/paperlesscounter/Activities/ChargesSummaryActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Activities/ChargesSummaryActivity.java	(date 1611241011514)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Activities/ChargesSummaryActivity.java	(date 1611241011514)
@@ -0,0 +1,127 @@
+package com.rentcentric.paperlesscounter.Activities;
+
+import android.os.Bundle;
+import android.util.Log;
+import android.view.KeyEvent;
+import android.view.View;
+import android.webkit.WebView;
+import android.widget.Button;
+import android.widget.ImageView;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import com.google.android.material.floatingactionbutton.FloatingActionButton;
+import com.rentcentric.paperlesscounter.CallBacks.GetPaperLessTempChargeSummeryCallBack;
+import com.rentcentric.paperlesscounter.Models.Responses.GetPaperLessTempChargeSummeryResponse;
+import com.rentcentric.paperlesscounter.R;
+
+public class ChargesSummaryActivity extends AppCompatActivity implements View.OnClickListener {
+    ImageView backImageView;
+    WebView webView;
+    public ProgressBar loadingPb;
+    FloatingActionButton refreshFAB;
+    Button agreeBtn;
+    TextView msgTextView;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_charges_summary);
+
+        initUI();
+    }
+
+    @Override
+    protected void onResume() {
+        super.onResume();
+        getChargesSummary();
+    }
+
+    void getChargesSummary() {
+        msgTextView.setVisibility(View.GONE);
+        webView.setVisibility(View.INVISIBLE);
+        new GetPaperLessTempChargeSummeryCallBack(this);
+    }
+
+    void initUI() {
+        backImageView = findViewById(R.id.btnBack);
+        backImageView.setOnClickListener(this);
+
+        webView = findViewById(R.id.webview);
+        webView.getSettings().setSupportZoom(true);
+        webView.getSettings().setBuiltInZoomControls(true);
+        webView.getSettings().setLoadWithOverviewMode(true);
+        webView.getSettings().setUseWideViewPort(true);
+        webView.getSettings().setAllowFileAccess(true);
+        webView.getSettings().setJavaScriptEnabled(true);
+        webView.getSettings().setAppCacheEnabled(true);
+
+        loadingPb = findViewById(R.id.progressBar);
+        refreshFAB = findViewById(R.id.fab_refresh);
+        refreshFAB.setOnClickListener(this);
+
+        agreeBtn = findViewById(R.id.btn_agree);
+        agreeBtn.setOnClickListener(this);
+
+        msgTextView = findViewById(R.id.tv_msg);
+    }
+
+    @Override
+    public void onClick(View v) {
+        switch (v.getId()) {
+            case R.id.btnBack:
+                MainActivity.mainActivity.showAds = true;
+                onBackPressed();
+                break;
+
+            case R.id.fab_refresh:
+                getChargesSummary();
+                break;
+
+            case R.id.btn_agree:
+                MainActivity.mainActivity.isWaitForContract = true;
+                onBackPressed();
+                break;
+        }
+    }
+
+    @Override
+    public boolean onKeyDown(int keyCode, KeyEvent event) {
+        if ((keyCode == KeyEvent.KEYCODE_BACK)) {
+            MainActivity.mainActivity.showAds = true;
+            onBackPressed();
+        }
+        return super.onKeyDown(keyCode, event);
+    }
+
+    public void onGetPaperLessChargesSummaryCallBack(GetPaperLessTempChargeSummeryResponse response) {
+        if (response.getResult() != null) {
+            String htmlString = response.getResult();
+            if (htmlString.contains(".")) {
+                // edit position and width
+                htmlString = htmlString.replace("style=\"\"", "style=\"width: 90%; margin-left: 20px; margin-right: 20px; margin-top:20px; font-size:35px\"");
+                // remove links
+                htmlString = htmlString.replace("href", "");
+
+                webView.loadDataWithBaseURL("", htmlString, "text/html", "UTF-8", "");
+                webView.setVisibility(View.VISIBLE);
+                msgTextView.setVisibility(View.GONE);
+            } else {
+                msgTextView.setVisibility(View.VISIBLE);
+            }
+        } else {
+            showToast("HTML not found (GetPaperLessTempChargeSummery API)");
+        }
+    }
+
+    public void onGetCallBackError(String error) {
+        showToast(error);
+    }
+
+    void showToast(String msg) {
+        Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/rentcentric/paperlesscounter/Activities/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.rentcentric.paperlesscounter.Activities;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.text.TextUtils;\r\nimport android.util.Patterns;\r\nimport android.view.View;\r\nimport android.widget.CheckBox;\r\nimport android.widget.EditText;\r\n\r\nimport com.rentcentric.paperlesscounter.BuildConfig;\r\nimport com.rentcentric.paperlesscounter.CallBacks.MobileUserLoginCallBack;\r\nimport com.rentcentric.paperlesscounter.Models.Requests.MobileUserLoginRequest;\r\nimport com.rentcentric.paperlesscounter.Preferences.LoginPreference;\r\nimport com.rentcentric.paperlesscounter.R;\r\n\r\nimport at.markushi.ui.CircleButton;\r\n\r\npublic class LoginActivity extends AppCompatActivity implements View.OnClickListener {\r\n\r\n    EditText etMail, etPassword;\r\n    CheckBox cbRememberMe;\r\n    CircleButton btnLogin;\r\n\r\n    LoginPreference loginPreference;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        etMail = findViewById(R.id.Login_ET_Mail);\r\n        etPassword = findViewById(R.id.Login_ET_Password);\r\n        cbRememberMe = findViewById(R.id.Login_CB_RememberMe);\r\n        btnLogin = findViewById(R.id.Login_BTN_Login);\r\n        btnLogin.setOnClickListener(this);\r\n\r\n        loginPreference = new LoginPreference(this);\r\n\r\n        if (!loginPreference.isSignedIn()) {\r\n            if (loginPreference.getRememberMe()) {\r\n                etMail.setText(loginPreference.getMail());\r\n                etPassword.setText(loginPreference.getPassword());\r\n                cbRememberMe.setChecked(true);\r\n            }\r\n            if (BuildConfig.DEBUG) {\r\n                etMail.setText(\"RCQA125@rentcentric.com\");\r\n                etPassword.setText(\"3OmpYcx47q\");\r\n\r\n                // client 7081 - renty\r\n//                etMail.setText(\"sean@renty.biz\");\r\n//                etPassword.setText(\"Tiq5pe\");\r\n            }\r\n        } else {\r\n            Intent intent = new Intent(this, MainActivity.class);\r\n            startActivity(intent);\r\n            finish();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        switch (v.getId()) {\r\n            case R.id.Login_BTN_Login:\r\n                if (TextUtils.isEmpty(etMail.getText())) {\r\n                    etMail.setError(\"Set E-Mail Address\");\r\n                    etMail.requestFocus();\r\n                } else if (!Patterns.EMAIL_ADDRESS.matcher(etMail.getText().toString()).matches()) {\r\n                    etMail.setError(\"Invalid E-Mail Address\");\r\n                    etMail.requestFocus();\r\n                } else if (TextUtils.isEmpty(etPassword.getText())) {\r\n                    etPassword.setError(\"Set Password\");\r\n                    etPassword.requestFocus();\r\n                } else {\r\n                    if (cbRememberMe.isChecked()) {\r\n                        loginPreference.setMail(etMail.getText().toString());\r\n                        loginPreference.setPassword(etPassword.getText().toString());\r\n                        loginPreference.setRememberMe(true);\r\n                    } else if (!cbRememberMe.isChecked()) {\r\n                        loginPreference.setRememberMe(false);\r\n                        loginPreference.setMail(\"\");\r\n                        loginPreference.setPassword(\"\");\r\n                    }\r\n\r\n                    new MobileUserLoginCallBack(this, new MobileUserLoginRequest(\r\n                            etMail.getText().toString(),\r\n                            etPassword.getText().toString()));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rentcentric/paperlesscounter/Activities/LoginActivity.java	(revision b2e65a514c9a31bd4e59b02b2d6b921137eacc70)
+++ app/src/main/java/com/rentcentric/paperlesscounter/Activities/LoginActivity.java	(date 1624630377392)
@@ -2,13 +2,14 @@
 
 import android.content.Intent;
 import android.os.Bundle;
-import android.support.v7.app.AppCompatActivity;
 import android.text.TextUtils;
 import android.util.Patterns;
 import android.view.View;
 import android.widget.CheckBox;
 import android.widget.EditText;
 
+import androidx.appcompat.app.AppCompatActivity;
+
 import com.rentcentric.paperlesscounter.BuildConfig;
 import com.rentcentric.paperlesscounter.CallBacks.MobileUserLoginCallBack;
 import com.rentcentric.paperlesscounter.Models.Requests.MobileUserLoginRequest;
@@ -45,12 +46,26 @@
                 cbRememberMe.setChecked(true);
             }
             if (BuildConfig.DEBUG) {
-                etMail.setText("RCQA125@rentcentric.com");
-                etPassword.setText("3OmpYcx47q");
+                // client 7178 - test
+//                etMail.setText("mobileagenttest@rentcentric.com");
+//                etPassword.setText("Welcome123");
+
+//                etMail.setText("ahmed.fattoh@rentcentric.com");
+//                etPassword.setText("Rent45");
+//
+//                etMail.setText("mohamed.mabrook@rentcentric.com");
+//                etPassword.setText("Rent45");
 
                 // client 7081 - renty
 //                etMail.setText("sean@renty.biz");
 //                etPassword.setText("Tiq5pe");
+
+                // client 7040
+//                etMail.setText("AAASupportTHEVillages@rentcentric.com");
+//                etPassword.setText("Rent45");
+
+//                etMail.setText("ian@familyautos.ca");
+//                etPassword.setText("Crazy888");
             }
         } else {
             Intent intent = new Intent(this, MainActivity.class);
